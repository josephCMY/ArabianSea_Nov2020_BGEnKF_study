# Machine generated, do not edit

FILE=${1:-namelist.input}

echo \&time_control >> $FILE
if test ! -z "$NL_RUN_DAYS"; then echo "run_days=${NL_RUN_DAYS}," >> $FILE;fi
if test ! -z "$NL_RUN_HOURS"; then echo "run_hours=${NL_RUN_HOURS}," >> $FILE;fi
if test ! -z "$NL_RUN_MINUTES"; then echo "run_minutes=${NL_RUN_MINUTES}," >> $FILE;fi
if test ! -z "$NL_RUN_SECONDS"; then echo "run_seconds=${NL_RUN_SECONDS}," >> $FILE;fi
if test ! -z "$NL_START_YEAR"; then echo "start_year=${NL_START_YEAR}," >> $FILE;fi
if test ! -z "$NL_START_MONTH"; then echo "start_month=${NL_START_MONTH}," >> $FILE;fi
if test ! -z "$NL_START_DAY"; then echo "start_day=${NL_START_DAY}," >> $FILE;fi
if test ! -z "$NL_START_HOUR"; then echo "start_hour=${NL_START_HOUR}," >> $FILE;fi
if test ! -z "$NL_START_MINUTE"; then echo "start_minute=${NL_START_MINUTE}," >> $FILE;fi
if test ! -z "$NL_START_SECOND"; then echo "start_second=${NL_START_SECOND}," >> $FILE;fi
if test ! -z "$NL_END_YEAR"; then echo "end_year=${NL_END_YEAR}," >> $FILE;fi
if test ! -z "$NL_END_MONTH"; then echo "end_month=${NL_END_MONTH}," >> $FILE;fi
if test ! -z "$NL_END_DAY"; then echo "end_day=${NL_END_DAY}," >> $FILE;fi
if test ! -z "$NL_END_HOUR"; then echo "end_hour=${NL_END_HOUR}," >> $FILE;fi
if test ! -z "$NL_END_MINUTE"; then echo "end_minute=${NL_END_MINUTE}," >> $FILE;fi
if test ! -z "$NL_END_SECOND"; then echo "end_second=${NL_END_SECOND}," >> $FILE;fi
if test ! -z "$NL_INTERVAL_SECONDS"; then echo "interval_seconds=${NL_INTERVAL_SECONDS}," >> $FILE;fi
if test ! -z "$NL_INPUT_FROM_FILE"; then echo "input_from_file=${NL_INPUT_FROM_FILE}," >> $FILE;fi
if test ! -z "$NL_FINE_INPUT_STREAM"; then echo "fine_input_stream=${NL_FINE_INPUT_STREAM}," >> $FILE;fi
if test ! -z "$NL_INPUT_FROM_HIRES"; then echo "input_from_hires=${NL_INPUT_FROM_HIRES}," >> $FILE;fi
if test ! -z "$NL_RSMAS_DATA_PATH"; then echo "rsmas_data_path=\"${NL_RSMAS_DATA_PATH}\"," >> $FILE;fi
if test ! -z "$NL_ALL_IC_TIMES"; then echo "all_ic_times=${NL_ALL_IC_TIMES}," >> $FILE;fi
if test ! -z "$NL_JULYR"; then echo "julyr=${NL_JULYR}," >> $FILE;fi
if test ! -z "$NL_JULDAY"; then echo "julday=${NL_JULDAY}," >> $FILE;fi
if test ! -z "$NL_GMT"; then echo "gmt=${NL_GMT}," >> $FILE;fi
if test ! -z "$NL_INPUT_INNAME"; then echo "input_inname=\"${NL_INPUT_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_INPUT_OUTNAME"; then echo "input_outname=\"${NL_INPUT_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_BDY_INNAME"; then echo "bdy_inname=\"${NL_BDY_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_BDY_OUTNAME"; then echo "bdy_outname=\"${NL_BDY_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_RST_INNAME"; then echo "rst_inname=\"${NL_RST_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_RST_OUTNAME"; then echo "rst_outname=\"${NL_RST_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_WRITE_INPUT"; then echo "write_input=${NL_WRITE_INPUT}," >> $FILE;fi
if test ! -z "$NL_WRITE_RESTART_AT_0H"; then echo "write_restart_at_0h=${NL_WRITE_RESTART_AT_0H}," >> $FILE;fi
if test ! -z "$NL_WRITE_HIST_AT_0H_RST"; then echo "write_hist_at_0h_rst=${NL_WRITE_HIST_AT_0H_RST}," >> $FILE;fi
if test ! -z "$NL_ADJUST_OUTPUT_TIMES"; then echo "adjust_output_times=${NL_ADJUST_OUTPUT_TIMES}," >> $FILE;fi
if test ! -z "$NL_ADJUST_INPUT_TIMES"; then echo "adjust_input_times=${NL_ADJUST_INPUT_TIMES}," >> $FILE;fi
if test ! -z "$NL_DIAG_PRINT"; then echo "diag_print=${NL_DIAG_PRINT}," >> $FILE;fi
if test ! -z "$NL_NOCOLONS"; then echo "nocolons=${NL_NOCOLONS}," >> $FILE;fi
if test ! -z "$NL_CYCLING"; then echo "cycling=${NL_CYCLING}," >> $FILE;fi
if test ! -z "$NL_OUTPUT_DIAGNOSTICS"; then echo "output_diagnostics=${NL_OUTPUT_DIAGNOSTICS}," >> $FILE;fi
if test ! -z "$NL_NWP_DIAGNOSTICS"; then echo "nwp_diagnostics=${NL_NWP_DIAGNOSTICS}," >> $FILE;fi
if test ! -z "$NL_OUTPUT_READY_FLAG"; then echo "output_ready_flag=${NL_OUTPUT_READY_FLAG}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INNAME"; then echo "auxinput1_inname=\"${NL_AUXINPUT1_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT1"; then echo "io_form_auxinput1=${NL_IO_FORM_AUXINPUT1}," >> $FILE;fi
if test ! -z "$NL_OVERRIDE_RESTART_TIMERS"; then echo "override_restart_timers=${NL_OVERRIDE_RESTART_TIMERS}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INNAME"; then echo "auxhist1_inname=\"${NL_AUXHIST1_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_OUTNAME"; then echo "auxhist1_outname=\"${NL_AUXHIST1_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_Y"; then echo "auxhist1_interval_y=${NL_AUXHIST1_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_D"; then echo "auxhist1_interval_d=${NL_AUXHIST1_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_H"; then echo "auxhist1_interval_h=${NL_AUXHIST1_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_M"; then echo "auxhist1_interval_m=${NL_AUXHIST1_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_S"; then echo "auxhist1_interval_s=${NL_AUXHIST1_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL"; then echo "auxhist1_interval=${NL_AUXHIST1_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_Y"; then echo "auxhist1_begin_y=${NL_AUXHIST1_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_D"; then echo "auxhist1_begin_d=${NL_AUXHIST1_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_H"; then echo "auxhist1_begin_h=${NL_AUXHIST1_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_M"; then echo "auxhist1_begin_m=${NL_AUXHIST1_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_S"; then echo "auxhist1_begin_s=${NL_AUXHIST1_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN"; then echo "auxhist1_begin=${NL_AUXHIST1_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_Y"; then echo "auxhist1_end_y=${NL_AUXHIST1_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_D"; then echo "auxhist1_end_d=${NL_AUXHIST1_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_H"; then echo "auxhist1_end_h=${NL_AUXHIST1_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_M"; then echo "auxhist1_end_m=${NL_AUXHIST1_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_S"; then echo "auxhist1_end_s=${NL_AUXHIST1_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END"; then echo "auxhist1_end=${NL_AUXHIST1_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST1"; then echo "io_form_auxhist1=${NL_IO_FORM_AUXHIST1}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST1"; then echo "frames_per_auxhist1=${NL_FRAMES_PER_AUXHIST1}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INNAME"; then echo "auxhist2_inname=\"${NL_AUXHIST2_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_OUTNAME"; then echo "auxhist2_outname=\"${NL_AUXHIST2_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_Y"; then echo "auxhist2_interval_y=${NL_AUXHIST2_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_D"; then echo "auxhist2_interval_d=${NL_AUXHIST2_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_H"; then echo "auxhist2_interval_h=${NL_AUXHIST2_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_M"; then echo "auxhist2_interval_m=${NL_AUXHIST2_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_S"; then echo "auxhist2_interval_s=${NL_AUXHIST2_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL"; then echo "auxhist2_interval=${NL_AUXHIST2_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_Y"; then echo "auxhist2_begin_y=${NL_AUXHIST2_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_D"; then echo "auxhist2_begin_d=${NL_AUXHIST2_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_H"; then echo "auxhist2_begin_h=${NL_AUXHIST2_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_M"; then echo "auxhist2_begin_m=${NL_AUXHIST2_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_S"; then echo "auxhist2_begin_s=${NL_AUXHIST2_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN"; then echo "auxhist2_begin=${NL_AUXHIST2_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_Y"; then echo "auxhist2_end_y=${NL_AUXHIST2_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_D"; then echo "auxhist2_end_d=${NL_AUXHIST2_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_H"; then echo "auxhist2_end_h=${NL_AUXHIST2_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_M"; then echo "auxhist2_end_m=${NL_AUXHIST2_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_S"; then echo "auxhist2_end_s=${NL_AUXHIST2_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END"; then echo "auxhist2_end=${NL_AUXHIST2_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST2"; then echo "io_form_auxhist2=${NL_IO_FORM_AUXHIST2}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST2"; then echo "frames_per_auxhist2=${NL_FRAMES_PER_AUXHIST2}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INNAME"; then echo "auxhist3_inname=\"${NL_AUXHIST3_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_OUTNAME"; then echo "auxhist3_outname=\"${NL_AUXHIST3_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_Y"; then echo "auxhist3_interval_y=${NL_AUXHIST3_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_D"; then echo "auxhist3_interval_d=${NL_AUXHIST3_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_H"; then echo "auxhist3_interval_h=${NL_AUXHIST3_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_M"; then echo "auxhist3_interval_m=${NL_AUXHIST3_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_S"; then echo "auxhist3_interval_s=${NL_AUXHIST3_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL"; then echo "auxhist3_interval=${NL_AUXHIST3_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_Y"; then echo "auxhist3_begin_y=${NL_AUXHIST3_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_D"; then echo "auxhist3_begin_d=${NL_AUXHIST3_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_H"; then echo "auxhist3_begin_h=${NL_AUXHIST3_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_M"; then echo "auxhist3_begin_m=${NL_AUXHIST3_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_S"; then echo "auxhist3_begin_s=${NL_AUXHIST3_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN"; then echo "auxhist3_begin=${NL_AUXHIST3_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_Y"; then echo "auxhist3_end_y=${NL_AUXHIST3_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_D"; then echo "auxhist3_end_d=${NL_AUXHIST3_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_H"; then echo "auxhist3_end_h=${NL_AUXHIST3_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_M"; then echo "auxhist3_end_m=${NL_AUXHIST3_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_S"; then echo "auxhist3_end_s=${NL_AUXHIST3_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END"; then echo "auxhist3_end=${NL_AUXHIST3_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST3"; then echo "io_form_auxhist3=${NL_IO_FORM_AUXHIST3}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST3"; then echo "frames_per_auxhist3=${NL_FRAMES_PER_AUXHIST3}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INNAME"; then echo "auxhist4_inname=\"${NL_AUXHIST4_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_OUTNAME"; then echo "auxhist4_outname=\"${NL_AUXHIST4_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_Y"; then echo "auxhist4_interval_y=${NL_AUXHIST4_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_D"; then echo "auxhist4_interval_d=${NL_AUXHIST4_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_H"; then echo "auxhist4_interval_h=${NL_AUXHIST4_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_M"; then echo "auxhist4_interval_m=${NL_AUXHIST4_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_S"; then echo "auxhist4_interval_s=${NL_AUXHIST4_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL"; then echo "auxhist4_interval=${NL_AUXHIST4_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_Y"; then echo "auxhist4_begin_y=${NL_AUXHIST4_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_D"; then echo "auxhist4_begin_d=${NL_AUXHIST4_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_H"; then echo "auxhist4_begin_h=${NL_AUXHIST4_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_M"; then echo "auxhist4_begin_m=${NL_AUXHIST4_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_S"; then echo "auxhist4_begin_s=${NL_AUXHIST4_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN"; then echo "auxhist4_begin=${NL_AUXHIST4_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_Y"; then echo "auxhist4_end_y=${NL_AUXHIST4_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_D"; then echo "auxhist4_end_d=${NL_AUXHIST4_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_H"; then echo "auxhist4_end_h=${NL_AUXHIST4_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_M"; then echo "auxhist4_end_m=${NL_AUXHIST4_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_S"; then echo "auxhist4_end_s=${NL_AUXHIST4_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END"; then echo "auxhist4_end=${NL_AUXHIST4_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST4"; then echo "io_form_auxhist4=${NL_IO_FORM_AUXHIST4}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST4"; then echo "frames_per_auxhist4=${NL_FRAMES_PER_AUXHIST4}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INNAME"; then echo "auxhist5_inname=\"${NL_AUXHIST5_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_OUTNAME"; then echo "auxhist5_outname=\"${NL_AUXHIST5_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_Y"; then echo "auxhist5_interval_y=${NL_AUXHIST5_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_D"; then echo "auxhist5_interval_d=${NL_AUXHIST5_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_H"; then echo "auxhist5_interval_h=${NL_AUXHIST5_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_M"; then echo "auxhist5_interval_m=${NL_AUXHIST5_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_S"; then echo "auxhist5_interval_s=${NL_AUXHIST5_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL"; then echo "auxhist5_interval=${NL_AUXHIST5_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_Y"; then echo "auxhist5_begin_y=${NL_AUXHIST5_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_D"; then echo "auxhist5_begin_d=${NL_AUXHIST5_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_H"; then echo "auxhist5_begin_h=${NL_AUXHIST5_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_M"; then echo "auxhist5_begin_m=${NL_AUXHIST5_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_S"; then echo "auxhist5_begin_s=${NL_AUXHIST5_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN"; then echo "auxhist5_begin=${NL_AUXHIST5_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_Y"; then echo "auxhist5_end_y=${NL_AUXHIST5_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_D"; then echo "auxhist5_end_d=${NL_AUXHIST5_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_H"; then echo "auxhist5_end_h=${NL_AUXHIST5_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_M"; then echo "auxhist5_end_m=${NL_AUXHIST5_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_S"; then echo "auxhist5_end_s=${NL_AUXHIST5_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END"; then echo "auxhist5_end=${NL_AUXHIST5_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST5"; then echo "io_form_auxhist5=${NL_IO_FORM_AUXHIST5}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST5"; then echo "frames_per_auxhist5=${NL_FRAMES_PER_AUXHIST5}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INNAME"; then echo "auxhist6_inname=\"${NL_AUXHIST6_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_OUTNAME"; then echo "auxhist6_outname=\"${NL_AUXHIST6_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_Y"; then echo "auxhist6_interval_y=${NL_AUXHIST6_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_D"; then echo "auxhist6_interval_d=${NL_AUXHIST6_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_H"; then echo "auxhist6_interval_h=${NL_AUXHIST6_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_M"; then echo "auxhist6_interval_m=${NL_AUXHIST6_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_S"; then echo "auxhist6_interval_s=${NL_AUXHIST6_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL"; then echo "auxhist6_interval=${NL_AUXHIST6_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_Y"; then echo "auxhist6_begin_y=${NL_AUXHIST6_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_D"; then echo "auxhist6_begin_d=${NL_AUXHIST6_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_H"; then echo "auxhist6_begin_h=${NL_AUXHIST6_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_M"; then echo "auxhist6_begin_m=${NL_AUXHIST6_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_S"; then echo "auxhist6_begin_s=${NL_AUXHIST6_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN"; then echo "auxhist6_begin=${NL_AUXHIST6_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_Y"; then echo "auxhist6_end_y=${NL_AUXHIST6_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_D"; then echo "auxhist6_end_d=${NL_AUXHIST6_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_H"; then echo "auxhist6_end_h=${NL_AUXHIST6_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_M"; then echo "auxhist6_end_m=${NL_AUXHIST6_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_S"; then echo "auxhist6_end_s=${NL_AUXHIST6_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END"; then echo "auxhist6_end=${NL_AUXHIST6_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST6"; then echo "io_form_auxhist6=${NL_IO_FORM_AUXHIST6}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST6"; then echo "frames_per_auxhist6=${NL_FRAMES_PER_AUXHIST6}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INNAME"; then echo "auxhist7_inname=\"${NL_AUXHIST7_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_OUTNAME"; then echo "auxhist7_outname=\"${NL_AUXHIST7_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_Y"; then echo "auxhist7_interval_y=${NL_AUXHIST7_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_D"; then echo "auxhist7_interval_d=${NL_AUXHIST7_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_H"; then echo "auxhist7_interval_h=${NL_AUXHIST7_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_M"; then echo "auxhist7_interval_m=${NL_AUXHIST7_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_S"; then echo "auxhist7_interval_s=${NL_AUXHIST7_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL"; then echo "auxhist7_interval=${NL_AUXHIST7_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_Y"; then echo "auxhist7_begin_y=${NL_AUXHIST7_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_D"; then echo "auxhist7_begin_d=${NL_AUXHIST7_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_H"; then echo "auxhist7_begin_h=${NL_AUXHIST7_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_M"; then echo "auxhist7_begin_m=${NL_AUXHIST7_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_S"; then echo "auxhist7_begin_s=${NL_AUXHIST7_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN"; then echo "auxhist7_begin=${NL_AUXHIST7_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_Y"; then echo "auxhist7_end_y=${NL_AUXHIST7_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_D"; then echo "auxhist7_end_d=${NL_AUXHIST7_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_H"; then echo "auxhist7_end_h=${NL_AUXHIST7_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_M"; then echo "auxhist7_end_m=${NL_AUXHIST7_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_S"; then echo "auxhist7_end_s=${NL_AUXHIST7_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END"; then echo "auxhist7_end=${NL_AUXHIST7_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST7"; then echo "io_form_auxhist7=${NL_IO_FORM_AUXHIST7}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST7"; then echo "frames_per_auxhist7=${NL_FRAMES_PER_AUXHIST7}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INNAME"; then echo "auxhist8_inname=\"${NL_AUXHIST8_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_OUTNAME"; then echo "auxhist8_outname=\"${NL_AUXHIST8_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_Y"; then echo "auxhist8_interval_y=${NL_AUXHIST8_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_D"; then echo "auxhist8_interval_d=${NL_AUXHIST8_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_H"; then echo "auxhist8_interval_h=${NL_AUXHIST8_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_M"; then echo "auxhist8_interval_m=${NL_AUXHIST8_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_S"; then echo "auxhist8_interval_s=${NL_AUXHIST8_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL"; then echo "auxhist8_interval=${NL_AUXHIST8_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_Y"; then echo "auxhist8_begin_y=${NL_AUXHIST8_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_D"; then echo "auxhist8_begin_d=${NL_AUXHIST8_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_H"; then echo "auxhist8_begin_h=${NL_AUXHIST8_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_M"; then echo "auxhist8_begin_m=${NL_AUXHIST8_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_S"; then echo "auxhist8_begin_s=${NL_AUXHIST8_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN"; then echo "auxhist8_begin=${NL_AUXHIST8_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_Y"; then echo "auxhist8_end_y=${NL_AUXHIST8_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_D"; then echo "auxhist8_end_d=${NL_AUXHIST8_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_H"; then echo "auxhist8_end_h=${NL_AUXHIST8_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_M"; then echo "auxhist8_end_m=${NL_AUXHIST8_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_S"; then echo "auxhist8_end_s=${NL_AUXHIST8_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END"; then echo "auxhist8_end=${NL_AUXHIST8_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST8"; then echo "io_form_auxhist8=${NL_IO_FORM_AUXHIST8}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST8"; then echo "frames_per_auxhist8=${NL_FRAMES_PER_AUXHIST8}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INNAME"; then echo "auxhist9_inname=\"${NL_AUXHIST9_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_OUTNAME"; then echo "auxhist9_outname=\"${NL_AUXHIST9_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_Y"; then echo "auxhist9_interval_y=${NL_AUXHIST9_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_D"; then echo "auxhist9_interval_d=${NL_AUXHIST9_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_H"; then echo "auxhist9_interval_h=${NL_AUXHIST9_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_M"; then echo "auxhist9_interval_m=${NL_AUXHIST9_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_S"; then echo "auxhist9_interval_s=${NL_AUXHIST9_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL"; then echo "auxhist9_interval=${NL_AUXHIST9_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_Y"; then echo "auxhist9_begin_y=${NL_AUXHIST9_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_D"; then echo "auxhist9_begin_d=${NL_AUXHIST9_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_H"; then echo "auxhist9_begin_h=${NL_AUXHIST9_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_M"; then echo "auxhist9_begin_m=${NL_AUXHIST9_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_S"; then echo "auxhist9_begin_s=${NL_AUXHIST9_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN"; then echo "auxhist9_begin=${NL_AUXHIST9_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_Y"; then echo "auxhist9_end_y=${NL_AUXHIST9_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_D"; then echo "auxhist9_end_d=${NL_AUXHIST9_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_H"; then echo "auxhist9_end_h=${NL_AUXHIST9_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_M"; then echo "auxhist9_end_m=${NL_AUXHIST9_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_S"; then echo "auxhist9_end_s=${NL_AUXHIST9_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END"; then echo "auxhist9_end=${NL_AUXHIST9_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST9"; then echo "io_form_auxhist9=${NL_IO_FORM_AUXHIST9}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST9"; then echo "frames_per_auxhist9=${NL_FRAMES_PER_AUXHIST9}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INNAME"; then echo "auxhist10_inname=\"${NL_AUXHIST10_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_OUTNAME"; then echo "auxhist10_outname=\"${NL_AUXHIST10_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_Y"; then echo "auxhist10_interval_y=${NL_AUXHIST10_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_D"; then echo "auxhist10_interval_d=${NL_AUXHIST10_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_H"; then echo "auxhist10_interval_h=${NL_AUXHIST10_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_M"; then echo "auxhist10_interval_m=${NL_AUXHIST10_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_S"; then echo "auxhist10_interval_s=${NL_AUXHIST10_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL"; then echo "auxhist10_interval=${NL_AUXHIST10_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_Y"; then echo "auxhist10_begin_y=${NL_AUXHIST10_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_D"; then echo "auxhist10_begin_d=${NL_AUXHIST10_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_H"; then echo "auxhist10_begin_h=${NL_AUXHIST10_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_M"; then echo "auxhist10_begin_m=${NL_AUXHIST10_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_S"; then echo "auxhist10_begin_s=${NL_AUXHIST10_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN"; then echo "auxhist10_begin=${NL_AUXHIST10_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_Y"; then echo "auxhist10_end_y=${NL_AUXHIST10_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_D"; then echo "auxhist10_end_d=${NL_AUXHIST10_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_H"; then echo "auxhist10_end_h=${NL_AUXHIST10_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_M"; then echo "auxhist10_end_m=${NL_AUXHIST10_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_S"; then echo "auxhist10_end_s=${NL_AUXHIST10_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END"; then echo "auxhist10_end=${NL_AUXHIST10_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST10"; then echo "io_form_auxhist10=${NL_IO_FORM_AUXHIST10}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST10"; then echo "frames_per_auxhist10=${NL_FRAMES_PER_AUXHIST10}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INNAME"; then echo "auxhist11_inname=\"${NL_AUXHIST11_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_OUTNAME"; then echo "auxhist11_outname=\"${NL_AUXHIST11_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_Y"; then echo "auxhist11_interval_y=${NL_AUXHIST11_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_D"; then echo "auxhist11_interval_d=${NL_AUXHIST11_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_H"; then echo "auxhist11_interval_h=${NL_AUXHIST11_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_M"; then echo "auxhist11_interval_m=${NL_AUXHIST11_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_S"; then echo "auxhist11_interval_s=${NL_AUXHIST11_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL"; then echo "auxhist11_interval=${NL_AUXHIST11_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_Y"; then echo "auxhist11_begin_y=${NL_AUXHIST11_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_D"; then echo "auxhist11_begin_d=${NL_AUXHIST11_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_H"; then echo "auxhist11_begin_h=${NL_AUXHIST11_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_M"; then echo "auxhist11_begin_m=${NL_AUXHIST11_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_S"; then echo "auxhist11_begin_s=${NL_AUXHIST11_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN"; then echo "auxhist11_begin=${NL_AUXHIST11_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_Y"; then echo "auxhist11_end_y=${NL_AUXHIST11_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_D"; then echo "auxhist11_end_d=${NL_AUXHIST11_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_H"; then echo "auxhist11_end_h=${NL_AUXHIST11_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_M"; then echo "auxhist11_end_m=${NL_AUXHIST11_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_S"; then echo "auxhist11_end_s=${NL_AUXHIST11_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END"; then echo "auxhist11_end=${NL_AUXHIST11_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST11"; then echo "io_form_auxhist11=${NL_IO_FORM_AUXHIST11}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST11"; then echo "frames_per_auxhist11=${NL_FRAMES_PER_AUXHIST11}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INNAME"; then echo "auxhist12_inname=\"${NL_AUXHIST12_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_OUTNAME"; then echo "auxhist12_outname=\"${NL_AUXHIST12_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_Y"; then echo "auxhist12_interval_y=${NL_AUXHIST12_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_D"; then echo "auxhist12_interval_d=${NL_AUXHIST12_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_H"; then echo "auxhist12_interval_h=${NL_AUXHIST12_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_M"; then echo "auxhist12_interval_m=${NL_AUXHIST12_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_S"; then echo "auxhist12_interval_s=${NL_AUXHIST12_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL"; then echo "auxhist12_interval=${NL_AUXHIST12_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_Y"; then echo "auxhist12_begin_y=${NL_AUXHIST12_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_D"; then echo "auxhist12_begin_d=${NL_AUXHIST12_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_H"; then echo "auxhist12_begin_h=${NL_AUXHIST12_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_M"; then echo "auxhist12_begin_m=${NL_AUXHIST12_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_S"; then echo "auxhist12_begin_s=${NL_AUXHIST12_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN"; then echo "auxhist12_begin=${NL_AUXHIST12_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_Y"; then echo "auxhist12_end_y=${NL_AUXHIST12_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_D"; then echo "auxhist12_end_d=${NL_AUXHIST12_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_H"; then echo "auxhist12_end_h=${NL_AUXHIST12_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_M"; then echo "auxhist12_end_m=${NL_AUXHIST12_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_S"; then echo "auxhist12_end_s=${NL_AUXHIST12_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END"; then echo "auxhist12_end=${NL_AUXHIST12_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST12"; then echo "io_form_auxhist12=${NL_IO_FORM_AUXHIST12}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST12"; then echo "frames_per_auxhist12=${NL_FRAMES_PER_AUXHIST12}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INNAME"; then echo "auxhist13_inname=\"${NL_AUXHIST13_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_OUTNAME"; then echo "auxhist13_outname=\"${NL_AUXHIST13_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_Y"; then echo "auxhist13_interval_y=${NL_AUXHIST13_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_D"; then echo "auxhist13_interval_d=${NL_AUXHIST13_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_H"; then echo "auxhist13_interval_h=${NL_AUXHIST13_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_M"; then echo "auxhist13_interval_m=${NL_AUXHIST13_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_S"; then echo "auxhist13_interval_s=${NL_AUXHIST13_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL"; then echo "auxhist13_interval=${NL_AUXHIST13_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_Y"; then echo "auxhist13_begin_y=${NL_AUXHIST13_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_D"; then echo "auxhist13_begin_d=${NL_AUXHIST13_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_H"; then echo "auxhist13_begin_h=${NL_AUXHIST13_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_M"; then echo "auxhist13_begin_m=${NL_AUXHIST13_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_S"; then echo "auxhist13_begin_s=${NL_AUXHIST13_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN"; then echo "auxhist13_begin=${NL_AUXHIST13_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_Y"; then echo "auxhist13_end_y=${NL_AUXHIST13_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_D"; then echo "auxhist13_end_d=${NL_AUXHIST13_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_H"; then echo "auxhist13_end_h=${NL_AUXHIST13_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_M"; then echo "auxhist13_end_m=${NL_AUXHIST13_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_S"; then echo "auxhist13_end_s=${NL_AUXHIST13_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END"; then echo "auxhist13_end=${NL_AUXHIST13_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST13"; then echo "io_form_auxhist13=${NL_IO_FORM_AUXHIST13}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST13"; then echo "frames_per_auxhist13=${NL_FRAMES_PER_AUXHIST13}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INNAME"; then echo "auxhist14_inname=\"${NL_AUXHIST14_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_OUTNAME"; then echo "auxhist14_outname=\"${NL_AUXHIST14_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_Y"; then echo "auxhist14_interval_y=${NL_AUXHIST14_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_D"; then echo "auxhist14_interval_d=${NL_AUXHIST14_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_H"; then echo "auxhist14_interval_h=${NL_AUXHIST14_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_M"; then echo "auxhist14_interval_m=${NL_AUXHIST14_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_S"; then echo "auxhist14_interval_s=${NL_AUXHIST14_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL"; then echo "auxhist14_interval=${NL_AUXHIST14_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_Y"; then echo "auxhist14_begin_y=${NL_AUXHIST14_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_D"; then echo "auxhist14_begin_d=${NL_AUXHIST14_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_H"; then echo "auxhist14_begin_h=${NL_AUXHIST14_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_M"; then echo "auxhist14_begin_m=${NL_AUXHIST14_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_S"; then echo "auxhist14_begin_s=${NL_AUXHIST14_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN"; then echo "auxhist14_begin=${NL_AUXHIST14_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_Y"; then echo "auxhist14_end_y=${NL_AUXHIST14_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_D"; then echo "auxhist14_end_d=${NL_AUXHIST14_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_H"; then echo "auxhist14_end_h=${NL_AUXHIST14_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_M"; then echo "auxhist14_end_m=${NL_AUXHIST14_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_S"; then echo "auxhist14_end_s=${NL_AUXHIST14_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END"; then echo "auxhist14_end=${NL_AUXHIST14_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST14"; then echo "io_form_auxhist14=${NL_IO_FORM_AUXHIST14}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST14"; then echo "frames_per_auxhist14=${NL_FRAMES_PER_AUXHIST14}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INNAME"; then echo "auxhist15_inname=\"${NL_AUXHIST15_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_OUTNAME"; then echo "auxhist15_outname=\"${NL_AUXHIST15_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_Y"; then echo "auxhist15_interval_y=${NL_AUXHIST15_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_D"; then echo "auxhist15_interval_d=${NL_AUXHIST15_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_H"; then echo "auxhist15_interval_h=${NL_AUXHIST15_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_M"; then echo "auxhist15_interval_m=${NL_AUXHIST15_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_S"; then echo "auxhist15_interval_s=${NL_AUXHIST15_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL"; then echo "auxhist15_interval=${NL_AUXHIST15_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_Y"; then echo "auxhist15_begin_y=${NL_AUXHIST15_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_D"; then echo "auxhist15_begin_d=${NL_AUXHIST15_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_H"; then echo "auxhist15_begin_h=${NL_AUXHIST15_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_M"; then echo "auxhist15_begin_m=${NL_AUXHIST15_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_S"; then echo "auxhist15_begin_s=${NL_AUXHIST15_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN"; then echo "auxhist15_begin=${NL_AUXHIST15_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_Y"; then echo "auxhist15_end_y=${NL_AUXHIST15_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_D"; then echo "auxhist15_end_d=${NL_AUXHIST15_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_H"; then echo "auxhist15_end_h=${NL_AUXHIST15_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_M"; then echo "auxhist15_end_m=${NL_AUXHIST15_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_S"; then echo "auxhist15_end_s=${NL_AUXHIST15_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END"; then echo "auxhist15_end=${NL_AUXHIST15_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST15"; then echo "io_form_auxhist15=${NL_IO_FORM_AUXHIST15}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST15"; then echo "frames_per_auxhist15=${NL_FRAMES_PER_AUXHIST15}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INNAME"; then echo "auxhist16_inname=\"${NL_AUXHIST16_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_OUTNAME"; then echo "auxhist16_outname=\"${NL_AUXHIST16_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_Y"; then echo "auxhist16_interval_y=${NL_AUXHIST16_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_D"; then echo "auxhist16_interval_d=${NL_AUXHIST16_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_H"; then echo "auxhist16_interval_h=${NL_AUXHIST16_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_M"; then echo "auxhist16_interval_m=${NL_AUXHIST16_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_S"; then echo "auxhist16_interval_s=${NL_AUXHIST16_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL"; then echo "auxhist16_interval=${NL_AUXHIST16_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_Y"; then echo "auxhist16_begin_y=${NL_AUXHIST16_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_D"; then echo "auxhist16_begin_d=${NL_AUXHIST16_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_H"; then echo "auxhist16_begin_h=${NL_AUXHIST16_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_M"; then echo "auxhist16_begin_m=${NL_AUXHIST16_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_S"; then echo "auxhist16_begin_s=${NL_AUXHIST16_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN"; then echo "auxhist16_begin=${NL_AUXHIST16_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_Y"; then echo "auxhist16_end_y=${NL_AUXHIST16_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_D"; then echo "auxhist16_end_d=${NL_AUXHIST16_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_H"; then echo "auxhist16_end_h=${NL_AUXHIST16_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_M"; then echo "auxhist16_end_m=${NL_AUXHIST16_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_S"; then echo "auxhist16_end_s=${NL_AUXHIST16_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END"; then echo "auxhist16_end=${NL_AUXHIST16_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST16"; then echo "io_form_auxhist16=${NL_IO_FORM_AUXHIST16}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST16"; then echo "frames_per_auxhist16=${NL_FRAMES_PER_AUXHIST16}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INNAME"; then echo "auxhist17_inname=\"${NL_AUXHIST17_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_OUTNAME"; then echo "auxhist17_outname=\"${NL_AUXHIST17_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_Y"; then echo "auxhist17_interval_y=${NL_AUXHIST17_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_D"; then echo "auxhist17_interval_d=${NL_AUXHIST17_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_H"; then echo "auxhist17_interval_h=${NL_AUXHIST17_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_M"; then echo "auxhist17_interval_m=${NL_AUXHIST17_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_S"; then echo "auxhist17_interval_s=${NL_AUXHIST17_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL"; then echo "auxhist17_interval=${NL_AUXHIST17_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_Y"; then echo "auxhist17_begin_y=${NL_AUXHIST17_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_D"; then echo "auxhist17_begin_d=${NL_AUXHIST17_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_H"; then echo "auxhist17_begin_h=${NL_AUXHIST17_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_M"; then echo "auxhist17_begin_m=${NL_AUXHIST17_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_S"; then echo "auxhist17_begin_s=${NL_AUXHIST17_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN"; then echo "auxhist17_begin=${NL_AUXHIST17_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_Y"; then echo "auxhist17_end_y=${NL_AUXHIST17_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_D"; then echo "auxhist17_end_d=${NL_AUXHIST17_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_H"; then echo "auxhist17_end_h=${NL_AUXHIST17_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_M"; then echo "auxhist17_end_m=${NL_AUXHIST17_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_S"; then echo "auxhist17_end_s=${NL_AUXHIST17_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END"; then echo "auxhist17_end=${NL_AUXHIST17_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST17"; then echo "io_form_auxhist17=${NL_IO_FORM_AUXHIST17}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST17"; then echo "frames_per_auxhist17=${NL_FRAMES_PER_AUXHIST17}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INNAME"; then echo "auxhist18_inname=\"${NL_AUXHIST18_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_OUTNAME"; then echo "auxhist18_outname=\"${NL_AUXHIST18_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_Y"; then echo "auxhist18_interval_y=${NL_AUXHIST18_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_D"; then echo "auxhist18_interval_d=${NL_AUXHIST18_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_H"; then echo "auxhist18_interval_h=${NL_AUXHIST18_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_M"; then echo "auxhist18_interval_m=${NL_AUXHIST18_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_S"; then echo "auxhist18_interval_s=${NL_AUXHIST18_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL"; then echo "auxhist18_interval=${NL_AUXHIST18_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_Y"; then echo "auxhist18_begin_y=${NL_AUXHIST18_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_D"; then echo "auxhist18_begin_d=${NL_AUXHIST18_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_H"; then echo "auxhist18_begin_h=${NL_AUXHIST18_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_M"; then echo "auxhist18_begin_m=${NL_AUXHIST18_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_S"; then echo "auxhist18_begin_s=${NL_AUXHIST18_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN"; then echo "auxhist18_begin=${NL_AUXHIST18_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_Y"; then echo "auxhist18_end_y=${NL_AUXHIST18_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_D"; then echo "auxhist18_end_d=${NL_AUXHIST18_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_H"; then echo "auxhist18_end_h=${NL_AUXHIST18_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_M"; then echo "auxhist18_end_m=${NL_AUXHIST18_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_S"; then echo "auxhist18_end_s=${NL_AUXHIST18_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END"; then echo "auxhist18_end=${NL_AUXHIST18_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST18"; then echo "io_form_auxhist18=${NL_IO_FORM_AUXHIST18}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST18"; then echo "frames_per_auxhist18=${NL_FRAMES_PER_AUXHIST18}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INNAME"; then echo "auxhist19_inname=\"${NL_AUXHIST19_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_OUTNAME"; then echo "auxhist19_outname=\"${NL_AUXHIST19_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_Y"; then echo "auxhist19_interval_y=${NL_AUXHIST19_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_D"; then echo "auxhist19_interval_d=${NL_AUXHIST19_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_H"; then echo "auxhist19_interval_h=${NL_AUXHIST19_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_M"; then echo "auxhist19_interval_m=${NL_AUXHIST19_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_S"; then echo "auxhist19_interval_s=${NL_AUXHIST19_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL"; then echo "auxhist19_interval=${NL_AUXHIST19_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_Y"; then echo "auxhist19_begin_y=${NL_AUXHIST19_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_D"; then echo "auxhist19_begin_d=${NL_AUXHIST19_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_H"; then echo "auxhist19_begin_h=${NL_AUXHIST19_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_M"; then echo "auxhist19_begin_m=${NL_AUXHIST19_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_S"; then echo "auxhist19_begin_s=${NL_AUXHIST19_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN"; then echo "auxhist19_begin=${NL_AUXHIST19_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_Y"; then echo "auxhist19_end_y=${NL_AUXHIST19_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_D"; then echo "auxhist19_end_d=${NL_AUXHIST19_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_H"; then echo "auxhist19_end_h=${NL_AUXHIST19_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_M"; then echo "auxhist19_end_m=${NL_AUXHIST19_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_S"; then echo "auxhist19_end_s=${NL_AUXHIST19_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END"; then echo "auxhist19_end=${NL_AUXHIST19_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST19"; then echo "io_form_auxhist19=${NL_IO_FORM_AUXHIST19}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST19"; then echo "frames_per_auxhist19=${NL_FRAMES_PER_AUXHIST19}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INNAME"; then echo "auxhist20_inname=\"${NL_AUXHIST20_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_OUTNAME"; then echo "auxhist20_outname=\"${NL_AUXHIST20_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_Y"; then echo "auxhist20_interval_y=${NL_AUXHIST20_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_D"; then echo "auxhist20_interval_d=${NL_AUXHIST20_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_H"; then echo "auxhist20_interval_h=${NL_AUXHIST20_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_M"; then echo "auxhist20_interval_m=${NL_AUXHIST20_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_S"; then echo "auxhist20_interval_s=${NL_AUXHIST20_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL"; then echo "auxhist20_interval=${NL_AUXHIST20_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_Y"; then echo "auxhist20_begin_y=${NL_AUXHIST20_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_D"; then echo "auxhist20_begin_d=${NL_AUXHIST20_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_H"; then echo "auxhist20_begin_h=${NL_AUXHIST20_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_M"; then echo "auxhist20_begin_m=${NL_AUXHIST20_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_S"; then echo "auxhist20_begin_s=${NL_AUXHIST20_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN"; then echo "auxhist20_begin=${NL_AUXHIST20_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_Y"; then echo "auxhist20_end_y=${NL_AUXHIST20_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_D"; then echo "auxhist20_end_d=${NL_AUXHIST20_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_H"; then echo "auxhist20_end_h=${NL_AUXHIST20_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_M"; then echo "auxhist20_end_m=${NL_AUXHIST20_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_S"; then echo "auxhist20_end_s=${NL_AUXHIST20_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END"; then echo "auxhist20_end=${NL_AUXHIST20_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST20"; then echo "io_form_auxhist20=${NL_IO_FORM_AUXHIST20}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST20"; then echo "frames_per_auxhist20=${NL_FRAMES_PER_AUXHIST20}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INNAME"; then echo "auxhist21_inname=\"${NL_AUXHIST21_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_OUTNAME"; then echo "auxhist21_outname=\"${NL_AUXHIST21_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_Y"; then echo "auxhist21_interval_y=${NL_AUXHIST21_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_D"; then echo "auxhist21_interval_d=${NL_AUXHIST21_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_H"; then echo "auxhist21_interval_h=${NL_AUXHIST21_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_M"; then echo "auxhist21_interval_m=${NL_AUXHIST21_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_S"; then echo "auxhist21_interval_s=${NL_AUXHIST21_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL"; then echo "auxhist21_interval=${NL_AUXHIST21_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_Y"; then echo "auxhist21_begin_y=${NL_AUXHIST21_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_D"; then echo "auxhist21_begin_d=${NL_AUXHIST21_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_H"; then echo "auxhist21_begin_h=${NL_AUXHIST21_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_M"; then echo "auxhist21_begin_m=${NL_AUXHIST21_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_S"; then echo "auxhist21_begin_s=${NL_AUXHIST21_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN"; then echo "auxhist21_begin=${NL_AUXHIST21_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_Y"; then echo "auxhist21_end_y=${NL_AUXHIST21_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_D"; then echo "auxhist21_end_d=${NL_AUXHIST21_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_H"; then echo "auxhist21_end_h=${NL_AUXHIST21_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_M"; then echo "auxhist21_end_m=${NL_AUXHIST21_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_S"; then echo "auxhist21_end_s=${NL_AUXHIST21_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END"; then echo "auxhist21_end=${NL_AUXHIST21_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST21"; then echo "io_form_auxhist21=${NL_IO_FORM_AUXHIST21}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST21"; then echo "frames_per_auxhist21=${NL_FRAMES_PER_AUXHIST21}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INNAME"; then echo "auxhist22_inname=\"${NL_AUXHIST22_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_OUTNAME"; then echo "auxhist22_outname=\"${NL_AUXHIST22_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_Y"; then echo "auxhist22_interval_y=${NL_AUXHIST22_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_D"; then echo "auxhist22_interval_d=${NL_AUXHIST22_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_H"; then echo "auxhist22_interval_h=${NL_AUXHIST22_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_M"; then echo "auxhist22_interval_m=${NL_AUXHIST22_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_S"; then echo "auxhist22_interval_s=${NL_AUXHIST22_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL"; then echo "auxhist22_interval=${NL_AUXHIST22_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_Y"; then echo "auxhist22_begin_y=${NL_AUXHIST22_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_D"; then echo "auxhist22_begin_d=${NL_AUXHIST22_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_H"; then echo "auxhist22_begin_h=${NL_AUXHIST22_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_M"; then echo "auxhist22_begin_m=${NL_AUXHIST22_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_S"; then echo "auxhist22_begin_s=${NL_AUXHIST22_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN"; then echo "auxhist22_begin=${NL_AUXHIST22_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_Y"; then echo "auxhist22_end_y=${NL_AUXHIST22_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_D"; then echo "auxhist22_end_d=${NL_AUXHIST22_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_H"; then echo "auxhist22_end_h=${NL_AUXHIST22_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_M"; then echo "auxhist22_end_m=${NL_AUXHIST22_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_S"; then echo "auxhist22_end_s=${NL_AUXHIST22_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END"; then echo "auxhist22_end=${NL_AUXHIST22_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST22"; then echo "io_form_auxhist22=${NL_IO_FORM_AUXHIST22}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST22"; then echo "frames_per_auxhist22=${NL_FRAMES_PER_AUXHIST22}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INNAME"; then echo "auxhist23_inname=\"${NL_AUXHIST23_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_OUTNAME"; then echo "auxhist23_outname=\"${NL_AUXHIST23_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_Y"; then echo "auxhist23_interval_y=${NL_AUXHIST23_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_D"; then echo "auxhist23_interval_d=${NL_AUXHIST23_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_H"; then echo "auxhist23_interval_h=${NL_AUXHIST23_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_M"; then echo "auxhist23_interval_m=${NL_AUXHIST23_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_S"; then echo "auxhist23_interval_s=${NL_AUXHIST23_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL"; then echo "auxhist23_interval=${NL_AUXHIST23_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_Y"; then echo "auxhist23_begin_y=${NL_AUXHIST23_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_D"; then echo "auxhist23_begin_d=${NL_AUXHIST23_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_H"; then echo "auxhist23_begin_h=${NL_AUXHIST23_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_M"; then echo "auxhist23_begin_m=${NL_AUXHIST23_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_S"; then echo "auxhist23_begin_s=${NL_AUXHIST23_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN"; then echo "auxhist23_begin=${NL_AUXHIST23_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_Y"; then echo "auxhist23_end_y=${NL_AUXHIST23_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_D"; then echo "auxhist23_end_d=${NL_AUXHIST23_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_H"; then echo "auxhist23_end_h=${NL_AUXHIST23_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_M"; then echo "auxhist23_end_m=${NL_AUXHIST23_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_S"; then echo "auxhist23_end_s=${NL_AUXHIST23_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END"; then echo "auxhist23_end=${NL_AUXHIST23_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST23"; then echo "io_form_auxhist23=${NL_IO_FORM_AUXHIST23}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST23"; then echo "frames_per_auxhist23=${NL_FRAMES_PER_AUXHIST23}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INNAME"; then echo "auxhist24_inname=\"${NL_AUXHIST24_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_OUTNAME"; then echo "auxhist24_outname=\"${NL_AUXHIST24_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_Y"; then echo "auxhist24_interval_y=${NL_AUXHIST24_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_D"; then echo "auxhist24_interval_d=${NL_AUXHIST24_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_H"; then echo "auxhist24_interval_h=${NL_AUXHIST24_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_M"; then echo "auxhist24_interval_m=${NL_AUXHIST24_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_S"; then echo "auxhist24_interval_s=${NL_AUXHIST24_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL"; then echo "auxhist24_interval=${NL_AUXHIST24_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_Y"; then echo "auxhist24_begin_y=${NL_AUXHIST24_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_D"; then echo "auxhist24_begin_d=${NL_AUXHIST24_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_H"; then echo "auxhist24_begin_h=${NL_AUXHIST24_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_M"; then echo "auxhist24_begin_m=${NL_AUXHIST24_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_S"; then echo "auxhist24_begin_s=${NL_AUXHIST24_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN"; then echo "auxhist24_begin=${NL_AUXHIST24_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_Y"; then echo "auxhist24_end_y=${NL_AUXHIST24_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_D"; then echo "auxhist24_end_d=${NL_AUXHIST24_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_H"; then echo "auxhist24_end_h=${NL_AUXHIST24_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_M"; then echo "auxhist24_end_m=${NL_AUXHIST24_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_S"; then echo "auxhist24_end_s=${NL_AUXHIST24_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END"; then echo "auxhist24_end=${NL_AUXHIST24_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST24"; then echo "io_form_auxhist24=${NL_IO_FORM_AUXHIST24}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST24"; then echo "frames_per_auxhist24=${NL_FRAMES_PER_AUXHIST24}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_OUTNAME"; then echo "auxinput1_outname=\"${NL_AUXINPUT1_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_Y"; then echo "auxinput1_interval_y=${NL_AUXINPUT1_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_D"; then echo "auxinput1_interval_d=${NL_AUXINPUT1_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_H"; then echo "auxinput1_interval_h=${NL_AUXINPUT1_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_M"; then echo "auxinput1_interval_m=${NL_AUXINPUT1_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_S"; then echo "auxinput1_interval_s=${NL_AUXINPUT1_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL"; then echo "auxinput1_interval=${NL_AUXINPUT1_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_Y"; then echo "auxinput1_begin_y=${NL_AUXINPUT1_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_D"; then echo "auxinput1_begin_d=${NL_AUXINPUT1_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_H"; then echo "auxinput1_begin_h=${NL_AUXINPUT1_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_M"; then echo "auxinput1_begin_m=${NL_AUXINPUT1_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_S"; then echo "auxinput1_begin_s=${NL_AUXINPUT1_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN"; then echo "auxinput1_begin=${NL_AUXINPUT1_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_Y"; then echo "auxinput1_end_y=${NL_AUXINPUT1_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_D"; then echo "auxinput1_end_d=${NL_AUXINPUT1_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_H"; then echo "auxinput1_end_h=${NL_AUXINPUT1_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_M"; then echo "auxinput1_end_m=${NL_AUXINPUT1_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_S"; then echo "auxinput1_end_s=${NL_AUXINPUT1_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END"; then echo "auxinput1_end=${NL_AUXINPUT1_END}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT1"; then echo "frames_per_auxinput1=${NL_FRAMES_PER_AUXINPUT1}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INNAME"; then echo "auxinput2_inname=\"${NL_AUXINPUT2_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_OUTNAME"; then echo "auxinput2_outname=\"${NL_AUXINPUT2_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_Y"; then echo "auxinput2_interval_y=${NL_AUXINPUT2_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_D"; then echo "auxinput2_interval_d=${NL_AUXINPUT2_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_H"; then echo "auxinput2_interval_h=${NL_AUXINPUT2_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_M"; then echo "auxinput2_interval_m=${NL_AUXINPUT2_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_S"; then echo "auxinput2_interval_s=${NL_AUXINPUT2_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL"; then echo "auxinput2_interval=${NL_AUXINPUT2_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_Y"; then echo "auxinput2_begin_y=${NL_AUXINPUT2_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_D"; then echo "auxinput2_begin_d=${NL_AUXINPUT2_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_H"; then echo "auxinput2_begin_h=${NL_AUXINPUT2_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_M"; then echo "auxinput2_begin_m=${NL_AUXINPUT2_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_S"; then echo "auxinput2_begin_s=${NL_AUXINPUT2_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN"; then echo "auxinput2_begin=${NL_AUXINPUT2_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_Y"; then echo "auxinput2_end_y=${NL_AUXINPUT2_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_D"; then echo "auxinput2_end_d=${NL_AUXINPUT2_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_H"; then echo "auxinput2_end_h=${NL_AUXINPUT2_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_M"; then echo "auxinput2_end_m=${NL_AUXINPUT2_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_S"; then echo "auxinput2_end_s=${NL_AUXINPUT2_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END"; then echo "auxinput2_end=${NL_AUXINPUT2_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT2"; then echo "io_form_auxinput2=${NL_IO_FORM_AUXINPUT2}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT2"; then echo "frames_per_auxinput2=${NL_FRAMES_PER_AUXINPUT2}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INNAME"; then echo "auxinput3_inname=\"${NL_AUXINPUT3_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_OUTNAME"; then echo "auxinput3_outname=\"${NL_AUXINPUT3_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_Y"; then echo "auxinput3_interval_y=${NL_AUXINPUT3_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_D"; then echo "auxinput3_interval_d=${NL_AUXINPUT3_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_H"; then echo "auxinput3_interval_h=${NL_AUXINPUT3_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_M"; then echo "auxinput3_interval_m=${NL_AUXINPUT3_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_S"; then echo "auxinput3_interval_s=${NL_AUXINPUT3_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL"; then echo "auxinput3_interval=${NL_AUXINPUT3_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_Y"; then echo "auxinput3_begin_y=${NL_AUXINPUT3_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_D"; then echo "auxinput3_begin_d=${NL_AUXINPUT3_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_H"; then echo "auxinput3_begin_h=${NL_AUXINPUT3_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_M"; then echo "auxinput3_begin_m=${NL_AUXINPUT3_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_S"; then echo "auxinput3_begin_s=${NL_AUXINPUT3_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN"; then echo "auxinput3_begin=${NL_AUXINPUT3_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_Y"; then echo "auxinput3_end_y=${NL_AUXINPUT3_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_D"; then echo "auxinput3_end_d=${NL_AUXINPUT3_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_H"; then echo "auxinput3_end_h=${NL_AUXINPUT3_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_M"; then echo "auxinput3_end_m=${NL_AUXINPUT3_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_S"; then echo "auxinput3_end_s=${NL_AUXINPUT3_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END"; then echo "auxinput3_end=${NL_AUXINPUT3_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT3"; then echo "io_form_auxinput3=${NL_IO_FORM_AUXINPUT3}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT3"; then echo "frames_per_auxinput3=${NL_FRAMES_PER_AUXINPUT3}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INNAME"; then echo "auxinput4_inname=\"${NL_AUXINPUT4_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_OUTNAME"; then echo "auxinput4_outname=\"${NL_AUXINPUT4_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_Y"; then echo "auxinput4_interval_y=${NL_AUXINPUT4_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_D"; then echo "auxinput4_interval_d=${NL_AUXINPUT4_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_H"; then echo "auxinput4_interval_h=${NL_AUXINPUT4_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_M"; then echo "auxinput4_interval_m=${NL_AUXINPUT4_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_S"; then echo "auxinput4_interval_s=${NL_AUXINPUT4_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL"; then echo "auxinput4_interval=${NL_AUXINPUT4_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_Y"; then echo "auxinput4_begin_y=${NL_AUXINPUT4_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_D"; then echo "auxinput4_begin_d=${NL_AUXINPUT4_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_H"; then echo "auxinput4_begin_h=${NL_AUXINPUT4_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_M"; then echo "auxinput4_begin_m=${NL_AUXINPUT4_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_S"; then echo "auxinput4_begin_s=${NL_AUXINPUT4_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN"; then echo "auxinput4_begin=${NL_AUXINPUT4_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_Y"; then echo "auxinput4_end_y=${NL_AUXINPUT4_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_D"; then echo "auxinput4_end_d=${NL_AUXINPUT4_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_H"; then echo "auxinput4_end_h=${NL_AUXINPUT4_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_M"; then echo "auxinput4_end_m=${NL_AUXINPUT4_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_S"; then echo "auxinput4_end_s=${NL_AUXINPUT4_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END"; then echo "auxinput4_end=${NL_AUXINPUT4_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT4"; then echo "io_form_auxinput4=${NL_IO_FORM_AUXINPUT4}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT4"; then echo "frames_per_auxinput4=${NL_FRAMES_PER_AUXINPUT4}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INNAME"; then echo "auxinput5_inname=\"${NL_AUXINPUT5_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_OUTNAME"; then echo "auxinput5_outname=\"${NL_AUXINPUT5_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_Y"; then echo "auxinput5_interval_y=${NL_AUXINPUT5_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_D"; then echo "auxinput5_interval_d=${NL_AUXINPUT5_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_H"; then echo "auxinput5_interval_h=${NL_AUXINPUT5_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_M"; then echo "auxinput5_interval_m=${NL_AUXINPUT5_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_S"; then echo "auxinput5_interval_s=${NL_AUXINPUT5_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL"; then echo "auxinput5_interval=${NL_AUXINPUT5_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_Y"; then echo "auxinput5_begin_y=${NL_AUXINPUT5_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_D"; then echo "auxinput5_begin_d=${NL_AUXINPUT5_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_H"; then echo "auxinput5_begin_h=${NL_AUXINPUT5_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_M"; then echo "auxinput5_begin_m=${NL_AUXINPUT5_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_S"; then echo "auxinput5_begin_s=${NL_AUXINPUT5_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN"; then echo "auxinput5_begin=${NL_AUXINPUT5_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_Y"; then echo "auxinput5_end_y=${NL_AUXINPUT5_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_D"; then echo "auxinput5_end_d=${NL_AUXINPUT5_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_H"; then echo "auxinput5_end_h=${NL_AUXINPUT5_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_M"; then echo "auxinput5_end_m=${NL_AUXINPUT5_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_S"; then echo "auxinput5_end_s=${NL_AUXINPUT5_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END"; then echo "auxinput5_end=${NL_AUXINPUT5_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT5"; then echo "io_form_auxinput5=${NL_IO_FORM_AUXINPUT5}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT5"; then echo "frames_per_auxinput5=${NL_FRAMES_PER_AUXINPUT5}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INNAME"; then echo "auxinput6_inname=\"${NL_AUXINPUT6_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_OUTNAME"; then echo "auxinput6_outname=\"${NL_AUXINPUT6_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_Y"; then echo "auxinput6_interval_y=${NL_AUXINPUT6_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_D"; then echo "auxinput6_interval_d=${NL_AUXINPUT6_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_H"; then echo "auxinput6_interval_h=${NL_AUXINPUT6_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_M"; then echo "auxinput6_interval_m=${NL_AUXINPUT6_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_S"; then echo "auxinput6_interval_s=${NL_AUXINPUT6_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL"; then echo "auxinput6_interval=${NL_AUXINPUT6_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_Y"; then echo "auxinput6_begin_y=${NL_AUXINPUT6_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_D"; then echo "auxinput6_begin_d=${NL_AUXINPUT6_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_H"; then echo "auxinput6_begin_h=${NL_AUXINPUT6_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_M"; then echo "auxinput6_begin_m=${NL_AUXINPUT6_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_S"; then echo "auxinput6_begin_s=${NL_AUXINPUT6_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN"; then echo "auxinput6_begin=${NL_AUXINPUT6_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_Y"; then echo "auxinput6_end_y=${NL_AUXINPUT6_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_D"; then echo "auxinput6_end_d=${NL_AUXINPUT6_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_H"; then echo "auxinput6_end_h=${NL_AUXINPUT6_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_M"; then echo "auxinput6_end_m=${NL_AUXINPUT6_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_S"; then echo "auxinput6_end_s=${NL_AUXINPUT6_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END"; then echo "auxinput6_end=${NL_AUXINPUT6_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT6"; then echo "io_form_auxinput6=${NL_IO_FORM_AUXINPUT6}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT6"; then echo "frames_per_auxinput6=${NL_FRAMES_PER_AUXINPUT6}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INNAME"; then echo "auxinput7_inname=\"${NL_AUXINPUT7_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_OUTNAME"; then echo "auxinput7_outname=\"${NL_AUXINPUT7_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_Y"; then echo "auxinput7_interval_y=${NL_AUXINPUT7_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_D"; then echo "auxinput7_interval_d=${NL_AUXINPUT7_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_H"; then echo "auxinput7_interval_h=${NL_AUXINPUT7_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_M"; then echo "auxinput7_interval_m=${NL_AUXINPUT7_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_S"; then echo "auxinput7_interval_s=${NL_AUXINPUT7_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL"; then echo "auxinput7_interval=${NL_AUXINPUT7_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_Y"; then echo "auxinput7_begin_y=${NL_AUXINPUT7_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_D"; then echo "auxinput7_begin_d=${NL_AUXINPUT7_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_H"; then echo "auxinput7_begin_h=${NL_AUXINPUT7_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_M"; then echo "auxinput7_begin_m=${NL_AUXINPUT7_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_S"; then echo "auxinput7_begin_s=${NL_AUXINPUT7_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN"; then echo "auxinput7_begin=${NL_AUXINPUT7_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_Y"; then echo "auxinput7_end_y=${NL_AUXINPUT7_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_D"; then echo "auxinput7_end_d=${NL_AUXINPUT7_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_H"; then echo "auxinput7_end_h=${NL_AUXINPUT7_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_M"; then echo "auxinput7_end_m=${NL_AUXINPUT7_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_S"; then echo "auxinput7_end_s=${NL_AUXINPUT7_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END"; then echo "auxinput7_end=${NL_AUXINPUT7_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT7"; then echo "io_form_auxinput7=${NL_IO_FORM_AUXINPUT7}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT7"; then echo "frames_per_auxinput7=${NL_FRAMES_PER_AUXINPUT7}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INNAME"; then echo "auxinput8_inname=\"${NL_AUXINPUT8_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_OUTNAME"; then echo "auxinput8_outname=\"${NL_AUXINPUT8_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_Y"; then echo "auxinput8_interval_y=${NL_AUXINPUT8_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_D"; then echo "auxinput8_interval_d=${NL_AUXINPUT8_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_H"; then echo "auxinput8_interval_h=${NL_AUXINPUT8_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_M"; then echo "auxinput8_interval_m=${NL_AUXINPUT8_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_S"; then echo "auxinput8_interval_s=${NL_AUXINPUT8_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL"; then echo "auxinput8_interval=${NL_AUXINPUT8_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_Y"; then echo "auxinput8_begin_y=${NL_AUXINPUT8_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_D"; then echo "auxinput8_begin_d=${NL_AUXINPUT8_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_H"; then echo "auxinput8_begin_h=${NL_AUXINPUT8_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_M"; then echo "auxinput8_begin_m=${NL_AUXINPUT8_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_S"; then echo "auxinput8_begin_s=${NL_AUXINPUT8_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN"; then echo "auxinput8_begin=${NL_AUXINPUT8_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_Y"; then echo "auxinput8_end_y=${NL_AUXINPUT8_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_D"; then echo "auxinput8_end_d=${NL_AUXINPUT8_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_H"; then echo "auxinput8_end_h=${NL_AUXINPUT8_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_M"; then echo "auxinput8_end_m=${NL_AUXINPUT8_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_S"; then echo "auxinput8_end_s=${NL_AUXINPUT8_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END"; then echo "auxinput8_end=${NL_AUXINPUT8_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT8"; then echo "io_form_auxinput8=${NL_IO_FORM_AUXINPUT8}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT8"; then echo "frames_per_auxinput8=${NL_FRAMES_PER_AUXINPUT8}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INNAME"; then echo "auxinput9_inname=\"${NL_AUXINPUT9_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_OUTNAME"; then echo "auxinput9_outname=\"${NL_AUXINPUT9_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_Y"; then echo "auxinput9_interval_y=${NL_AUXINPUT9_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_D"; then echo "auxinput9_interval_d=${NL_AUXINPUT9_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_H"; then echo "auxinput9_interval_h=${NL_AUXINPUT9_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_M"; then echo "auxinput9_interval_m=${NL_AUXINPUT9_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_S"; then echo "auxinput9_interval_s=${NL_AUXINPUT9_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL"; then echo "auxinput9_interval=${NL_AUXINPUT9_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_Y"; then echo "auxinput9_begin_y=${NL_AUXINPUT9_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_D"; then echo "auxinput9_begin_d=${NL_AUXINPUT9_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_H"; then echo "auxinput9_begin_h=${NL_AUXINPUT9_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_M"; then echo "auxinput9_begin_m=${NL_AUXINPUT9_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_S"; then echo "auxinput9_begin_s=${NL_AUXINPUT9_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN"; then echo "auxinput9_begin=${NL_AUXINPUT9_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_Y"; then echo "auxinput9_end_y=${NL_AUXINPUT9_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_D"; then echo "auxinput9_end_d=${NL_AUXINPUT9_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_H"; then echo "auxinput9_end_h=${NL_AUXINPUT9_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_M"; then echo "auxinput9_end_m=${NL_AUXINPUT9_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_S"; then echo "auxinput9_end_s=${NL_AUXINPUT9_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END"; then echo "auxinput9_end=${NL_AUXINPUT9_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT9"; then echo "io_form_auxinput9=${NL_IO_FORM_AUXINPUT9}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT9"; then echo "frames_per_auxinput9=${NL_FRAMES_PER_AUXINPUT9}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INNAME"; then echo "auxinput10_inname=\"${NL_AUXINPUT10_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_OUTNAME"; then echo "auxinput10_outname=\"${NL_AUXINPUT10_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_Y"; then echo "auxinput10_interval_y=${NL_AUXINPUT10_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_D"; then echo "auxinput10_interval_d=${NL_AUXINPUT10_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_H"; then echo "auxinput10_interval_h=${NL_AUXINPUT10_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_M"; then echo "auxinput10_interval_m=${NL_AUXINPUT10_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_S"; then echo "auxinput10_interval_s=${NL_AUXINPUT10_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL"; then echo "auxinput10_interval=${NL_AUXINPUT10_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_Y"; then echo "auxinput10_begin_y=${NL_AUXINPUT10_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_D"; then echo "auxinput10_begin_d=${NL_AUXINPUT10_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_H"; then echo "auxinput10_begin_h=${NL_AUXINPUT10_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_M"; then echo "auxinput10_begin_m=${NL_AUXINPUT10_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_S"; then echo "auxinput10_begin_s=${NL_AUXINPUT10_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN"; then echo "auxinput10_begin=${NL_AUXINPUT10_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_Y"; then echo "auxinput10_end_y=${NL_AUXINPUT10_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_D"; then echo "auxinput10_end_d=${NL_AUXINPUT10_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_H"; then echo "auxinput10_end_h=${NL_AUXINPUT10_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_M"; then echo "auxinput10_end_m=${NL_AUXINPUT10_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_S"; then echo "auxinput10_end_s=${NL_AUXINPUT10_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END"; then echo "auxinput10_end=${NL_AUXINPUT10_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT10"; then echo "io_form_auxinput10=${NL_IO_FORM_AUXINPUT10}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT10"; then echo "frames_per_auxinput10=${NL_FRAMES_PER_AUXINPUT10}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INNAME"; then echo "auxinput11_inname=\"${NL_AUXINPUT11_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_OUTNAME"; then echo "auxinput11_outname=\"${NL_AUXINPUT11_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_Y"; then echo "auxinput11_interval_y=${NL_AUXINPUT11_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_D"; then echo "auxinput11_interval_d=${NL_AUXINPUT11_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_H"; then echo "auxinput11_interval_h=${NL_AUXINPUT11_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_M"; then echo "auxinput11_interval_m=${NL_AUXINPUT11_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_S"; then echo "auxinput11_interval_s=${NL_AUXINPUT11_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL"; then echo "auxinput11_interval=${NL_AUXINPUT11_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_Y"; then echo "auxinput11_begin_y=${NL_AUXINPUT11_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_D"; then echo "auxinput11_begin_d=${NL_AUXINPUT11_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_H"; then echo "auxinput11_begin_h=${NL_AUXINPUT11_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_M"; then echo "auxinput11_begin_m=${NL_AUXINPUT11_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_S"; then echo "auxinput11_begin_s=${NL_AUXINPUT11_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN"; then echo "auxinput11_begin=${NL_AUXINPUT11_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_Y"; then echo "auxinput11_end_y=${NL_AUXINPUT11_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_D"; then echo "auxinput11_end_d=${NL_AUXINPUT11_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_H"; then echo "auxinput11_end_h=${NL_AUXINPUT11_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_M"; then echo "auxinput11_end_m=${NL_AUXINPUT11_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_S"; then echo "auxinput11_end_s=${NL_AUXINPUT11_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END"; then echo "auxinput11_end=${NL_AUXINPUT11_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT11"; then echo "io_form_auxinput11=${NL_IO_FORM_AUXINPUT11}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT11"; then echo "frames_per_auxinput11=${NL_FRAMES_PER_AUXINPUT11}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INNAME"; then echo "auxinput12_inname=\"${NL_AUXINPUT12_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_OUTNAME"; then echo "auxinput12_outname=\"${NL_AUXINPUT12_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_Y"; then echo "auxinput12_interval_y=${NL_AUXINPUT12_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_D"; then echo "auxinput12_interval_d=${NL_AUXINPUT12_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_H"; then echo "auxinput12_interval_h=${NL_AUXINPUT12_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_M"; then echo "auxinput12_interval_m=${NL_AUXINPUT12_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_S"; then echo "auxinput12_interval_s=${NL_AUXINPUT12_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL"; then echo "auxinput12_interval=${NL_AUXINPUT12_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_Y"; then echo "auxinput12_begin_y=${NL_AUXINPUT12_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_D"; then echo "auxinput12_begin_d=${NL_AUXINPUT12_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_H"; then echo "auxinput12_begin_h=${NL_AUXINPUT12_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_M"; then echo "auxinput12_begin_m=${NL_AUXINPUT12_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_S"; then echo "auxinput12_begin_s=${NL_AUXINPUT12_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN"; then echo "auxinput12_begin=${NL_AUXINPUT12_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_Y"; then echo "auxinput12_end_y=${NL_AUXINPUT12_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_D"; then echo "auxinput12_end_d=${NL_AUXINPUT12_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_H"; then echo "auxinput12_end_h=${NL_AUXINPUT12_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_M"; then echo "auxinput12_end_m=${NL_AUXINPUT12_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_S"; then echo "auxinput12_end_s=${NL_AUXINPUT12_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END"; then echo "auxinput12_end=${NL_AUXINPUT12_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT12"; then echo "io_form_auxinput12=${NL_IO_FORM_AUXINPUT12}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT12"; then echo "frames_per_auxinput12=${NL_FRAMES_PER_AUXINPUT12}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INNAME"; then echo "auxinput13_inname=\"${NL_AUXINPUT13_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_OUTNAME"; then echo "auxinput13_outname=\"${NL_AUXINPUT13_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_Y"; then echo "auxinput13_interval_y=${NL_AUXINPUT13_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_D"; then echo "auxinput13_interval_d=${NL_AUXINPUT13_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_H"; then echo "auxinput13_interval_h=${NL_AUXINPUT13_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_M"; then echo "auxinput13_interval_m=${NL_AUXINPUT13_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_S"; then echo "auxinput13_interval_s=${NL_AUXINPUT13_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL"; then echo "auxinput13_interval=${NL_AUXINPUT13_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_Y"; then echo "auxinput13_begin_y=${NL_AUXINPUT13_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_D"; then echo "auxinput13_begin_d=${NL_AUXINPUT13_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_H"; then echo "auxinput13_begin_h=${NL_AUXINPUT13_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_M"; then echo "auxinput13_begin_m=${NL_AUXINPUT13_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_S"; then echo "auxinput13_begin_s=${NL_AUXINPUT13_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN"; then echo "auxinput13_begin=${NL_AUXINPUT13_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_Y"; then echo "auxinput13_end_y=${NL_AUXINPUT13_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_D"; then echo "auxinput13_end_d=${NL_AUXINPUT13_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_H"; then echo "auxinput13_end_h=${NL_AUXINPUT13_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_M"; then echo "auxinput13_end_m=${NL_AUXINPUT13_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_S"; then echo "auxinput13_end_s=${NL_AUXINPUT13_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END"; then echo "auxinput13_end=${NL_AUXINPUT13_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT13"; then echo "io_form_auxinput13=${NL_IO_FORM_AUXINPUT13}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT13"; then echo "frames_per_auxinput13=${NL_FRAMES_PER_AUXINPUT13}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INNAME"; then echo "auxinput14_inname=\"${NL_AUXINPUT14_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_OUTNAME"; then echo "auxinput14_outname=\"${NL_AUXINPUT14_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_Y"; then echo "auxinput14_interval_y=${NL_AUXINPUT14_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_D"; then echo "auxinput14_interval_d=${NL_AUXINPUT14_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_H"; then echo "auxinput14_interval_h=${NL_AUXINPUT14_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_M"; then echo "auxinput14_interval_m=${NL_AUXINPUT14_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_S"; then echo "auxinput14_interval_s=${NL_AUXINPUT14_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL"; then echo "auxinput14_interval=${NL_AUXINPUT14_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_Y"; then echo "auxinput14_begin_y=${NL_AUXINPUT14_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_D"; then echo "auxinput14_begin_d=${NL_AUXINPUT14_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_H"; then echo "auxinput14_begin_h=${NL_AUXINPUT14_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_M"; then echo "auxinput14_begin_m=${NL_AUXINPUT14_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_S"; then echo "auxinput14_begin_s=${NL_AUXINPUT14_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN"; then echo "auxinput14_begin=${NL_AUXINPUT14_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_Y"; then echo "auxinput14_end_y=${NL_AUXINPUT14_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_D"; then echo "auxinput14_end_d=${NL_AUXINPUT14_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_H"; then echo "auxinput14_end_h=${NL_AUXINPUT14_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_M"; then echo "auxinput14_end_m=${NL_AUXINPUT14_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_S"; then echo "auxinput14_end_s=${NL_AUXINPUT14_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END"; then echo "auxinput14_end=${NL_AUXINPUT14_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT14"; then echo "io_form_auxinput14=${NL_IO_FORM_AUXINPUT14}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT14"; then echo "frames_per_auxinput14=${NL_FRAMES_PER_AUXINPUT14}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INNAME"; then echo "auxinput15_inname=\"${NL_AUXINPUT15_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_OUTNAME"; then echo "auxinput15_outname=\"${NL_AUXINPUT15_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_Y"; then echo "auxinput15_interval_y=${NL_AUXINPUT15_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_D"; then echo "auxinput15_interval_d=${NL_AUXINPUT15_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_H"; then echo "auxinput15_interval_h=${NL_AUXINPUT15_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_M"; then echo "auxinput15_interval_m=${NL_AUXINPUT15_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_S"; then echo "auxinput15_interval_s=${NL_AUXINPUT15_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL"; then echo "auxinput15_interval=${NL_AUXINPUT15_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_Y"; then echo "auxinput15_begin_y=${NL_AUXINPUT15_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_D"; then echo "auxinput15_begin_d=${NL_AUXINPUT15_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_H"; then echo "auxinput15_begin_h=${NL_AUXINPUT15_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_M"; then echo "auxinput15_begin_m=${NL_AUXINPUT15_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_S"; then echo "auxinput15_begin_s=${NL_AUXINPUT15_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN"; then echo "auxinput15_begin=${NL_AUXINPUT15_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_Y"; then echo "auxinput15_end_y=${NL_AUXINPUT15_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_D"; then echo "auxinput15_end_d=${NL_AUXINPUT15_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_H"; then echo "auxinput15_end_h=${NL_AUXINPUT15_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_M"; then echo "auxinput15_end_m=${NL_AUXINPUT15_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_S"; then echo "auxinput15_end_s=${NL_AUXINPUT15_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END"; then echo "auxinput15_end=${NL_AUXINPUT15_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT15"; then echo "io_form_auxinput15=${NL_IO_FORM_AUXINPUT15}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT15"; then echo "frames_per_auxinput15=${NL_FRAMES_PER_AUXINPUT15}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INNAME"; then echo "auxinput16_inname=\"${NL_AUXINPUT16_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_OUTNAME"; then echo "auxinput16_outname=\"${NL_AUXINPUT16_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_Y"; then echo "auxinput16_interval_y=${NL_AUXINPUT16_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_D"; then echo "auxinput16_interval_d=${NL_AUXINPUT16_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_H"; then echo "auxinput16_interval_h=${NL_AUXINPUT16_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_M"; then echo "auxinput16_interval_m=${NL_AUXINPUT16_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_S"; then echo "auxinput16_interval_s=${NL_AUXINPUT16_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL"; then echo "auxinput16_interval=${NL_AUXINPUT16_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_Y"; then echo "auxinput16_begin_y=${NL_AUXINPUT16_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_D"; then echo "auxinput16_begin_d=${NL_AUXINPUT16_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_H"; then echo "auxinput16_begin_h=${NL_AUXINPUT16_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_M"; then echo "auxinput16_begin_m=${NL_AUXINPUT16_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_S"; then echo "auxinput16_begin_s=${NL_AUXINPUT16_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN"; then echo "auxinput16_begin=${NL_AUXINPUT16_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_Y"; then echo "auxinput16_end_y=${NL_AUXINPUT16_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_D"; then echo "auxinput16_end_d=${NL_AUXINPUT16_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_H"; then echo "auxinput16_end_h=${NL_AUXINPUT16_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_M"; then echo "auxinput16_end_m=${NL_AUXINPUT16_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_S"; then echo "auxinput16_end_s=${NL_AUXINPUT16_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END"; then echo "auxinput16_end=${NL_AUXINPUT16_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT16"; then echo "io_form_auxinput16=${NL_IO_FORM_AUXINPUT16}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT16"; then echo "frames_per_auxinput16=${NL_FRAMES_PER_AUXINPUT16}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INNAME"; then echo "auxinput17_inname=\"${NL_AUXINPUT17_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_OUTNAME"; then echo "auxinput17_outname=\"${NL_AUXINPUT17_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_Y"; then echo "auxinput17_interval_y=${NL_AUXINPUT17_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_D"; then echo "auxinput17_interval_d=${NL_AUXINPUT17_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_H"; then echo "auxinput17_interval_h=${NL_AUXINPUT17_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_M"; then echo "auxinput17_interval_m=${NL_AUXINPUT17_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_S"; then echo "auxinput17_interval_s=${NL_AUXINPUT17_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL"; then echo "auxinput17_interval=${NL_AUXINPUT17_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_Y"; then echo "auxinput17_begin_y=${NL_AUXINPUT17_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_D"; then echo "auxinput17_begin_d=${NL_AUXINPUT17_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_H"; then echo "auxinput17_begin_h=${NL_AUXINPUT17_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_M"; then echo "auxinput17_begin_m=${NL_AUXINPUT17_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_S"; then echo "auxinput17_begin_s=${NL_AUXINPUT17_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN"; then echo "auxinput17_begin=${NL_AUXINPUT17_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_Y"; then echo "auxinput17_end_y=${NL_AUXINPUT17_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_D"; then echo "auxinput17_end_d=${NL_AUXINPUT17_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_H"; then echo "auxinput17_end_h=${NL_AUXINPUT17_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_M"; then echo "auxinput17_end_m=${NL_AUXINPUT17_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_S"; then echo "auxinput17_end_s=${NL_AUXINPUT17_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END"; then echo "auxinput17_end=${NL_AUXINPUT17_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT17"; then echo "io_form_auxinput17=${NL_IO_FORM_AUXINPUT17}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT17"; then echo "frames_per_auxinput17=${NL_FRAMES_PER_AUXINPUT17}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INNAME"; then echo "auxinput18_inname=\"${NL_AUXINPUT18_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_OUTNAME"; then echo "auxinput18_outname=\"${NL_AUXINPUT18_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_Y"; then echo "auxinput18_interval_y=${NL_AUXINPUT18_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_D"; then echo "auxinput18_interval_d=${NL_AUXINPUT18_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_H"; then echo "auxinput18_interval_h=${NL_AUXINPUT18_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_M"; then echo "auxinput18_interval_m=${NL_AUXINPUT18_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_S"; then echo "auxinput18_interval_s=${NL_AUXINPUT18_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL"; then echo "auxinput18_interval=${NL_AUXINPUT18_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_Y"; then echo "auxinput18_begin_y=${NL_AUXINPUT18_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_D"; then echo "auxinput18_begin_d=${NL_AUXINPUT18_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_H"; then echo "auxinput18_begin_h=${NL_AUXINPUT18_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_M"; then echo "auxinput18_begin_m=${NL_AUXINPUT18_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_S"; then echo "auxinput18_begin_s=${NL_AUXINPUT18_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN"; then echo "auxinput18_begin=${NL_AUXINPUT18_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_Y"; then echo "auxinput18_end_y=${NL_AUXINPUT18_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_D"; then echo "auxinput18_end_d=${NL_AUXINPUT18_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_H"; then echo "auxinput18_end_h=${NL_AUXINPUT18_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_M"; then echo "auxinput18_end_m=${NL_AUXINPUT18_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_S"; then echo "auxinput18_end_s=${NL_AUXINPUT18_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END"; then echo "auxinput18_end=${NL_AUXINPUT18_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT18"; then echo "io_form_auxinput18=${NL_IO_FORM_AUXINPUT18}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT18"; then echo "frames_per_auxinput18=${NL_FRAMES_PER_AUXINPUT18}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INNAME"; then echo "auxinput19_inname=\"${NL_AUXINPUT19_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_OUTNAME"; then echo "auxinput19_outname=\"${NL_AUXINPUT19_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_Y"; then echo "auxinput19_interval_y=${NL_AUXINPUT19_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_D"; then echo "auxinput19_interval_d=${NL_AUXINPUT19_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_H"; then echo "auxinput19_interval_h=${NL_AUXINPUT19_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_M"; then echo "auxinput19_interval_m=${NL_AUXINPUT19_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_S"; then echo "auxinput19_interval_s=${NL_AUXINPUT19_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL"; then echo "auxinput19_interval=${NL_AUXINPUT19_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_Y"; then echo "auxinput19_begin_y=${NL_AUXINPUT19_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_D"; then echo "auxinput19_begin_d=${NL_AUXINPUT19_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_H"; then echo "auxinput19_begin_h=${NL_AUXINPUT19_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_M"; then echo "auxinput19_begin_m=${NL_AUXINPUT19_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_S"; then echo "auxinput19_begin_s=${NL_AUXINPUT19_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN"; then echo "auxinput19_begin=${NL_AUXINPUT19_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_Y"; then echo "auxinput19_end_y=${NL_AUXINPUT19_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_D"; then echo "auxinput19_end_d=${NL_AUXINPUT19_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_H"; then echo "auxinput19_end_h=${NL_AUXINPUT19_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_M"; then echo "auxinput19_end_m=${NL_AUXINPUT19_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_S"; then echo "auxinput19_end_s=${NL_AUXINPUT19_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END"; then echo "auxinput19_end=${NL_AUXINPUT19_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT19"; then echo "io_form_auxinput19=${NL_IO_FORM_AUXINPUT19}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT19"; then echo "frames_per_auxinput19=${NL_FRAMES_PER_AUXINPUT19}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INNAME"; then echo "auxinput20_inname=\"${NL_AUXINPUT20_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_OUTNAME"; then echo "auxinput20_outname=\"${NL_AUXINPUT20_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_Y"; then echo "auxinput20_interval_y=${NL_AUXINPUT20_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_D"; then echo "auxinput20_interval_d=${NL_AUXINPUT20_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_H"; then echo "auxinput20_interval_h=${NL_AUXINPUT20_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_M"; then echo "auxinput20_interval_m=${NL_AUXINPUT20_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_S"; then echo "auxinput20_interval_s=${NL_AUXINPUT20_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL"; then echo "auxinput20_interval=${NL_AUXINPUT20_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_Y"; then echo "auxinput20_begin_y=${NL_AUXINPUT20_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_D"; then echo "auxinput20_begin_d=${NL_AUXINPUT20_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_H"; then echo "auxinput20_begin_h=${NL_AUXINPUT20_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_M"; then echo "auxinput20_begin_m=${NL_AUXINPUT20_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_S"; then echo "auxinput20_begin_s=${NL_AUXINPUT20_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN"; then echo "auxinput20_begin=${NL_AUXINPUT20_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_Y"; then echo "auxinput20_end_y=${NL_AUXINPUT20_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_D"; then echo "auxinput20_end_d=${NL_AUXINPUT20_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_H"; then echo "auxinput20_end_h=${NL_AUXINPUT20_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_M"; then echo "auxinput20_end_m=${NL_AUXINPUT20_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_S"; then echo "auxinput20_end_s=${NL_AUXINPUT20_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END"; then echo "auxinput20_end=${NL_AUXINPUT20_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT20"; then echo "io_form_auxinput20=${NL_IO_FORM_AUXINPUT20}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT20"; then echo "frames_per_auxinput20=${NL_FRAMES_PER_AUXINPUT20}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INNAME"; then echo "auxinput21_inname=\"${NL_AUXINPUT21_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_OUTNAME"; then echo "auxinput21_outname=\"${NL_AUXINPUT21_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_Y"; then echo "auxinput21_interval_y=${NL_AUXINPUT21_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_D"; then echo "auxinput21_interval_d=${NL_AUXINPUT21_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_H"; then echo "auxinput21_interval_h=${NL_AUXINPUT21_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_M"; then echo "auxinput21_interval_m=${NL_AUXINPUT21_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_S"; then echo "auxinput21_interval_s=${NL_AUXINPUT21_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL"; then echo "auxinput21_interval=${NL_AUXINPUT21_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_Y"; then echo "auxinput21_begin_y=${NL_AUXINPUT21_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_D"; then echo "auxinput21_begin_d=${NL_AUXINPUT21_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_H"; then echo "auxinput21_begin_h=${NL_AUXINPUT21_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_M"; then echo "auxinput21_begin_m=${NL_AUXINPUT21_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_S"; then echo "auxinput21_begin_s=${NL_AUXINPUT21_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN"; then echo "auxinput21_begin=${NL_AUXINPUT21_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_Y"; then echo "auxinput21_end_y=${NL_AUXINPUT21_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_D"; then echo "auxinput21_end_d=${NL_AUXINPUT21_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_H"; then echo "auxinput21_end_h=${NL_AUXINPUT21_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_M"; then echo "auxinput21_end_m=${NL_AUXINPUT21_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_S"; then echo "auxinput21_end_s=${NL_AUXINPUT21_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END"; then echo "auxinput21_end=${NL_AUXINPUT21_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT21"; then echo "io_form_auxinput21=${NL_IO_FORM_AUXINPUT21}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT21"; then echo "frames_per_auxinput21=${NL_FRAMES_PER_AUXINPUT21}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INNAME"; then echo "auxinput22_inname=\"${NL_AUXINPUT22_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_OUTNAME"; then echo "auxinput22_outname=\"${NL_AUXINPUT22_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_Y"; then echo "auxinput22_interval_y=${NL_AUXINPUT22_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_D"; then echo "auxinput22_interval_d=${NL_AUXINPUT22_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_H"; then echo "auxinput22_interval_h=${NL_AUXINPUT22_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_M"; then echo "auxinput22_interval_m=${NL_AUXINPUT22_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_S"; then echo "auxinput22_interval_s=${NL_AUXINPUT22_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL"; then echo "auxinput22_interval=${NL_AUXINPUT22_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_Y"; then echo "auxinput22_begin_y=${NL_AUXINPUT22_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_D"; then echo "auxinput22_begin_d=${NL_AUXINPUT22_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_H"; then echo "auxinput22_begin_h=${NL_AUXINPUT22_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_M"; then echo "auxinput22_begin_m=${NL_AUXINPUT22_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_S"; then echo "auxinput22_begin_s=${NL_AUXINPUT22_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN"; then echo "auxinput22_begin=${NL_AUXINPUT22_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_Y"; then echo "auxinput22_end_y=${NL_AUXINPUT22_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_D"; then echo "auxinput22_end_d=${NL_AUXINPUT22_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_H"; then echo "auxinput22_end_h=${NL_AUXINPUT22_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_M"; then echo "auxinput22_end_m=${NL_AUXINPUT22_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_S"; then echo "auxinput22_end_s=${NL_AUXINPUT22_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END"; then echo "auxinput22_end=${NL_AUXINPUT22_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT22"; then echo "io_form_auxinput22=${NL_IO_FORM_AUXINPUT22}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT22"; then echo "frames_per_auxinput22=${NL_FRAMES_PER_AUXINPUT22}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INNAME"; then echo "auxinput23_inname=\"${NL_AUXINPUT23_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_OUTNAME"; then echo "auxinput23_outname=\"${NL_AUXINPUT23_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_Y"; then echo "auxinput23_interval_y=${NL_AUXINPUT23_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_D"; then echo "auxinput23_interval_d=${NL_AUXINPUT23_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_H"; then echo "auxinput23_interval_h=${NL_AUXINPUT23_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_M"; then echo "auxinput23_interval_m=${NL_AUXINPUT23_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_S"; then echo "auxinput23_interval_s=${NL_AUXINPUT23_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL"; then echo "auxinput23_interval=${NL_AUXINPUT23_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_Y"; then echo "auxinput23_begin_y=${NL_AUXINPUT23_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_D"; then echo "auxinput23_begin_d=${NL_AUXINPUT23_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_H"; then echo "auxinput23_begin_h=${NL_AUXINPUT23_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_M"; then echo "auxinput23_begin_m=${NL_AUXINPUT23_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_S"; then echo "auxinput23_begin_s=${NL_AUXINPUT23_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN"; then echo "auxinput23_begin=${NL_AUXINPUT23_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_Y"; then echo "auxinput23_end_y=${NL_AUXINPUT23_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_D"; then echo "auxinput23_end_d=${NL_AUXINPUT23_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_H"; then echo "auxinput23_end_h=${NL_AUXINPUT23_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_M"; then echo "auxinput23_end_m=${NL_AUXINPUT23_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_S"; then echo "auxinput23_end_s=${NL_AUXINPUT23_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END"; then echo "auxinput23_end=${NL_AUXINPUT23_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT23"; then echo "io_form_auxinput23=${NL_IO_FORM_AUXINPUT23}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT23"; then echo "frames_per_auxinput23=${NL_FRAMES_PER_AUXINPUT23}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INNAME"; then echo "auxinput24_inname=\"${NL_AUXINPUT24_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_OUTNAME"; then echo "auxinput24_outname=\"${NL_AUXINPUT24_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_Y"; then echo "auxinput24_interval_y=${NL_AUXINPUT24_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_D"; then echo "auxinput24_interval_d=${NL_AUXINPUT24_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_H"; then echo "auxinput24_interval_h=${NL_AUXINPUT24_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_M"; then echo "auxinput24_interval_m=${NL_AUXINPUT24_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_S"; then echo "auxinput24_interval_s=${NL_AUXINPUT24_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL"; then echo "auxinput24_interval=${NL_AUXINPUT24_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_Y"; then echo "auxinput24_begin_y=${NL_AUXINPUT24_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_D"; then echo "auxinput24_begin_d=${NL_AUXINPUT24_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_H"; then echo "auxinput24_begin_h=${NL_AUXINPUT24_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_M"; then echo "auxinput24_begin_m=${NL_AUXINPUT24_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_S"; then echo "auxinput24_begin_s=${NL_AUXINPUT24_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN"; then echo "auxinput24_begin=${NL_AUXINPUT24_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_Y"; then echo "auxinput24_end_y=${NL_AUXINPUT24_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_D"; then echo "auxinput24_end_d=${NL_AUXINPUT24_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_H"; then echo "auxinput24_end_h=${NL_AUXINPUT24_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_M"; then echo "auxinput24_end_m=${NL_AUXINPUT24_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_S"; then echo "auxinput24_end_s=${NL_AUXINPUT24_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END"; then echo "auxinput24_end=${NL_AUXINPUT24_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT24"; then echo "io_form_auxinput24=${NL_IO_FORM_AUXINPUT24}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT24"; then echo "frames_per_auxinput24=${NL_FRAMES_PER_AUXINPUT24}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL"; then echo "history_interval=${NL_HISTORY_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_OUTFILE"; then echo "frames_per_outfile=${NL_FRAMES_PER_OUTFILE}," >> $FILE;fi
if test ! -z "$NL_RESTART"; then echo "restart=${NL_RESTART}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL"; then echo "restart_interval=${NL_RESTART_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_INPUT"; then echo "io_form_input=${NL_IO_FORM_INPUT}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_HISTORY"; then echo "io_form_history=${NL_IO_FORM_HISTORY}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_RESTART"; then echo "io_form_restart=${NL_IO_FORM_RESTART}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_BOUNDARY"; then echo "io_form_boundary=${NL_IO_FORM_BOUNDARY}," >> $FILE;fi
if test ! -z "$NL_DEBUG_LEVEL"; then echo "debug_level=${NL_DEBUG_LEVEL}," >> $FILE;fi
if test ! -z "$NL_SELF_TEST_DOMAIN"; then echo "self_test_domain=${NL_SELF_TEST_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_HISTORY_OUTNAME"; then echo "history_outname=\"${NL_HISTORY_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_HISTORY_INNAME"; then echo "history_inname=\"${NL_HISTORY_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_USE_NETCDF_CLASSIC"; then echo "use_netcdf_classic=${NL_USE_NETCDF_CLASSIC}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_D"; then echo "history_interval_d=${NL_HISTORY_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_H"; then echo "history_interval_h=${NL_HISTORY_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_M"; then echo "history_interval_m=${NL_HISTORY_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_S"; then echo "history_interval_s=${NL_HISTORY_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_D"; then echo "inputout_interval_d=${NL_INPUTOUT_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_H"; then echo "inputout_interval_h=${NL_INPUTOUT_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_M"; then echo "inputout_interval_m=${NL_INPUTOUT_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_S"; then echo "inputout_interval_s=${NL_INPUTOUT_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL"; then echo "inputout_interval=${NL_INPUTOUT_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_D"; then echo "restart_interval_d=${NL_RESTART_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_H"; then echo "restart_interval_h=${NL_RESTART_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_M"; then echo "restart_interval_m=${NL_RESTART_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_S"; then echo "restart_interval_s=${NL_RESTART_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_Y"; then echo "history_begin_y=${NL_HISTORY_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_D"; then echo "history_begin_d=${NL_HISTORY_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_H"; then echo "history_begin_h=${NL_HISTORY_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_M"; then echo "history_begin_m=${NL_HISTORY_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_S"; then echo "history_begin_s=${NL_HISTORY_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN"; then echo "history_begin=${NL_HISTORY_BEGIN}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_Y"; then echo "inputout_begin_y=${NL_INPUTOUT_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_D"; then echo "inputout_begin_d=${NL_INPUTOUT_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_H"; then echo "inputout_begin_h=${NL_INPUTOUT_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_M"; then echo "inputout_begin_m=${NL_INPUTOUT_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_S"; then echo "inputout_begin_s=${NL_INPUTOUT_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_Y"; then echo "restart_begin_y=${NL_RESTART_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_D"; then echo "restart_begin_d=${NL_RESTART_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_H"; then echo "restart_begin_h=${NL_RESTART_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_M"; then echo "restart_begin_m=${NL_RESTART_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_S"; then echo "restart_begin_s=${NL_RESTART_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN"; then echo "restart_begin=${NL_RESTART_BEGIN}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_Y"; then echo "history_end_y=${NL_HISTORY_END_Y}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_D"; then echo "history_end_d=${NL_HISTORY_END_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_H"; then echo "history_end_h=${NL_HISTORY_END_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_M"; then echo "history_end_m=${NL_HISTORY_END_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_S"; then echo "history_end_s=${NL_HISTORY_END_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END"; then echo "history_end=${NL_HISTORY_END}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_Y"; then echo "inputout_end_y=${NL_INPUTOUT_END_Y}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_D"; then echo "inputout_end_d=${NL_INPUTOUT_END_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_H"; then echo "inputout_end_h=${NL_INPUTOUT_END_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_M"; then echo "inputout_end_m=${NL_INPUTOUT_END_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_S"; then echo "inputout_end_s=${NL_INPUTOUT_END_S}," >> $FILE;fi
if test ! -z "$NL_RESET_SIMULATION_START"; then echo "reset_simulation_start=${NL_RESET_SIMULATION_START}," >> $FILE;fi
if test ! -z "$NL_IOFIELDS_FILENAME"; then echo "iofields_filename=\"${NL_IOFIELDS_FILENAME}\"," >> $FILE;fi
if test ! -z "$NL_IGNORE_IOFIELDS_WARNING"; then echo "ignore_iofields_warning=${NL_IGNORE_IOFIELDS_WARNING}," >> $FILE;fi
if test ! -z "$NL_NCD_NOFILL"; then echo "ncd_nofill=${NL_NCD_NOFILL}," >> $FILE;fi
echo / >> $FILE
echo \&pio_control >> $FILE
if test ! -z "$NL_USEPIO"; then echo "usepio=${NL_USEPIO}," >> $FILE;fi
if test ! -z "$NL_PIOPROCS"; then echo "pioprocs=${NL_PIOPROCS}," >> $FILE;fi
if test ! -z "$NL_PIOSTART"; then echo "piostart=${NL_PIOSTART}," >> $FILE;fi
if test ! -z "$NL_PIOSTRIDE"; then echo "piostride=${NL_PIOSTRIDE}," >> $FILE;fi
if test ! -z "$NL_PIOSHIFT"; then echo "pioshift=${NL_PIOSHIFT}," >> $FILE;fi
echo / >> $FILE
echo \&dfi_control >> $FILE
if test ! -z "$NL_DFI_OPT"; then echo "dfi_opt=${NL_DFI_OPT}," >> $FILE;fi
if test ! -z "$NL_DFI_SAVEHYDMETEORS"; then echo "dfi_savehydmeteors=${NL_DFI_SAVEHYDMETEORS}," >> $FILE;fi
if test ! -z "$NL_DFI_NFILTER"; then echo "dfi_nfilter=${NL_DFI_NFILTER}," >> $FILE;fi
if test ! -z "$NL_DFI_WRITE_FILTERED_INPUT"; then echo "dfi_write_filtered_input=${NL_DFI_WRITE_FILTERED_INPUT}," >> $FILE;fi
if test ! -z "$NL_DFI_WRITE_DFI_HISTORY"; then echo "dfi_write_dfi_history=${NL_DFI_WRITE_DFI_HISTORY}," >> $FILE;fi
if test ! -z "$NL_DFI_CUTOFF_SECONDS"; then echo "dfi_cutoff_seconds=${NL_DFI_CUTOFF_SECONDS}," >> $FILE;fi
if test ! -z "$NL_DFI_TIME_DIM"; then echo "dfi_time_dim=${NL_DFI_TIME_DIM}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_YEAR"; then echo "dfi_fwdstop_year=${NL_DFI_FWDSTOP_YEAR}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_MONTH"; then echo "dfi_fwdstop_month=${NL_DFI_FWDSTOP_MONTH}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_DAY"; then echo "dfi_fwdstop_day=${NL_DFI_FWDSTOP_DAY}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_HOUR"; then echo "dfi_fwdstop_hour=${NL_DFI_FWDSTOP_HOUR}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_MINUTE"; then echo "dfi_fwdstop_minute=${NL_DFI_FWDSTOP_MINUTE}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_SECOND"; then echo "dfi_fwdstop_second=${NL_DFI_FWDSTOP_SECOND}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_YEAR"; then echo "dfi_bckstop_year=${NL_DFI_BCKSTOP_YEAR}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_MONTH"; then echo "dfi_bckstop_month=${NL_DFI_BCKSTOP_MONTH}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_DAY"; then echo "dfi_bckstop_day=${NL_DFI_BCKSTOP_DAY}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_HOUR"; then echo "dfi_bckstop_hour=${NL_DFI_BCKSTOP_HOUR}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_MINUTE"; then echo "dfi_bckstop_minute=${NL_DFI_BCKSTOP_MINUTE}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_SECOND"; then echo "dfi_bckstop_second=${NL_DFI_BCKSTOP_SECOND}," >> $FILE;fi
echo / >> $FILE
echo \&domains >> $FILE
if test ! -z "$NL_TIME_STEP"; then echo "time_step=${NL_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_FRACT_NUM"; then echo "time_step_fract_num=${NL_TIME_STEP_FRACT_NUM}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_FRACT_DEN"; then echo "time_step_fract_den=${NL_TIME_STEP_FRACT_DEN}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_DFI"; then echo "time_step_dfi=${NL_TIME_STEP_DFI}," >> $FILE;fi
if test ! -z "$NL_MIN_TIME_STEP"; then echo "min_time_step=${NL_MIN_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_MIN_TIME_STEP_DEN"; then echo "min_time_step_den=${NL_MIN_TIME_STEP_DEN}," >> $FILE;fi
if test ! -z "$NL_MAX_TIME_STEP"; then echo "max_time_step=${NL_MAX_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_MAX_TIME_STEP_DEN"; then echo "max_time_step_den=${NL_MAX_TIME_STEP_DEN}," >> $FILE;fi
if test ! -z "$NL_TARGET_CFL"; then echo "target_cfl=${NL_TARGET_CFL}," >> $FILE;fi
if test ! -z "$NL_TARGET_HCFL"; then echo "target_hcfl=${NL_TARGET_HCFL}," >> $FILE;fi
if test ! -z "$NL_MAX_STEP_INCREASE_PCT"; then echo "max_step_increase_pct=${NL_MAX_STEP_INCREASE_PCT}," >> $FILE;fi
if test ! -z "$NL_STARTING_TIME_STEP"; then echo "starting_time_step=${NL_STARTING_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_STARTING_TIME_STEP_DEN"; then echo "starting_time_step_den=${NL_STARTING_TIME_STEP_DEN}," >> $FILE;fi
if test ! -z "$NL_STEP_TO_OUTPUT_TIME"; then echo "step_to_output_time=${NL_STEP_TO_OUTPUT_TIME}," >> $FILE;fi
if test ! -z "$NL_ADAPTATION_DOMAIN"; then echo "adaptation_domain=${NL_ADAPTATION_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_USE_ADAPTIVE_TIME_STEP"; then echo "use_adaptive_time_step=${NL_USE_ADAPTIVE_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_USE_ADAPTIVE_TIME_STEP_DFI"; then echo "use_adaptive_time_step_dfi=${NL_USE_ADAPTIVE_TIME_STEP_DFI}," >> $FILE;fi
if test ! -z "$NL_MAX_DOM"; then echo "max_dom=${NL_MAX_DOM}," >> $FILE;fi
if test ! -z "$NL_LATS_TO_MIC"; then echo "lats_to_mic=${NL_LATS_TO_MIC}," >> $FILE;fi
if test ! -z "$NL_S_WE"; then echo "s_we=${NL_S_WE}," >> $FILE;fi
if test ! -z "$NL_E_WE"; then echo "e_we=${NL_E_WE}," >> $FILE;fi
if test ! -z "$NL_S_SN"; then echo "s_sn=${NL_S_SN}," >> $FILE;fi
if test ! -z "$NL_E_SN"; then echo "e_sn=${NL_E_SN}," >> $FILE;fi
if test ! -z "$NL_S_VERT"; then echo "s_vert=${NL_S_VERT}," >> $FILE;fi
if test ! -z "$NL_E_VERT"; then echo "e_vert=${NL_E_VERT}," >> $FILE;fi
if test ! -z "$NL_NUM_METGRID_LEVELS"; then echo "num_metgrid_levels=${NL_NUM_METGRID_LEVELS}," >> $FILE;fi
if test ! -z "$NL_NUM_METGRID_SOIL_LEVELS"; then echo "num_metgrid_soil_levels=${NL_NUM_METGRID_SOIL_LEVELS}," >> $FILE;fi
if test ! -z "$NL_P_TOP_REQUESTED"; then echo "p_top_requested=${NL_P_TOP_REQUESTED}," >> $FILE;fi
if test ! -z "$NL_INTERP_THETA"; then echo "interp_theta=${NL_INTERP_THETA}," >> $FILE;fi
if test ! -z "$NL_INTERP_TYPE"; then echo "interp_type=${NL_INTERP_TYPE}," >> $FILE;fi
if test ! -z "$NL_REBALANCE"; then echo "rebalance=${NL_REBALANCE}," >> $FILE;fi
if test ! -z "$NL_VERT_REFINE_METHOD"; then echo "vert_refine_method=${NL_VERT_REFINE_METHOD}," >> $FILE;fi
if test ! -z "$NL_VERT_REFINE_FACT"; then echo "vert_refine_fact=${NL_VERT_REFINE_FACT}," >> $FILE;fi
if test ! -z "$NL_EXTRAP_TYPE"; then echo "extrap_type=${NL_EXTRAP_TYPE}," >> $FILE;fi
if test ! -z "$NL_T_EXTRAP_TYPE"; then echo "t_extrap_type=${NL_T_EXTRAP_TYPE}," >> $FILE;fi
if test ! -z "$NL_HYPSOMETRIC_OPT"; then echo "hypsometric_opt=${NL_HYPSOMETRIC_OPT}," >> $FILE;fi
if test ! -z "$NL_LOWEST_LEV_FROM_SFC"; then echo "lowest_lev_from_sfc=${NL_LOWEST_LEV_FROM_SFC}," >> $FILE;fi
if test ! -z "$NL_USE_LEVELS_BELOW_GROUND"; then echo "use_levels_below_ground=${NL_USE_LEVELS_BELOW_GROUND}," >> $FILE;fi
if test ! -z "$NL_USE_TAVG_FOR_TSK"; then echo "use_tavg_for_tsk=${NL_USE_TAVG_FOR_TSK}," >> $FILE;fi
if test ! -z "$NL_USE_SURFACE"; then echo "use_surface=${NL_USE_SURFACE}," >> $FILE;fi
if test ! -z "$NL_LAGRANGE_ORDER"; then echo "lagrange_order=${NL_LAGRANGE_ORDER}," >> $FILE;fi
if test ! -z "$NL_FORCE_SFC_IN_VINTERP"; then echo "force_sfc_in_vinterp=${NL_FORCE_SFC_IN_VINTERP}," >> $FILE;fi
if test ! -z "$NL_ZAP_CLOSE_LEVELS"; then echo "zap_close_levels=${NL_ZAP_CLOSE_LEVELS}," >> $FILE;fi
if test ! -z "$NL_MAXW_HORIZ_PRES_DIFF"; then echo "maxw_horiz_pres_diff=${NL_MAXW_HORIZ_PRES_DIFF}," >> $FILE;fi
if test ! -z "$NL_TROP_HORIZ_PRES_DIFF"; then echo "trop_horiz_pres_diff=${NL_TROP_HORIZ_PRES_DIFF}," >> $FILE;fi
if test ! -z "$NL_MAXW_ABOVE_THIS_LEVEL"; then echo "maxw_above_this_level=${NL_MAXW_ABOVE_THIS_LEVEL}," >> $FILE;fi
if test ! -z "$NL_USE_MAXW_LEVEL"; then echo "use_maxw_level=${NL_USE_MAXW_LEVEL}," >> $FILE;fi
if test ! -z "$NL_USE_TROP_LEVEL"; then echo "use_trop_level=${NL_USE_TROP_LEVEL}," >> $FILE;fi
if test ! -z "$NL_SFCP_TO_SFCP"; then echo "sfcp_to_sfcp=${NL_SFCP_TO_SFCP}," >> $FILE;fi
if test ! -z "$NL_ADJUST_HEIGHTS"; then echo "adjust_heights=${NL_ADJUST_HEIGHTS}," >> $FILE;fi
if test ! -z "$NL_SMOOTH_CG_TOPO"; then echo "smooth_cg_topo=${NL_SMOOTH_CG_TOPO}," >> $FILE;fi
if test ! -z "$NL_NEST_INTERP_COORD"; then echo "nest_interp_coord=${NL_NEST_INTERP_COORD}," >> $FILE;fi
if test ! -z "$NL_INTERP_METHOD_TYPE"; then echo "interp_method_type=${NL_INTERP_METHOD_TYPE}," >> $FILE;fi
if test ! -z "$NL_AGGREGATE_LU"; then echo "aggregate_lu=${NL_AGGREGATE_LU}," >> $FILE;fi
if test ! -z "$NL_RH2QV_WRT_LIQUID"; then echo "rh2qv_wrt_liquid=${NL_RH2QV_WRT_LIQUID}," >> $FILE;fi
if test ! -z "$NL_RH2QV_METHOD"; then echo "rh2qv_method=${NL_RH2QV_METHOD}," >> $FILE;fi
if test ! -z "$NL_QV_MAX_P_SAFE"; then echo "qv_max_p_safe=${NL_QV_MAX_P_SAFE}," >> $FILE;fi
if test ! -z "$NL_QV_MAX_FLAG"; then echo "qv_max_flag=${NL_QV_MAX_FLAG}," >> $FILE;fi
if test ! -z "$NL_QV_MAX_VALUE"; then echo "qv_max_value=${NL_QV_MAX_VALUE}," >> $FILE;fi
if test ! -z "$NL_QV_MIN_P_SAFE"; then echo "qv_min_p_safe=${NL_QV_MIN_P_SAFE}," >> $FILE;fi
if test ! -z "$NL_QV_MIN_FLAG"; then echo "qv_min_flag=${NL_QV_MIN_FLAG}," >> $FILE;fi
if test ! -z "$NL_QV_MIN_VALUE"; then echo "qv_min_value=${NL_QV_MIN_VALUE}," >> $FILE;fi
if test ! -z "$NL_IDEAL_INIT_METHOD"; then echo "ideal_init_method=${NL_IDEAL_INIT_METHOD}," >> $FILE;fi
if test ! -z "$NL_DX"; then echo "dx=${NL_DX}," >> $FILE;fi
if test ! -z "$NL_DY"; then echo "dy=${NL_DY}," >> $FILE;fi
if test ! -z "$NL_GRID_ID"; then echo "grid_id=${NL_GRID_ID}," >> $FILE;fi
if test ! -z "$NL_GRID_ALLOWED"; then echo "grid_allowed=${NL_GRID_ALLOWED}," >> $FILE;fi
if test ! -z "$NL_PARENT_ID"; then echo "parent_id=${NL_PARENT_ID}," >> $FILE;fi
if test ! -z "$NL_I_PARENT_START"; then echo "i_parent_start=${NL_I_PARENT_START}," >> $FILE;fi
if test ! -z "$NL_J_PARENT_START"; then echo "j_parent_start=${NL_J_PARENT_START}," >> $FILE;fi
if test ! -z "$NL_PARENT_GRID_RATIO"; then echo "parent_grid_ratio=${NL_PARENT_GRID_RATIO}," >> $FILE;fi
if test ! -z "$NL_PARENT_TIME_STEP_RATIO"; then echo "parent_time_step_ratio=${NL_PARENT_TIME_STEP_RATIO}," >> $FILE;fi
if test ! -z "$NL_FEEDBACK"; then echo "feedback=${NL_FEEDBACK}," >> $FILE;fi
if test ! -z "$NL_SMOOTH_OPTION"; then echo "smooth_option=${NL_SMOOTH_OPTION}," >> $FILE;fi
if test ! -z "$NL_BLEND_WIDTH"; then echo "blend_width=${NL_BLEND_WIDTH}," >> $FILE;fi
if test ! -z "$NL_ZTOP"; then echo "ztop=${NL_ZTOP}," >> $FILE;fi
if test ! -z "$NL_MOAD_GRID_RATIO"; then echo "moad_grid_ratio=${NL_MOAD_GRID_RATIO}," >> $FILE;fi
if test ! -z "$NL_MOAD_TIME_STEP_RATIO"; then echo "moad_time_step_ratio=${NL_MOAD_TIME_STEP_RATIO}," >> $FILE;fi
if test ! -z "$NL_SHW"; then echo "shw=${NL_SHW}," >> $FILE;fi
if test ! -z "$NL_TILE_SZ_X"; then echo "tile_sz_x=${NL_TILE_SZ_X}," >> $FILE;fi
if test ! -z "$NL_TILE_SZ_Y"; then echo "tile_sz_y=${NL_TILE_SZ_Y}," >> $FILE;fi
if test ! -z "$NL_NUMTILES"; then echo "numtiles=${NL_NUMTILES}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_INC"; then echo "numtiles_inc=${NL_NUMTILES_INC}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_X"; then echo "numtiles_x=${NL_NUMTILES_X}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_Y"; then echo "numtiles_y=${NL_NUMTILES_Y}," >> $FILE;fi
if test ! -z "$NL_TILE_STRATEGY"; then echo "tile_strategy=${NL_TILE_STRATEGY}," >> $FILE;fi
if test ! -z "$NL_NPROC_X"; then echo "nproc_x=${NL_NPROC_X}," >> $FILE;fi
if test ! -z "$NL_NPROC_Y"; then echo "nproc_y=${NL_NPROC_Y}," >> $FILE;fi
if test ! -z "$NL_IRAND"; then echo "irand=${NL_IRAND}," >> $FILE;fi
if test ! -z "$NL_NUM_MOVES"; then echo "num_moves=${NL_NUM_MOVES}," >> $FILE;fi
if test ! -z "$NL_TS_BUF_SIZE"; then echo "ts_buf_size=${NL_TS_BUF_SIZE}," >> $FILE;fi
if test ! -z "$NL_MAX_TS_LOCS"; then echo "max_ts_locs=${NL_MAX_TS_LOCS}," >> $FILE;fi
if test ! -z "$NL_VORTEX_INTERVAL"; then echo "vortex_interval=${NL_VORTEX_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_MAX_VORTEX_SPEED"; then echo "max_vortex_speed=${NL_MAX_VORTEX_SPEED}," >> $FILE;fi
if test ! -z "$NL_CORRAL_DIST"; then echo "corral_dist=${NL_CORRAL_DIST}," >> $FILE;fi
if test ! -z "$NL_TRACK_LEVEL"; then echo "track_level=${NL_TRACK_LEVEL}," >> $FILE;fi
if test ! -z "$NL_TIME_TO_MOVE"; then echo "time_to_move=${NL_TIME_TO_MOVE}," >> $FILE;fi
if test ! -z "$NL_MOVE_ID"; then echo "move_id=${NL_MOVE_ID}," >> $FILE;fi
if test ! -z "$NL_MOVE_INTERVAL"; then echo "move_interval=${NL_MOVE_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_MOVE_CD_X"; then echo "move_cd_x=${NL_MOVE_CD_X}," >> $FILE;fi
if test ! -z "$NL_MOVE_CD_Y"; then echo "move_cd_y=${NL_MOVE_CD_Y}," >> $FILE;fi
if test ! -z "$NL_SWAP_X"; then echo "swap_x=${NL_SWAP_X}," >> $FILE;fi
if test ! -z "$NL_SWAP_Y"; then echo "swap_y=${NL_SWAP_Y}," >> $FILE;fi
if test ! -z "$NL_CYCLE_X"; then echo "cycle_x=${NL_CYCLE_X}," >> $FILE;fi
if test ! -z "$NL_CYCLE_Y"; then echo "cycle_y=${NL_CYCLE_Y}," >> $FILE;fi
if test ! -z "$NL_REORDER_MESH"; then echo "reorder_mesh=${NL_REORDER_MESH}," >> $FILE;fi
if test ! -z "$NL_PERTURB_INPUT"; then echo "perturb_input=${NL_PERTURB_INPUT}," >> $FILE;fi
if test ! -z "$NL_ETA_LEVELS"; then echo "eta_levels=${NL_ETA_LEVELS}," >> $FILE;fi
if test ! -z "$NL_MAX_DZ"; then echo "max_dz=${NL_MAX_DZ}," >> $FILE;fi
if test ! -z "$NL_OCEAN_LEVELS"; then echo "ocean_levels=${NL_OCEAN_LEVELS}," >> $FILE;fi
if test ! -z "$NL_OCEAN_Z"; then echo "ocean_z=${NL_OCEAN_Z}," >> $FILE;fi
if test ! -z "$NL_OCEAN_T"; then echo "ocean_t=${NL_OCEAN_T}," >> $FILE;fi
if test ! -z "$NL_OCEAN_S"; then echo "ocean_s=${NL_OCEAN_S}," >> $FILE;fi
if test ! -z "$NL_NUM_TRAJ"; then echo "num_traj=${NL_NUM_TRAJ}," >> $FILE;fi
if test ! -z "$NL_MAX_TS_LEVEL"; then echo "max_ts_level=${NL_MAX_TS_LEVEL}," >> $FILE;fi
if test ! -z "$NL_TRACK_LOC_IN"; then echo "track_loc_in=${NL_TRACK_LOC_IN}," >> $FILE;fi
if test ! -z "$NL_NUM_EXT_MODEL_COUPLE_DOM"; then echo "num_ext_model_couple_dom=${NL_NUM_EXT_MODEL_COUPLE_DOM}," >> $FILE;fi
if test ! -z "$NL_SR_X"; then echo "sr_x=${NL_SR_X}," >> $FILE;fi
if test ! -z "$NL_SR_Y"; then echo "sr_y=${NL_SR_Y}," >> $FILE;fi
echo / >> $FILE
echo \&tc >> $FILE
if test ! -z "$NL_INSERT_BOGUS_STORM"; then echo "insert_bogus_storm=${NL_INSERT_BOGUS_STORM}," >> $FILE;fi
if test ! -z "$NL_REMOVE_STORM"; then echo "remove_storm=${NL_REMOVE_STORM}," >> $FILE;fi
if test ! -z "$NL_NUM_STORM"; then echo "num_storm=${NL_NUM_STORM}," >> $FILE;fi
if test ! -z "$NL_LATC_LOC"; then echo "latc_loc=${NL_LATC_LOC}," >> $FILE;fi
if test ! -z "$NL_LONC_LOC"; then echo "lonc_loc=${NL_LONC_LOC}," >> $FILE;fi
if test ! -z "$NL_VMAX_METERS_PER_SECOND"; then echo "vmax_meters_per_second=${NL_VMAX_METERS_PER_SECOND}," >> $FILE;fi
if test ! -z "$NL_RMAX"; then echo "rmax=${NL_RMAX}," >> $FILE;fi
if test ! -z "$NL_VMAX_RATIO"; then echo "vmax_ratio=${NL_VMAX_RATIO}," >> $FILE;fi
if test ! -z "$NL_RANKINE_LID"; then echo "rankine_lid=${NL_RANKINE_LID}," >> $FILE;fi
echo / >> $FILE
echo \&physics >> $FILE
if test ! -z "$NL_FORCE_READ_THOMPSON"; then echo "force_read_thompson=${NL_FORCE_READ_THOMPSON}," >> $FILE;fi
if test ! -z "$NL_WRITE_THOMPSON_TABLES"; then echo "write_thompson_tables=${NL_WRITE_THOMPSON_TABLES}," >> $FILE;fi
if test ! -z "$NL_MP_PHYSICS"; then echo "mp_physics=${NL_MP_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_NSSL_CCCN"; then echo "nssl_cccn=${NL_NSSL_CCCN}," >> $FILE;fi
if test ! -z "$NL_NSSL_ALPHAH"; then echo "nssl_alphah=${NL_NSSL_ALPHAH}," >> $FILE;fi
if test ! -z "$NL_NSSL_ALPHAHL"; then echo "nssl_alphahl=${NL_NSSL_ALPHAHL}," >> $FILE;fi
if test ! -z "$NL_NSSL_CNOH"; then echo "nssl_cnoh=${NL_NSSL_CNOH}," >> $FILE;fi
if test ! -z "$NL_NSSL_CNOHL"; then echo "nssl_cnohl=${NL_NSSL_CNOHL}," >> $FILE;fi
if test ! -z "$NL_NSSL_CNOR"; then echo "nssl_cnor=${NL_NSSL_CNOR}," >> $FILE;fi
if test ! -z "$NL_NSSL_CNOS"; then echo "nssl_cnos=${NL_NSSL_CNOS}," >> $FILE;fi
if test ! -z "$NL_NSSL_RHO_QH"; then echo "nssl_rho_qh=${NL_NSSL_RHO_QH}," >> $FILE;fi
if test ! -z "$NL_NSSL_RHO_QHL"; then echo "nssl_rho_qhl=${NL_NSSL_RHO_QHL}," >> $FILE;fi
if test ! -z "$NL_NSSL_RHO_QS"; then echo "nssl_rho_qs=${NL_NSSL_RHO_QS}," >> $FILE;fi
if test ! -z "$NL_NUDGE_LIGHTNING"; then echo "nudge_lightning=${NL_NUDGE_LIGHTNING}," >> $FILE;fi
if test ! -z "$NL_NUDGE_LIGHT_TIMES"; then echo "nudge_light_times=${NL_NUDGE_LIGHT_TIMES}," >> $FILE;fi
if test ! -z "$NL_NUDGE_LIGHT_TIMEE"; then echo "nudge_light_timee=${NL_NUDGE_LIGHT_TIMEE}," >> $FILE;fi
if test ! -z "$NL_NUDGE_LIGHT_INT"; then echo "nudge_light_int=${NL_NUDGE_LIGHT_INT}," >> $FILE;fi
if test ! -z "$NL_PATH_TO_FILES"; then echo "path_to_files=\"${NL_PATH_TO_FILES}\"," >> $FILE;fi
if test ! -z "$NL_GSFCGCE_HAIL"; then echo "gsfcgce_hail=${NL_GSFCGCE_HAIL}," >> $FILE;fi
if test ! -z "$NL_GSFCGCE_2ICE"; then echo "gsfcgce_2ice=${NL_GSFCGCE_2ICE}," >> $FILE;fi
if test ! -z "$NL_PROGN"; then echo "progn=${NL_PROGN}," >> $FILE;fi
if test ! -z "$NL_ACCUM_MODE"; then echo "accum_mode=${NL_ACCUM_MODE}," >> $FILE;fi
if test ! -z "$NL_AITKEN_MODE"; then echo "aitken_mode=${NL_AITKEN_MODE}," >> $FILE;fi
if test ! -z "$NL_COARSE_MODE"; then echo "coarse_mode=${NL_COARSE_MODE}," >> $FILE;fi
if test ! -z "$NL_DO_RADAR_REF"; then echo "do_radar_ref=${NL_DO_RADAR_REF}," >> $FILE;fi
if test ! -z "$NL_RA_LW_PHYSICS"; then echo "ra_lw_physics=${NL_RA_LW_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_RA_SW_PHYSICS"; then echo "ra_sw_physics=${NL_RA_SW_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_RADT"; then echo "radt=${NL_RADT}," >> $FILE;fi
if test ! -z "$NL_NAER"; then echo "naer=${NL_NAER}," >> $FILE;fi
if test ! -z "$NL_SF_SFCLAY_PHYSICS"; then echo "sf_sfclay_physics=${NL_SF_SFCLAY_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_SF_SURFACE_PHYSICS"; then echo "sf_surface_physics=${NL_SF_SURFACE_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_BL_PBL_PHYSICS"; then echo "bl_pbl_physics=${NL_BL_PBL_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_TKEBUDGET"; then echo "bl_mynn_tkebudget=${NL_BL_MYNN_TKEBUDGET}," >> $FILE;fi
if test ! -z "$NL_YSU_TOPDOWN_PBLMIX"; then echo "ysu_topdown_pblmix=${NL_YSU_TOPDOWN_PBLMIX}," >> $FILE;fi
if test ! -z "$NL_SHINHONG_TKE_DIAG"; then echo "shinhong_tke_diag=${NL_SHINHONG_TKE_DIAG}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_TKEADVECT"; then echo "bl_mynn_tkeadvect=${NL_BL_MYNN_TKEADVECT}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_CLOUDPDF"; then echo "bl_mynn_cloudpdf=${NL_BL_MYNN_CLOUDPDF}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_MIXLENGTH"; then echo "bl_mynn_mixlength=${NL_BL_MYNN_MIXLENGTH}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_EDMF"; then echo "bl_mynn_edmf=${NL_BL_MYNN_EDMF}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_EDMF_MOM"; then echo "bl_mynn_edmf_mom=${NL_BL_MYNN_EDMF_MOM}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_EDMF_TKE"; then echo "bl_mynn_edmf_tke=${NL_BL_MYNN_EDMF_TKE}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_EDMF_PART"; then echo "bl_mynn_edmf_part=${NL_BL_MYNN_EDMF_PART}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_CLOUDMIX"; then echo "bl_mynn_cloudmix=${NL_BL_MYNN_CLOUDMIX}," >> $FILE;fi
if test ! -z "$NL_BL_MYNN_MIXQT"; then echo "bl_mynn_mixqt=${NL_BL_MYNN_MIXQT}," >> $FILE;fi
if test ! -z "$NL_ICLOUD_BL"; then echo "icloud_bl=${NL_ICLOUD_BL}," >> $FILE;fi
if test ! -z "$NL_MFSHCONV"; then echo "mfshconv=${NL_MFSHCONV}," >> $FILE;fi
if test ! -z "$NL_SF_URBAN_PHYSICS"; then echo "sf_urban_physics=${NL_SF_URBAN_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_BLDT"; then echo "bldt=${NL_BLDT}," >> $FILE;fi
if test ! -z "$NL_CU_PHYSICS"; then echo "cu_physics=${NL_CU_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_SHCU_PHYSICS"; then echo "shcu_physics=${NL_SHCU_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_CU_DIAG"; then echo "cu_diag=${NL_CU_DIAG}," >> $FILE;fi
if test ! -z "$NL_KF_EDRATES"; then echo "kf_edrates=${NL_KF_EDRATES}," >> $FILE;fi
if test ! -z "$NL_KFETA_TRIGGER"; then echo "kfeta_trigger=${NL_KFETA_TRIGGER}," >> $FILE;fi
if test ! -z "$NL_NSAS_DX_FACTOR"; then echo "nsas_dx_factor=${NL_NSAS_DX_FACTOR}," >> $FILE;fi
if test ! -z "$NL_CUDT"; then echo "cudt=${NL_CUDT}," >> $FILE;fi
if test ! -z "$NL_GSMDT"; then echo "gsmdt=${NL_GSMDT}," >> $FILE;fi
if test ! -z "$NL_ISFFLX"; then echo "isfflx=${NL_ISFFLX}," >> $FILE;fi
if test ! -z "$NL_IFSNOW"; then echo "ifsnow=${NL_IFSNOW}," >> $FILE;fi
if test ! -z "$NL_ICLOUD"; then echo "icloud=${NL_ICLOUD}," >> $FILE;fi
if test ! -z "$NL_IDEAL_XLAND"; then echo "ideal_xland=${NL_IDEAL_XLAND}," >> $FILE;fi
if test ! -z "$NL_SWRAD_SCAT"; then echo "swrad_scat=${NL_SWRAD_SCAT}," >> $FILE;fi
if test ! -z "$NL_SURFACE_INPUT_SOURCE"; then echo "surface_input_source=${NL_SURFACE_INPUT_SOURCE}," >> $FILE;fi
if test ! -z "$NL_NUM_SOIL_LAYERS"; then echo "num_soil_layers=${NL_NUM_SOIL_LAYERS}," >> $FILE;fi
if test ! -z "$NL_MAXPATCH"; then echo "maxpatch=${NL_MAXPATCH}," >> $FILE;fi
if test ! -z "$NL_NUM_SNOW_LAYERS"; then echo "num_snow_layers=${NL_NUM_SNOW_LAYERS}," >> $FILE;fi
if test ! -z "$NL_NUM_SNSO_LAYERS"; then echo "num_snso_layers=${NL_NUM_SNSO_LAYERS}," >> $FILE;fi
if test ! -z "$NL_NUM_URBAN_LAYERS"; then echo "num_urban_layers=${NL_NUM_URBAN_LAYERS}," >> $FILE;fi
if test ! -z "$NL_NUM_URBAN_HI"; then echo "num_urban_hi=${NL_NUM_URBAN_HI}," >> $FILE;fi
if test ! -z "$NL_NUM_MONTHS"; then echo "num_months=${NL_NUM_MONTHS}," >> $FILE;fi
if test ! -z "$NL_SF_SURFACE_MOSAIC"; then echo "sf_surface_mosaic=${NL_SF_SURFACE_MOSAIC}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_CAT"; then echo "mosaic_cat=${NL_MOSAIC_CAT}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_LU"; then echo "mosaic_lu=${NL_MOSAIC_LU}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_SOIL"; then echo "mosaic_soil=${NL_MOSAIC_SOIL}," >> $FILE;fi
if test ! -z "$NL_MAXIENS"; then echo "maxiens=${NL_MAXIENS}," >> $FILE;fi
if test ! -z "$NL_MAXENS"; then echo "maxens=${NL_MAXENS}," >> $FILE;fi
if test ! -z "$NL_MAXENS2"; then echo "maxens2=${NL_MAXENS2}," >> $FILE;fi
if test ! -z "$NL_MAXENS3"; then echo "maxens3=${NL_MAXENS3}," >> $FILE;fi
if test ! -z "$NL_ENSDIM"; then echo "ensdim=${NL_ENSDIM}," >> $FILE;fi
if test ! -z "$NL_CUGD_AVEDX"; then echo "cugd_avedx=${NL_CUGD_AVEDX}," >> $FILE;fi
if test ! -z "$NL_CLOS_CHOICE"; then echo "clos_choice=${NL_CLOS_CHOICE}," >> $FILE;fi
if test ! -z "$NL_IMOMENTUM"; then echo "imomentum=${NL_IMOMENTUM}," >> $FILE;fi
if test ! -z "$NL_ISHALLOW"; then echo "ishallow=${NL_ISHALLOW}," >> $FILE;fi
if test ! -z "$NL_CONVTRANS_AVGLEN_M"; then echo "convtrans_avglen_m=${NL_CONVTRANS_AVGLEN_M}," >> $FILE;fi
if test ! -z "$NL_NUM_LAND_CAT"; then echo "num_land_cat=${NL_NUM_LAND_CAT}," >> $FILE;fi
if test ! -z "$NL_NUM_SOIL_CAT"; then echo "num_soil_cat=${NL_NUM_SOIL_CAT}," >> $FILE;fi
if test ! -z "$NL_MP_ZERO_OUT"; then echo "mp_zero_out=${NL_MP_ZERO_OUT}," >> $FILE;fi
if test ! -z "$NL_MP_ZERO_OUT_THRESH"; then echo "mp_zero_out_thresh=${NL_MP_ZERO_OUT_THRESH}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THRESHOLD"; then echo "seaice_threshold=${NL_SEAICE_THRESHOLD}," >> $FILE;fi
if test ! -z "$NL_SST_UPDATE"; then echo "sst_update=${NL_SST_UPDATE}," >> $FILE;fi
if test ! -z "$NL_SST_SKIN"; then echo "sst_skin=${NL_SST_SKIN}," >> $FILE;fi
if test ! -z "$NL_TMN_UPDATE"; then echo "tmn_update=${NL_TMN_UPDATE}," >> $FILE;fi
if test ! -z "$NL_USEMONALB"; then echo "usemonalb=${NL_USEMONALB}," >> $FILE;fi
if test ! -z "$NL_RDMAXALB"; then echo "rdmaxalb=${NL_RDMAXALB}," >> $FILE;fi
if test ! -z "$NL_RDLAI2D"; then echo "rdlai2d=${NL_RDLAI2D}," >> $FILE;fi
if test ! -z "$NL_UA_PHYS"; then echo "ua_phys=${NL_UA_PHYS}," >> $FILE;fi
if test ! -z "$NL_OPT_THCND"; then echo "opt_thcnd=${NL_OPT_THCND}," >> $FILE;fi
if test ! -z "$NL_CO2TF"; then echo "co2tf=${NL_CO2TF}," >> $FILE;fi
if test ! -z "$NL_RA_CALL_OFFSET"; then echo "ra_call_offset=${NL_RA_CALL_OFFSET}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_FREQ_S"; then echo "cam_abs_freq_s=${NL_CAM_ABS_FREQ_S}," >> $FILE;fi
if test ! -z "$NL_LEVSIZ"; then echo "levsiz=${NL_LEVSIZ}," >> $FILE;fi
if test ! -z "$NL_PAERLEV"; then echo "paerlev=${NL_PAERLEV}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_DIM1"; then echo "cam_abs_dim1=${NL_CAM_ABS_DIM1}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_DIM2"; then echo "cam_abs_dim2=${NL_CAM_ABS_DIM2}," >> $FILE;fi
if test ! -z "$NL_LAGDAY"; then echo "lagday=${NL_LAGDAY}," >> $FILE;fi
if test ! -z "$NL_NO_SRC_TYPES"; then echo "no_src_types=${NL_NO_SRC_TYPES}," >> $FILE;fi
if test ! -z "$NL_ALEVSIZ"; then echo "alevsiz=${NL_ALEVSIZ}," >> $FILE;fi
if test ! -z "$NL_O3INPUT"; then echo "o3input=${NL_O3INPUT}," >> $FILE;fi
if test ! -z "$NL_AER_OPT"; then echo "aer_opt=${NL_AER_OPT}," >> $FILE;fi
if test ! -z "$NL_SWINT_OPT"; then echo "swint_opt=${NL_SWINT_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_TYPE"; then echo "aer_type=${NL_AER_TYPE}," >> $FILE;fi
if test ! -z "$NL_AER_AOD550_OPT"; then echo "aer_aod550_opt=${NL_AER_AOD550_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_ANGEXP_OPT"; then echo "aer_angexp_opt=${NL_AER_ANGEXP_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_SSA_OPT"; then echo "aer_ssa_opt=${NL_AER_SSA_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_ASY_OPT"; then echo "aer_asy_opt=${NL_AER_ASY_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_AOD550_VAL"; then echo "aer_aod550_val=${NL_AER_AOD550_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_ANGEXP_VAL"; then echo "aer_angexp_val=${NL_AER_ANGEXP_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_SSA_VAL"; then echo "aer_ssa_val=${NL_AER_SSA_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_ASY_VAL"; then echo "aer_asy_val=${NL_AER_ASY_VAL}," >> $FILE;fi
if test ! -z "$NL_CU_RAD_FEEDBACK"; then echo "cu_rad_feedback=${NL_CU_RAD_FEEDBACK}," >> $FILE;fi
if test ! -z "$NL_SHALLOWCU_FORCED_RA"; then echo "shallowcu_forced_ra=${NL_SHALLOWCU_FORCED_RA}," >> $FILE;fi
if test ! -z "$NL_NUMBINS"; then echo "numbins=${NL_NUMBINS}," >> $FILE;fi
if test ! -z "$NL_THBINSIZE"; then echo "thbinsize=${NL_THBINSIZE}," >> $FILE;fi
if test ! -z "$NL_RBINSIZE"; then echo "rbinsize=${NL_RBINSIZE}," >> $FILE;fi
if test ! -z "$NL_MINDEEPFREQ"; then echo "mindeepfreq=${NL_MINDEEPFREQ}," >> $FILE;fi
if test ! -z "$NL_MINSHALLOWFREQ"; then echo "minshallowfreq=${NL_MINSHALLOWFREQ}," >> $FILE;fi
if test ! -z "$NL_SHCU_AEROSOLS_OPT"; then echo "shcu_aerosols_opt=${NL_SHCU_AEROSOLS_OPT}," >> $FILE;fi
if test ! -z "$NL_PXLSM_SMOIS_INIT"; then echo "pxlsm_smois_init=${NL_PXLSM_SMOIS_INIT}," >> $FILE;fi
if test ! -z "$NL_OMLCALL"; then echo "omlcall=${NL_OMLCALL}," >> $FILE;fi
if test ! -z "$NL_SF_OCEAN_PHYSICS"; then echo "sf_ocean_physics=${NL_SF_OCEAN_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_TRAJ_OPT"; then echo "traj_opt=${NL_TRAJ_OPT}," >> $FILE;fi
if test ! -z "$NL_TRACERCALL"; then echo "tracercall=${NL_TRACERCALL}," >> $FILE;fi
if test ! -z "$NL_OMDT"; then echo "omdt=${NL_OMDT}," >> $FILE;fi
if test ! -z "$NL_OML_HML0"; then echo "oml_hml0=${NL_OML_HML0}," >> $FILE;fi
if test ! -z "$NL_OML_GAMMA"; then echo "oml_gamma=${NL_OML_GAMMA}," >> $FILE;fi
if test ! -z "$NL_OML_RELAXATION_TIME"; then echo "oml_relaxation_time=${NL_OML_RELAXATION_TIME}," >> $FILE;fi
if test ! -z "$NL_ISFTCFLX"; then echo "isftcflx=${NL_ISFTCFLX}," >> $FILE;fi
if test ! -z "$NL_IZ0TLND"; then echo "iz0tlnd=${NL_IZ0TLND}," >> $FILE;fi
if test ! -z "$NL_SHADLEN"; then echo "shadlen=${NL_SHADLEN}," >> $FILE;fi
if test ! -z "$NL_SLOPE_RAD"; then echo "slope_rad=${NL_SLOPE_RAD}," >> $FILE;fi
if test ! -z "$NL_TOPO_SHADING"; then echo "topo_shading=${NL_TOPO_SHADING}," >> $FILE;fi
if test ! -z "$NL_TOPO_WIND"; then echo "topo_wind=${NL_TOPO_WIND}," >> $FILE;fi
if test ! -z "$NL_NO_MP_HEATING"; then echo "no_mp_heating=${NL_NO_MP_HEATING}," >> $FILE;fi
if test ! -z "$NL_FRACTIONAL_SEAICE"; then echo "fractional_seaice=${NL_FRACTIONAL_SEAICE}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_OPT"; then echo "seaice_snowdepth_opt=${NL_SEAICE_SNOWDEPTH_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_MAX"; then echo "seaice_snowdepth_max=${NL_SEAICE_SNOWDEPTH_MAX}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_MIN"; then echo "seaice_snowdepth_min=${NL_SEAICE_SNOWDEPTH_MIN}," >> $FILE;fi
if test ! -z "$NL_SEAICE_ALBEDO_OPT"; then echo "seaice_albedo_opt=${NL_SEAICE_ALBEDO_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_ALBEDO_DEFAULT"; then echo "seaice_albedo_default=${NL_SEAICE_ALBEDO_DEFAULT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THICKNESS_OPT"; then echo "seaice_thickness_opt=${NL_SEAICE_THICKNESS_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THICKNESS_DEFAULT"; then echo "seaice_thickness_default=${NL_SEAICE_THICKNESS_DEFAULT}," >> $FILE;fi
if test ! -z "$NL_TICE2TSK_IF2COLD"; then echo "tice2tsk_if2cold=${NL_TICE2TSK_IF2COLD}," >> $FILE;fi
if test ! -z "$NL_BUCKET_MM"; then echo "bucket_mm=${NL_BUCKET_MM}," >> $FILE;fi
if test ! -z "$NL_BUCKET_J"; then echo "bucket_j=${NL_BUCKET_J}," >> $FILE;fi
if test ! -z "$NL_MP_TEND_LIM"; then echo "mp_tend_lim=${NL_MP_TEND_LIM}," >> $FILE;fi
if test ! -z "$NL_PREC_ACC_DT"; then echo "prec_acc_dt=${NL_PREC_ACC_DT}," >> $FILE;fi
if test ! -z "$NL_GRAV_SETTLING"; then echo "grav_settling=${NL_GRAV_SETTLING}," >> $FILE;fi
if test ! -z "$NL_SAS_PGCON"; then echo "sas_pgcon=${NL_SAS_PGCON}," >> $FILE;fi
if test ! -z "$NL_SCALAR_PBLMIX"; then echo "scalar_pblmix=${NL_SCALAR_PBLMIX}," >> $FILE;fi
if test ! -z "$NL_TRACER_PBLMIX"; then echo "tracer_pblmix=${NL_TRACER_PBLMIX}," >> $FILE;fi
if test ! -z "$NL_USE_AERO_ICBC"; then echo "use_aero_icbc=${NL_USE_AERO_ICBC}," >> $FILE;fi
if test ! -z "$NL_USE_RAP_AERO_ICBC"; then echo "use_rap_aero_icbc=${NL_USE_RAP_AERO_ICBC}," >> $FILE;fi
if test ! -z "$NL_USE_MP_RE"; then echo "use_mp_re=${NL_USE_MP_RE}," >> $FILE;fi
if test ! -z "$NL_CCN_CONC"; then echo "ccn_conc=${NL_CCN_CONC}," >> $FILE;fi
if test ! -z "$NL_HAIL_OPT"; then echo "hail_opt=${NL_HAIL_OPT}," >> $FILE;fi
if test ! -z "$NL_WTDDT"; then echo "wtddt=${NL_WTDDT}," >> $FILE;fi
if test ! -z "$NL_WINDFARM_OPT"; then echo "windfarm_opt=${NL_WINDFARM_OPT}," >> $FILE;fi
if test ! -z "$NL_WINDFARM_IJ"; then echo "windfarm_ij=${NL_WINDFARM_IJ}," >> $FILE;fi
if test ! -z "$NL_LIGHTNING_OPTION"; then echo "lightning_option=${NL_LIGHTNING_OPTION}," >> $FILE;fi
if test ! -z "$NL_LIGHTNING_DT"; then echo "lightning_dt=${NL_LIGHTNING_DT}," >> $FILE;fi
if test ! -z "$NL_LIGHTNING_START_SECONDS"; then echo "lightning_start_seconds=${NL_LIGHTNING_START_SECONDS}," >> $FILE;fi
if test ! -z "$NL_FLASHRATE_FACTOR"; then echo "flashrate_factor=${NL_FLASHRATE_FACTOR}," >> $FILE;fi
if test ! -z "$NL_ICCG_METHOD"; then echo "iccg_method=${NL_ICCG_METHOD}," >> $FILE;fi
if test ! -z "$NL_ICCG_PRESCRIBED_NUM"; then echo "iccg_prescribed_num=${NL_ICCG_PRESCRIBED_NUM}," >> $FILE;fi
if test ! -z "$NL_ICCG_PRESCRIBED_DEN"; then echo "iccg_prescribed_den=${NL_ICCG_PRESCRIBED_DEN}," >> $FILE;fi
if test ! -z "$NL_CELLCOUNT_METHOD"; then echo "cellcount_method=${NL_CELLCOUNT_METHOD}," >> $FILE;fi
if test ! -z "$NL_CLDTOP_ADJUSTMENT"; then echo "cldtop_adjustment=${NL_CLDTOP_ADJUSTMENT}," >> $FILE;fi
if test ! -z "$NL_SF_LAKE_PHYSICS"; then echo "sf_lake_physics=${NL_SF_LAKE_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_MP_PHYSICS_AD"; then echo "mp_physics_ad=${NL_MP_PHYSICS_AD}," >> $FILE;fi
if test ! -z "$NL_CHEM_OPT"; then echo "chem_opt=${NL_CHEM_OPT}," >> $FILE;fi
echo / >> $FILE
echo \&noah_mp >> $FILE
if test ! -z "$NL_DVEG"; then echo "dveg=${NL_DVEG}," >> $FILE;fi
if test ! -z "$NL_OPT_CRS"; then echo "opt_crs=${NL_OPT_CRS}," >> $FILE;fi
if test ! -z "$NL_OPT_BTR"; then echo "opt_btr=${NL_OPT_BTR}," >> $FILE;fi
if test ! -z "$NL_OPT_RUN"; then echo "opt_run=${NL_OPT_RUN}," >> $FILE;fi
if test ! -z "$NL_OPT_SFC"; then echo "opt_sfc=${NL_OPT_SFC}," >> $FILE;fi
if test ! -z "$NL_OPT_FRZ"; then echo "opt_frz=${NL_OPT_FRZ}," >> $FILE;fi
if test ! -z "$NL_OPT_INF"; then echo "opt_inf=${NL_OPT_INF}," >> $FILE;fi
if test ! -z "$NL_OPT_RAD"; then echo "opt_rad=${NL_OPT_RAD}," >> $FILE;fi
if test ! -z "$NL_OPT_ALB"; then echo "opt_alb=${NL_OPT_ALB}," >> $FILE;fi
if test ! -z "$NL_OPT_SNF"; then echo "opt_snf=${NL_OPT_SNF}," >> $FILE;fi
if test ! -z "$NL_OPT_TBOT"; then echo "opt_tbot=${NL_OPT_TBOT}," >> $FILE;fi
if test ! -z "$NL_OPT_STC"; then echo "opt_stc=${NL_OPT_STC}," >> $FILE;fi
if test ! -z "$NL_OPT_GLA"; then echo "opt_gla=${NL_OPT_GLA}," >> $FILE;fi
if test ! -z "$NL_OPT_RSF"; then echo "opt_rsf=${NL_OPT_RSF}," >> $FILE;fi
echo / >> $FILE
echo \&fdda >> $FILE
if test ! -z "$NL_FGDT"; then echo "fgdt=${NL_FGDT}," >> $FILE;fi
if test ! -z "$NL_FGDTZERO"; then echo "fgdtzero=${NL_FGDTZERO}," >> $FILE;fi
if test ! -z "$NL_GRID_FDDA"; then echo "grid_fdda=${NL_GRID_FDDA}," >> $FILE;fi
if test ! -z "$NL_GRID_SFDDA"; then echo "grid_sfdda=${NL_GRID_SFDDA}," >> $FILE;fi
if test ! -z "$NL_IF_NO_PBL_NUDGING_UV"; then echo "if_no_pbl_nudging_uv=${NL_IF_NO_PBL_NUDGING_UV}," >> $FILE;fi
if test ! -z "$NL_IF_NO_PBL_NUDGING_T"; then echo "if_no_pbl_nudging_t=${NL_IF_NO_PBL_NUDGING_T}," >> $FILE;fi
if test ! -z "$NL_IF_NO_PBL_NUDGING_PH"; then echo "if_no_pbl_nudging_ph=${NL_IF_NO_PBL_NUDGING_PH}," >> $FILE;fi
if test ! -z "$NL_IF_NO_PBL_NUDGING_Q"; then echo "if_no_pbl_nudging_q=${NL_IF_NO_PBL_NUDGING_Q}," >> $FILE;fi
if test ! -z "$NL_IF_ZFAC_UV"; then echo "if_zfac_uv=${NL_IF_ZFAC_UV}," >> $FILE;fi
if test ! -z "$NL_K_ZFAC_UV"; then echo "k_zfac_uv=${NL_K_ZFAC_UV}," >> $FILE;fi
if test ! -z "$NL_IF_ZFAC_T"; then echo "if_zfac_t=${NL_IF_ZFAC_T}," >> $FILE;fi
if test ! -z "$NL_K_ZFAC_T"; then echo "k_zfac_t=${NL_K_ZFAC_T}," >> $FILE;fi
if test ! -z "$NL_IF_ZFAC_PH"; then echo "if_zfac_ph=${NL_IF_ZFAC_PH}," >> $FILE;fi
if test ! -z "$NL_K_ZFAC_PH"; then echo "k_zfac_ph=${NL_K_ZFAC_PH}," >> $FILE;fi
if test ! -z "$NL_IF_ZFAC_Q"; then echo "if_zfac_q=${NL_IF_ZFAC_Q}," >> $FILE;fi
if test ! -z "$NL_K_ZFAC_Q"; then echo "k_zfac_q=${NL_K_ZFAC_Q}," >> $FILE;fi
if test ! -z "$NL_DK_ZFAC_UV"; then echo "dk_zfac_uv=${NL_DK_ZFAC_UV}," >> $FILE;fi
if test ! -z "$NL_DK_ZFAC_T"; then echo "dk_zfac_t=${NL_DK_ZFAC_T}," >> $FILE;fi
if test ! -z "$NL_DK_ZFAC_PH"; then echo "dk_zfac_ph=${NL_DK_ZFAC_PH}," >> $FILE;fi
if test ! -z "$NL_GUV"; then echo "guv=${NL_GUV}," >> $FILE;fi
if test ! -z "$NL_GUV_SFC"; then echo "guv_sfc=${NL_GUV_SFC}," >> $FILE;fi
if test ! -z "$NL_GT"; then echo "gt=${NL_GT}," >> $FILE;fi
if test ! -z "$NL_GT_SFC"; then echo "gt_sfc=${NL_GT_SFC}," >> $FILE;fi
if test ! -z "$NL_GQ"; then echo "gq=${NL_GQ}," >> $FILE;fi
if test ! -z "$NL_GQ_SFC"; then echo "gq_sfc=${NL_GQ_SFC}," >> $FILE;fi
if test ! -z "$NL_GPH"; then echo "gph=${NL_GPH}," >> $FILE;fi
if test ! -z "$NL_DTRAMP_MIN"; then echo "dtramp_min=${NL_DTRAMP_MIN}," >> $FILE;fi
if test ! -z "$NL_IF_RAMPING"; then echo "if_ramping=${NL_IF_RAMPING}," >> $FILE;fi
if test ! -z "$NL_RINBLW"; then echo "rinblw=${NL_RINBLW}," >> $FILE;fi
if test ! -z "$NL_XWAVENUM"; then echo "xwavenum=${NL_XWAVENUM}," >> $FILE;fi
if test ! -z "$NL_YWAVENUM"; then echo "ywavenum=${NL_YWAVENUM}," >> $FILE;fi
if test ! -z "$NL_PXLSM_SOIL_NUDGE"; then echo "pxlsm_soil_nudge=${NL_PXLSM_SOIL_NUDGE}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGE_OPT"; then echo "obs_nudge_opt=${NL_OBS_NUDGE_OPT}," >> $FILE;fi
if test ! -z "$NL_MAX_OBS"; then echo "max_obs=${NL_MAX_OBS}," >> $FILE;fi
if test ! -z "$NL_FDDA_START"; then echo "fdda_start=${NL_FDDA_START}," >> $FILE;fi
if test ! -z "$NL_FDDA_END"; then echo "fdda_end=${NL_FDDA_END}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGE_WIND"; then echo "obs_nudge_wind=${NL_OBS_NUDGE_WIND}," >> $FILE;fi
if test ! -z "$NL_OBS_COEF_WIND"; then echo "obs_coef_wind=${NL_OBS_COEF_WIND}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGE_TEMP"; then echo "obs_nudge_temp=${NL_OBS_NUDGE_TEMP}," >> $FILE;fi
if test ! -z "$NL_OBS_COEF_TEMP"; then echo "obs_coef_temp=${NL_OBS_COEF_TEMP}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGE_MOIS"; then echo "obs_nudge_mois=${NL_OBS_NUDGE_MOIS}," >> $FILE;fi
if test ! -z "$NL_OBS_COEF_MOIS"; then echo "obs_coef_mois=${NL_OBS_COEF_MOIS}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGE_PSTR"; then echo "obs_nudge_pstr=${NL_OBS_NUDGE_PSTR}," >> $FILE;fi
if test ! -z "$NL_OBS_COEF_PSTR"; then echo "obs_coef_pstr=${NL_OBS_COEF_PSTR}," >> $FILE;fi
if test ! -z "$NL_OBS_NO_PBL_NUDGE_UV"; then echo "obs_no_pbl_nudge_uv=${NL_OBS_NO_PBL_NUDGE_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NO_PBL_NUDGE_T"; then echo "obs_no_pbl_nudge_t=${NL_OBS_NO_PBL_NUDGE_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NO_PBL_NUDGE_Q"; then echo "obs_no_pbl_nudge_q=${NL_OBS_NO_PBL_NUDGE_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_SFC_SCHEME_HORIZ"; then echo "obs_sfc_scheme_horiz=${NL_OBS_SFC_SCHEME_HORIZ}," >> $FILE;fi
if test ! -z "$NL_OBS_SFC_SCHEME_VERT"; then echo "obs_sfc_scheme_vert=${NL_OBS_SFC_SCHEME_VERT}," >> $FILE;fi
if test ! -z "$NL_OBS_MAX_SNDNG_GAP"; then echo "obs_max_sndng_gap=${NL_OBS_MAX_SNDNG_GAP}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR1_UV"; then echo "obs_nudgezfullr1_uv=${NL_OBS_NUDGEZFULLR1_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR1_UV"; then echo "obs_nudgezrampr1_uv=${NL_OBS_NUDGEZRAMPR1_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR2_UV"; then echo "obs_nudgezfullr2_uv=${NL_OBS_NUDGEZFULLR2_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR2_UV"; then echo "obs_nudgezrampr2_uv=${NL_OBS_NUDGEZRAMPR2_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR4_UV"; then echo "obs_nudgezfullr4_uv=${NL_OBS_NUDGEZFULLR4_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR4_UV"; then echo "obs_nudgezrampr4_uv=${NL_OBS_NUDGEZRAMPR4_UV}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR1_T"; then echo "obs_nudgezfullr1_t=${NL_OBS_NUDGEZFULLR1_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR1_T"; then echo "obs_nudgezrampr1_t=${NL_OBS_NUDGEZRAMPR1_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR2_T"; then echo "obs_nudgezfullr2_t=${NL_OBS_NUDGEZFULLR2_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR2_T"; then echo "obs_nudgezrampr2_t=${NL_OBS_NUDGEZRAMPR2_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR4_T"; then echo "obs_nudgezfullr4_t=${NL_OBS_NUDGEZFULLR4_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR4_T"; then echo "obs_nudgezrampr4_t=${NL_OBS_NUDGEZRAMPR4_T}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR1_Q"; then echo "obs_nudgezfullr1_q=${NL_OBS_NUDGEZFULLR1_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR1_Q"; then echo "obs_nudgezrampr1_q=${NL_OBS_NUDGEZRAMPR1_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR2_Q"; then echo "obs_nudgezfullr2_q=${NL_OBS_NUDGEZFULLR2_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR2_Q"; then echo "obs_nudgezrampr2_q=${NL_OBS_NUDGEZRAMPR2_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLR4_Q"; then echo "obs_nudgezfullr4_q=${NL_OBS_NUDGEZFULLR4_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPR4_Q"; then echo "obs_nudgezrampr4_q=${NL_OBS_NUDGEZRAMPR4_Q}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZFULLMIN"; then echo "obs_nudgezfullmin=${NL_OBS_NUDGEZFULLMIN}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZRAMPMIN"; then echo "obs_nudgezrampmin=${NL_OBS_NUDGEZRAMPMIN}," >> $FILE;fi
if test ! -z "$NL_OBS_NUDGEZMAX"; then echo "obs_nudgezmax=${NL_OBS_NUDGEZMAX}," >> $FILE;fi
if test ! -z "$NL_OBS_SFCFACT"; then echo "obs_sfcfact=${NL_OBS_SFCFACT}," >> $FILE;fi
if test ! -z "$NL_OBS_SFCFACR"; then echo "obs_sfcfacr=${NL_OBS_SFCFACR}," >> $FILE;fi
if test ! -z "$NL_OBS_DPSMX"; then echo "obs_dpsmx=${NL_OBS_DPSMX}," >> $FILE;fi
if test ! -z "$NL_OBS_RINXY"; then echo "obs_rinxy=${NL_OBS_RINXY}," >> $FILE;fi
if test ! -z "$NL_OBS_RINSIG"; then echo "obs_rinsig=${NL_OBS_RINSIG}," >> $FILE;fi
if test ! -z "$NL_OBS_TWINDO"; then echo "obs_twindo=${NL_OBS_TWINDO}," >> $FILE;fi
if test ! -z "$NL_OBS_NPFI"; then echo "obs_npfi=${NL_OBS_NPFI}," >> $FILE;fi
if test ! -z "$NL_OBS_IONF"; then echo "obs_ionf=${NL_OBS_IONF}," >> $FILE;fi
if test ! -z "$NL_OBS_IDYNIN"; then echo "obs_idynin=${NL_OBS_IDYNIN}," >> $FILE;fi
if test ! -z "$NL_OBS_DTRAMP"; then echo "obs_dtramp=${NL_OBS_DTRAMP}," >> $FILE;fi
if test ! -z "$NL_OBS_PRT_MAX"; then echo "obs_prt_max=${NL_OBS_PRT_MAX}," >> $FILE;fi
if test ! -z "$NL_OBS_PRT_FREQ"; then echo "obs_prt_freq=${NL_OBS_PRT_FREQ}," >> $FILE;fi
if test ! -z "$NL_OBS_IPF_IN4DOB"; then echo "obs_ipf_in4dob=${NL_OBS_IPF_IN4DOB}," >> $FILE;fi
if test ! -z "$NL_OBS_IPF_ERROB"; then echo "obs_ipf_errob=${NL_OBS_IPF_ERROB}," >> $FILE;fi
if test ! -z "$NL_OBS_IPF_NUDOB"; then echo "obs_ipf_nudob=${NL_OBS_IPF_NUDOB}," >> $FILE;fi
if test ! -z "$NL_OBS_IPF_INIT"; then echo "obs_ipf_init=${NL_OBS_IPF_INIT}," >> $FILE;fi
if test ! -z "$NL_OBS_SCL_NEG_QV_INNOV"; then echo "obs_scl_neg_qv_innov=${NL_OBS_SCL_NEG_QV_INNOV}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INNAME"; then echo "sgfdda_inname=\"${NL_SGFDDA_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_GFDDA_INNAME"; then echo "gfdda_inname=\"${NL_GFDDA_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL_D"; then echo "sgfdda_interval_d=${NL_SGFDDA_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL_H"; then echo "sgfdda_interval_h=${NL_SGFDDA_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL_M"; then echo "sgfdda_interval_m=${NL_SGFDDA_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL_S"; then echo "sgfdda_interval_s=${NL_SGFDDA_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL_Y"; then echo "sgfdda_interval_y=${NL_SGFDDA_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_INTERVAL"; then echo "sgfdda_interval=${NL_SGFDDA_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL_D"; then echo "gfdda_interval_d=${NL_GFDDA_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL_H"; then echo "gfdda_interval_h=${NL_GFDDA_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL_M"; then echo "gfdda_interval_m=${NL_GFDDA_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL_S"; then echo "gfdda_interval_s=${NL_GFDDA_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL_Y"; then echo "gfdda_interval_y=${NL_GFDDA_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_GFDDA_INTERVAL"; then echo "gfdda_interval=${NL_GFDDA_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_BEGIN_Y"; then echo "sgfdda_begin_y=${NL_SGFDDA_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_BEGIN_D"; then echo "sgfdda_begin_d=${NL_SGFDDA_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_BEGIN_H"; then echo "sgfdda_begin_h=${NL_SGFDDA_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_BEGIN_M"; then echo "sgfdda_begin_m=${NL_SGFDDA_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_BEGIN_S"; then echo "sgfdda_begin_s=${NL_SGFDDA_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_GFDDA_BEGIN_Y"; then echo "gfdda_begin_y=${NL_GFDDA_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_GFDDA_BEGIN_D"; then echo "gfdda_begin_d=${NL_GFDDA_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_GFDDA_BEGIN_H"; then echo "gfdda_begin_h=${NL_GFDDA_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_GFDDA_BEGIN_M"; then echo "gfdda_begin_m=${NL_GFDDA_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_GFDDA_BEGIN_S"; then echo "gfdda_begin_s=${NL_GFDDA_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_END_Y"; then echo "sgfdda_end_y=${NL_SGFDDA_END_Y}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_END_D"; then echo "sgfdda_end_d=${NL_SGFDDA_END_D}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_END_H"; then echo "sgfdda_end_h=${NL_SGFDDA_END_H}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_END_M"; then echo "sgfdda_end_m=${NL_SGFDDA_END_M}," >> $FILE;fi
if test ! -z "$NL_SGFDDA_END_S"; then echo "sgfdda_end_s=${NL_SGFDDA_END_S}," >> $FILE;fi
if test ! -z "$NL_GFDDA_END_Y"; then echo "gfdda_end_y=${NL_GFDDA_END_Y}," >> $FILE;fi
if test ! -z "$NL_GFDDA_END_D"; then echo "gfdda_end_d=${NL_GFDDA_END_D}," >> $FILE;fi
if test ! -z "$NL_GFDDA_END_H"; then echo "gfdda_end_h=${NL_GFDDA_END_H}," >> $FILE;fi
if test ! -z "$NL_GFDDA_END_M"; then echo "gfdda_end_m=${NL_GFDDA_END_M}," >> $FILE;fi
if test ! -z "$NL_GFDDA_END_S"; then echo "gfdda_end_s=${NL_GFDDA_END_S}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_SGFDDA"; then echo "io_form_sgfdda=${NL_IO_FORM_SGFDDA}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_GFDDA"; then echo "io_form_gfdda=${NL_IO_FORM_GFDDA}," >> $FILE;fi
echo / >> $FILE
echo \&scm >> $FILE
if test ! -z "$NL_SCM_FORCE"; then echo "scm_force=${NL_SCM_FORCE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_DX"; then echo "scm_force_dx=${NL_SCM_FORCE_DX}," >> $FILE;fi
if test ! -z "$NL_NUM_FORCE_LAYERS"; then echo "num_force_layers=${NL_NUM_FORCE_LAYERS}," >> $FILE;fi
if test ! -z "$NL_SCM_LU_INDEX"; then echo "scm_lu_index=${NL_SCM_LU_INDEX}," >> $FILE;fi
if test ! -z "$NL_SCM_ISLTYP"; then echo "scm_isltyp=${NL_SCM_ISLTYP}," >> $FILE;fi
if test ! -z "$NL_SCM_VEGFRA"; then echo "scm_vegfra=${NL_SCM_VEGFRA}," >> $FILE;fi
if test ! -z "$NL_SCM_CANWAT"; then echo "scm_canwat=${NL_SCM_CANWAT}," >> $FILE;fi
if test ! -z "$NL_SCM_LAT"; then echo "scm_lat=${NL_SCM_LAT}," >> $FILE;fi
if test ! -z "$NL_SCM_LON"; then echo "scm_lon=${NL_SCM_LON}," >> $FILE;fi
if test ! -z "$NL_SCM_TH_T_TEND"; then echo "scm_th_t_tend=${NL_SCM_TH_T_TEND}," >> $FILE;fi
if test ! -z "$NL_SCM_QV_T_TEND"; then echo "scm_qv_t_tend=${NL_SCM_QV_T_TEND}," >> $FILE;fi
if test ! -z "$NL_SCM_TH_ADV"; then echo "scm_th_adv=${NL_SCM_TH_ADV}," >> $FILE;fi
if test ! -z "$NL_SCM_WIND_ADV"; then echo "scm_wind_adv=${NL_SCM_WIND_ADV}," >> $FILE;fi
if test ! -z "$NL_SCM_QV_ADV"; then echo "scm_qv_adv=${NL_SCM_QV_ADV}," >> $FILE;fi
if test ! -z "$NL_SCM_QL_ADV"; then echo "scm_ql_adv=${NL_SCM_QL_ADV}," >> $FILE;fi
if test ! -z "$NL_SCM_VERT_ADV"; then echo "scm_vert_adv=${NL_SCM_VERT_ADV}," >> $FILE;fi
if test ! -z "$NL_NUM_FORCE_SOIL_LAYERS"; then echo "num_force_soil_layers=${NL_NUM_FORCE_SOIL_LAYERS}," >> $FILE;fi
if test ! -z "$NL_SCM_SOILT_FORCE"; then echo "scm_soilt_force=${NL_SCM_SOILT_FORCE}," >> $FILE;fi
if test ! -z "$NL_SCM_SOILQ_FORCE"; then echo "scm_soilq_force=${NL_SCM_SOILQ_FORCE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_TH_LARGESCALE"; then echo "scm_force_th_largescale=${NL_SCM_FORCE_TH_LARGESCALE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_QV_LARGESCALE"; then echo "scm_force_qv_largescale=${NL_SCM_FORCE_QV_LARGESCALE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_QL_LARGESCALE"; then echo "scm_force_ql_largescale=${NL_SCM_FORCE_QL_LARGESCALE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_WIND_LARGESCALE"; then echo "scm_force_wind_largescale=${NL_SCM_FORCE_WIND_LARGESCALE}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_SKINTEMP"; then echo "scm_force_skintemp=${NL_SCM_FORCE_SKINTEMP}," >> $FILE;fi
if test ! -z "$NL_SCM_FORCE_FLUX"; then echo "scm_force_flux=${NL_SCM_FORCE_FLUX}," >> $FILE;fi
echo / >> $FILE
echo \&dynamics >> $FILE
if test ! -z "$NL_DYN_OPT"; then echo "dyn_opt=${NL_DYN_OPT}," >> $FILE;fi
if test ! -z "$NL_RK_ORD"; then echo "rk_ord=${NL_RK_ORD}," >> $FILE;fi
if test ! -z "$NL_W_DAMPING"; then echo "w_damping=${NL_W_DAMPING}," >> $FILE;fi
if test ! -z "$NL_DIFF_OPT"; then echo "diff_opt=${NL_DIFF_OPT}," >> $FILE;fi
if test ! -z "$NL_DIFF_OPT_DFI"; then echo "diff_opt_dfi=${NL_DIFF_OPT_DFI}," >> $FILE;fi
if test ! -z "$NL_KM_OPT"; then echo "km_opt=${NL_KM_OPT}," >> $FILE;fi
if test ! -z "$NL_KM_OPT_DFI"; then echo "km_opt_dfi=${NL_KM_OPT_DFI}," >> $FILE;fi
if test ! -z "$NL_DAMP_OPT"; then echo "damp_opt=${NL_DAMP_OPT}," >> $FILE;fi
if test ! -z "$NL_RAD_NUDGE"; then echo "rad_nudge=${NL_RAD_NUDGE}," >> $FILE;fi
if test ! -z "$NL_GWD_OPT"; then echo "gwd_opt=${NL_GWD_OPT}," >> $FILE;fi
if test ! -z "$NL_ZDAMP"; then echo "zdamp=${NL_ZDAMP}," >> $FILE;fi
if test ! -z "$NL_DAMPCOEF"; then echo "dampcoef=${NL_DAMPCOEF}," >> $FILE;fi
if test ! -z "$NL_KHDIF"; then echo "khdif=${NL_KHDIF}," >> $FILE;fi
if test ! -z "$NL_KVDIF"; then echo "kvdif=${NL_KVDIF}," >> $FILE;fi
if test ! -z "$NL_DIFF_6TH_FACTOR"; then echo "diff_6th_factor=${NL_DIFF_6TH_FACTOR}," >> $FILE;fi
if test ! -z "$NL_DIFF_6TH_OPT"; then echo "diff_6th_opt=${NL_DIFF_6TH_OPT}," >> $FILE;fi
if test ! -z "$NL_USE_THETA_M"; then echo "use_theta_m=${NL_USE_THETA_M}," >> $FILE;fi
if test ! -z "$NL_USE_Q_DIABATIC"; then echo "use_q_diabatic=${NL_USE_Q_DIABATIC}," >> $FILE;fi
if test ! -z "$NL_C_S"; then echo "c_s=${NL_C_S}," >> $FILE;fi
if test ! -z "$NL_C_K"; then echo "c_k=${NL_C_K}," >> $FILE;fi
if test ! -z "$NL_SMDIV"; then echo "smdiv=${NL_SMDIV}," >> $FILE;fi
if test ! -z "$NL_EMDIV"; then echo "emdiv=${NL_EMDIV}," >> $FILE;fi
if test ! -z "$NL_EPSSM"; then echo "epssm=${NL_EPSSM}," >> $FILE;fi
if test ! -z "$NL_NON_HYDROSTATIC"; then echo "non_hydrostatic=${NL_NON_HYDROSTATIC}," >> $FILE;fi
if test ! -z "$NL_USE_INPUT_W"; then echo "use_input_w=${NL_USE_INPUT_W}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_SOUND"; then echo "time_step_sound=${NL_TIME_STEP_SOUND}," >> $FILE;fi
if test ! -z "$NL_H_MOM_ADV_ORDER"; then echo "h_mom_adv_order=${NL_H_MOM_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_V_MOM_ADV_ORDER"; then echo "v_mom_adv_order=${NL_V_MOM_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_H_SCA_ADV_ORDER"; then echo "h_sca_adv_order=${NL_H_SCA_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_V_SCA_ADV_ORDER"; then echo "v_sca_adv_order=${NL_V_SCA_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_MOMENTUM_ADV_OPT"; then echo "momentum_adv_opt=${NL_MOMENTUM_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_MOIST_ADV_OPT"; then echo "moist_adv_opt=${NL_MOIST_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_MOIST_ADV_DFI_OPT"; then echo "moist_adv_dfi_opt=${NL_MOIST_ADV_DFI_OPT}," >> $FILE;fi
if test ! -z "$NL_CHEM_ADV_OPT"; then echo "chem_adv_opt=${NL_CHEM_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_TRACER_ADV_OPT"; then echo "tracer_adv_opt=${NL_TRACER_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_SCALAR_ADV_OPT"; then echo "scalar_adv_opt=${NL_SCALAR_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_TKE_ADV_OPT"; then echo "tke_adv_opt=${NL_TKE_ADV_OPT}," >> $FILE;fi
if test ! -z "$NL_TOP_RADIATION"; then echo "top_radiation=${NL_TOP_RADIATION}," >> $FILE;fi
if test ! -z "$NL_MIX_ISOTROPIC"; then echo "mix_isotropic=${NL_MIX_ISOTROPIC}," >> $FILE;fi
if test ! -z "$NL_MIX_UPPER_BOUND"; then echo "mix_upper_bound=${NL_MIX_UPPER_BOUND}," >> $FILE;fi
if test ! -z "$NL_TOP_LID"; then echo "top_lid=${NL_TOP_LID}," >> $FILE;fi
if test ! -z "$NL_TKE_UPPER_BOUND"; then echo "tke_upper_bound=${NL_TKE_UPPER_BOUND}," >> $FILE;fi
if test ! -z "$NL_TKE_DRAG_COEFFICIENT"; then echo "tke_drag_coefficient=${NL_TKE_DRAG_COEFFICIENT}," >> $FILE;fi
if test ! -z "$NL_TKE_HEAT_FLUX"; then echo "tke_heat_flux=${NL_TKE_HEAT_FLUX}," >> $FILE;fi
if test ! -z "$NL_PERT_CORIOLIS"; then echo "pert_coriolis=${NL_PERT_CORIOLIS}," >> $FILE;fi
if test ! -z "$NL_CORIOLIS2D"; then echo "coriolis2d=${NL_CORIOLIS2D}," >> $FILE;fi
if test ! -z "$NL_MIX_FULL_FIELDS"; then echo "mix_full_fields=${NL_MIX_FULL_FIELDS}," >> $FILE;fi
if test ! -z "$NL_BASE_PRES"; then echo "base_pres=${NL_BASE_PRES}," >> $FILE;fi
if test ! -z "$NL_BASE_TEMP"; then echo "base_temp=${NL_BASE_TEMP}," >> $FILE;fi
if test ! -z "$NL_BASE_LAPSE"; then echo "base_lapse=${NL_BASE_LAPSE}," >> $FILE;fi
if test ! -z "$NL_ISO_TEMP"; then echo "iso_temp=${NL_ISO_TEMP}," >> $FILE;fi
if test ! -z "$NL_BASE_PRES_STRAT"; then echo "base_pres_strat=${NL_BASE_PRES_STRAT}," >> $FILE;fi
if test ! -z "$NL_BASE_LAPSE_STRAT"; then echo "base_lapse_strat=${NL_BASE_LAPSE_STRAT}," >> $FILE;fi
if test ! -z "$NL_USE_BASEPARAM_FR_NML"; then echo "use_baseparam_fr_nml=${NL_USE_BASEPARAM_FR_NML}," >> $FILE;fi
if test ! -z "$NL_FFT_FILTER_LAT"; then echo "fft_filter_lat=${NL_FFT_FILTER_LAT}," >> $FILE;fi
if test ! -z "$NL_COUPLED_FILTERING"; then echo "coupled_filtering=${NL_COUPLED_FILTERING}," >> $FILE;fi
if test ! -z "$NL_POS_DEF"; then echo "pos_def=${NL_POS_DEF}," >> $FILE;fi
if test ! -z "$NL_SWAP_POLE_WITH_NEXT_J"; then echo "swap_pole_with_next_j=${NL_SWAP_POLE_WITH_NEXT_J}," >> $FILE;fi
if test ! -z "$NL_ACTUAL_DISTANCE_AVERAGE"; then echo "actual_distance_average=${NL_ACTUAL_DISTANCE_AVERAGE}," >> $FILE;fi
if test ! -z "$NL_ROTATED_POLE"; then echo "rotated_pole=${NL_ROTATED_POLE}," >> $FILE;fi
if test ! -z "$NL_DO_CORIOLIS"; then echo "do_coriolis=${NL_DO_CORIOLIS}," >> $FILE;fi
if test ! -z "$NL_DO_CURVATURE"; then echo "do_curvature=${NL_DO_CURVATURE}," >> $FILE;fi
if test ! -z "$NL_DO_GRADP"; then echo "do_gradp=${NL_DO_GRADP}," >> $FILE;fi
if test ! -z "$NL_TRACER_OPT"; then echo "tracer_opt=${NL_TRACER_OPT}," >> $FILE;fi
if test ! -z "$NL_TENDDIAG"; then echo "tenddiag=${NL_TENDDIAG}," >> $FILE;fi
echo / >> $FILE
echo \&bdy_control >> $FILE
if test ! -z "$NL_SPEC_BDY_WIDTH"; then echo "spec_bdy_width=${NL_SPEC_BDY_WIDTH}," >> $FILE;fi
if test ! -z "$NL_SPEC_ZONE"; then echo "spec_zone=${NL_SPEC_ZONE}," >> $FILE;fi
if test ! -z "$NL_RELAX_ZONE"; then echo "relax_zone=${NL_RELAX_ZONE}," >> $FILE;fi
if test ! -z "$NL_SPECIFIED"; then echo "specified=${NL_SPECIFIED}," >> $FILE;fi
if test ! -z "$NL_CONSTANT_BC"; then echo "constant_bc=${NL_CONSTANT_BC}," >> $FILE;fi
if test ! -z "$NL_PERIODIC_X"; then echo "periodic_x=${NL_PERIODIC_X}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_XS"; then echo "symmetric_xs=${NL_SYMMETRIC_XS}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_XE"; then echo "symmetric_xe=${NL_SYMMETRIC_XE}," >> $FILE;fi
if test ! -z "$NL_OPEN_XS"; then echo "open_xs=${NL_OPEN_XS}," >> $FILE;fi
if test ! -z "$NL_OPEN_XE"; then echo "open_xe=${NL_OPEN_XE}," >> $FILE;fi
if test ! -z "$NL_PERIODIC_Y"; then echo "periodic_y=${NL_PERIODIC_Y}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_YS"; then echo "symmetric_ys=${NL_SYMMETRIC_YS}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_YE"; then echo "symmetric_ye=${NL_SYMMETRIC_YE}," >> $FILE;fi
if test ! -z "$NL_OPEN_YS"; then echo "open_ys=${NL_OPEN_YS}," >> $FILE;fi
if test ! -z "$NL_OPEN_YE"; then echo "open_ye=${NL_OPEN_YE}," >> $FILE;fi
if test ! -z "$NL_POLAR"; then echo "polar=${NL_POLAR}," >> $FILE;fi
if test ! -z "$NL_NESTED"; then echo "nested=${NL_NESTED}," >> $FILE;fi
if test ! -z "$NL_SPEC_EXP"; then echo "spec_exp=${NL_SPEC_EXP}," >> $FILE;fi
if test ! -z "$NL_SPEC_BDY_FINAL_MU"; then echo "spec_bdy_final_mu=${NL_SPEC_BDY_FINAL_MU}," >> $FILE;fi
if test ! -z "$NL_REAL_DATA_INIT_TYPE"; then echo "real_data_init_type=${NL_REAL_DATA_INIT_TYPE}," >> $FILE;fi
if test ! -z "$NL_HAVE_BCS_MOIST"; then echo "have_bcs_moist=${NL_HAVE_BCS_MOIST}," >> $FILE;fi
if test ! -z "$NL_HAVE_BCS_SCALAR"; then echo "have_bcs_scalar=${NL_HAVE_BCS_SCALAR}," >> $FILE;fi
echo / >> $FILE
echo \&grib2 >> $FILE
if test ! -z "$NL_BACKGROUND_PROC_ID"; then echo "background_proc_id=${NL_BACKGROUND_PROC_ID}," >> $FILE;fi
if test ! -z "$NL_FORECAST_PROC_ID"; then echo "forecast_proc_id=${NL_FORECAST_PROC_ID}," >> $FILE;fi
if test ! -z "$NL_PRODUCTION_STATUS"; then echo "production_status=${NL_PRODUCTION_STATUS}," >> $FILE;fi
if test ! -z "$NL_COMPRESSION"; then echo "compression=${NL_COMPRESSION}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar1 >> $FILE
if test ! -z "$NL_UPDATE_SFCDIAGS"; then echo "update_sfcdiags=${NL_UPDATE_SFCDIAGS}," >> $FILE;fi
if test ! -z "$NL_USE_WRF_SFCINFO"; then echo "use_wrf_sfcinfo=${NL_USE_WRF_SFCINFO}," >> $FILE;fi
if test ! -z "$NL_USE_BACKGROUND_ERRORS"; then echo "use_background_errors=${NL_USE_BACKGROUND_ERRORS}," >> $FILE;fi
if test ! -z "$NL_WRITE_INCREMENTS"; then echo "write_increments=${NL_WRITE_INCREMENTS}," >> $FILE;fi
if test ! -z "$NL_VAR4D"; then echo "var4d=${NL_VAR4D}," >> $FILE;fi
if test ! -z "$NL_VAR4D_BIN"; then echo "var4d_bin=${NL_VAR4D_BIN}," >> $FILE;fi
if test ! -z "$NL_VAR4D_BIN_RAIN"; then echo "var4d_bin_rain=${NL_VAR4D_BIN_RAIN}," >> $FILE;fi
if test ! -z "$NL_VAR4D_LBC"; then echo "var4d_lbc=${NL_VAR4D_LBC}," >> $FILE;fi
if test ! -z "$NL_MULTI_INC"; then echo "multi_inc=${NL_MULTI_INC}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_RADAR"; then echo "print_detail_radar=${NL_PRINT_DETAIL_RADAR}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_RAIN"; then echo "print_detail_rain=${NL_PRINT_DETAIL_RAIN}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_RAD"; then echo "print_detail_rad=${NL_PRINT_DETAIL_RAD}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_XA"; then echo "print_detail_xa=${NL_PRINT_DETAIL_XA}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_XB"; then echo "print_detail_xb=${NL_PRINT_DETAIL_XB}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_OBS"; then echo "print_detail_obs=${NL_PRINT_DETAIL_OBS}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_F_OBS"; then echo "print_detail_f_obs=${NL_PRINT_DETAIL_F_OBS}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_MAP"; then echo "print_detail_map=${NL_PRINT_DETAIL_MAP}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_GRAD"; then echo "print_detail_grad=${NL_PRINT_DETAIL_GRAD}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_REGRESSION"; then echo "print_detail_regression=${NL_PRINT_DETAIL_REGRESSION}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_SPECTRAL"; then echo "print_detail_spectral=${NL_PRINT_DETAIL_SPECTRAL}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_TESTING"; then echo "print_detail_testing=${NL_PRINT_DETAIL_TESTING}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_PARALLEL"; then echo "print_detail_parallel=${NL_PRINT_DETAIL_PARALLEL}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_BE"; then echo "print_detail_be=${NL_PRINT_DETAIL_BE}," >> $FILE;fi
if test ! -z "$NL_PRINT_DETAIL_OUTERLOOP"; then echo "print_detail_outerloop=${NL_PRINT_DETAIL_OUTERLOOP}," >> $FILE;fi
if test ! -z "$NL_CHECK_MAX_IV_PRINT"; then echo "check_max_iv_print=${NL_CHECK_MAX_IV_PRINT}," >> $FILE;fi
if test ! -z "$NL_CHECK_BUDDY_PRINT"; then echo "check_buddy_print=${NL_CHECK_BUDDY_PRINT}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar2 >> $FILE
if test ! -z "$NL_ANALYSIS_ACCU"; then echo "analysis_accu=${NL_ANALYSIS_ACCU}," >> $FILE;fi
if test ! -z "$NL_CALC_W_INCREMENT"; then echo "calc_w_increment=${NL_CALC_W_INCREMENT}," >> $FILE;fi
if test ! -z "$NL_DT_CLOUD_MODEL"; then echo "dt_cloud_model=${NL_DT_CLOUD_MODEL}," >> $FILE;fi
if test ! -z "$NL_WRITE_MOD_FILTERED_OBS"; then echo "write_mod_filtered_obs=${NL_WRITE_MOD_FILTERED_OBS}," >> $FILE;fi
if test ! -z "$NL_WIND_SD"; then echo "wind_sd=${NL_WIND_SD}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_BUOY"; then echo "wind_sd_buoy=${NL_WIND_SD_BUOY}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_SYNOP"; then echo "wind_sd_synop=${NL_WIND_SD_SYNOP}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_SHIPS"; then echo "wind_sd_ships=${NL_WIND_SD_SHIPS}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_METAR"; then echo "wind_sd_metar=${NL_WIND_SD_METAR}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_SOUND"; then echo "wind_sd_sound=${NL_WIND_SD_SOUND}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_PILOT"; then echo "wind_sd_pilot=${NL_WIND_SD_PILOT}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_AIREP"; then echo "wind_sd_airep=${NL_WIND_SD_AIREP}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_QSCAT"; then echo "wind_sd_qscat=${NL_WIND_SD_QSCAT}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_TAMDAR"; then echo "wind_sd_tamdar=${NL_WIND_SD_TAMDAR}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_GEOAMV"; then echo "wind_sd_geoamv=${NL_WIND_SD_GEOAMV}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_MTGIRS"; then echo "wind_sd_mtgirs=${NL_WIND_SD_MTGIRS}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_POLARAMV"; then echo "wind_sd_polaramv=${NL_WIND_SD_POLARAMV}," >> $FILE;fi
if test ! -z "$NL_WIND_SD_PROFILER"; then echo "wind_sd_profiler=${NL_WIND_SD_PROFILER}," >> $FILE;fi
if test ! -z "$NL_WIND_STATS_SD"; then echo "wind_stats_sd=${NL_WIND_STATS_SD}," >> $FILE;fi
if test ! -z "$NL_QC_REJ_BOTH"; then echo "qc_rej_both=${NL_QC_REJ_BOTH}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar3 >> $FILE
if test ! -z "$NL_FG_FORMAT"; then echo "fg_format=${NL_FG_FORMAT}," >> $FILE;fi
if test ! -z "$NL_OB_FORMAT"; then echo "ob_format=${NL_OB_FORMAT}," >> $FILE;fi
if test ! -z "$NL_OB_FORMAT_GPSRO"; then echo "ob_format_gpsro=${NL_OB_FORMAT_GPSRO}," >> $FILE;fi
if test ! -z "$NL_NUM_FGAT_TIME"; then echo "num_fgat_time=${NL_NUM_FGAT_TIME}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar4 >> $FILE
if test ! -z "$NL_THIN_CONV"; then echo "thin_conv=${NL_THIN_CONV}," >> $FILE;fi
if test ! -z "$NL_THIN_CONV_ASCII"; then echo "thin_conv_ascii=${NL_THIN_CONV_ASCII}," >> $FILE;fi
if test ! -z "$NL_THIN_MESH_CONV"; then echo "thin_mesh_conv=${NL_THIN_MESH_CONV}," >> $FILE;fi
if test ! -z "$NL_THIN_RAINOBS"; then echo "thin_rainobs=${NL_THIN_RAINOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SYNOPOBS"; then echo "use_synopobs=${NL_USE_SYNOPOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SHIPSOBS"; then echo "use_shipsobs=${NL_USE_SHIPSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_METAROBS"; then echo "use_metarobs=${NL_USE_METAROBS}," >> $FILE;fi
if test ! -z "$NL_USE_SOUNDOBS"; then echo "use_soundobs=${NL_USE_SOUNDOBS}," >> $FILE;fi
if test ! -z "$NL_USE_MTGIRSOBS"; then echo "use_mtgirsobs=${NL_USE_MTGIRSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_TAMDAROBS"; then echo "use_tamdarobs=${NL_USE_TAMDAROBS}," >> $FILE;fi
if test ! -z "$NL_USE_PILOTOBS"; then echo "use_pilotobs=${NL_USE_PILOTOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AIREPOBS"; then echo "use_airepobs=${NL_USE_AIREPOBS}," >> $FILE;fi
if test ! -z "$NL_USE_GEOAMVOBS"; then echo "use_geoamvobs=${NL_USE_GEOAMVOBS}," >> $FILE;fi
if test ! -z "$NL_USE_POLARAMVOBS"; then echo "use_polaramvobs=${NL_USE_POLARAMVOBS}," >> $FILE;fi
if test ! -z "$NL_USE_BOGUSOBS"; then echo "use_bogusobs=${NL_USE_BOGUSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_BUOYOBS"; then echo "use_buoyobs=${NL_USE_BUOYOBS}," >> $FILE;fi
if test ! -z "$NL_USE_PROFILEROBS"; then echo "use_profilerobs=${NL_USE_PROFILEROBS}," >> $FILE;fi
if test ! -z "$NL_USE_SATEMOBS"; then echo "use_satemobs=${NL_USE_SATEMOBS}," >> $FILE;fi
if test ! -z "$NL_USE_GPSZTDOBS"; then echo "use_gpsztdobs=${NL_USE_GPSZTDOBS}," >> $FILE;fi
if test ! -z "$NL_USE_GPSPWOBS"; then echo "use_gpspwobs=${NL_USE_GPSPWOBS}," >> $FILE;fi
if test ! -z "$NL_USE_GPSREFOBS"; then echo "use_gpsrefobs=${NL_USE_GPSREFOBS}," >> $FILE;fi
if test ! -z "$NL_TOP_KM_GPSRO"; then echo "top_km_gpsro=${NL_TOP_KM_GPSRO}," >> $FILE;fi
if test ! -z "$NL_BOT_KM_GPSRO"; then echo "bot_km_gpsro=${NL_BOT_KM_GPSRO}," >> $FILE;fi
if test ! -z "$NL_USE_SSMIRETRIEVALOBS"; then echo "use_ssmiretrievalobs=${NL_USE_SSMIRETRIEVALOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SSMITBOBS"; then echo "use_ssmitbobs=${NL_USE_SSMITBOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SSMT1OBS"; then echo "use_ssmt1obs=${NL_USE_SSMT1OBS}," >> $FILE;fi
if test ! -z "$NL_USE_SSMT2OBS"; then echo "use_ssmt2obs=${NL_USE_SSMT2OBS}," >> $FILE;fi
if test ! -z "$NL_USE_QSCATOBS"; then echo "use_qscatobs=${NL_USE_QSCATOBS}," >> $FILE;fi
if test ! -z "$NL_USE_RADAROBS"; then echo "use_radarobs=${NL_USE_RADAROBS}," >> $FILE;fi
if test ! -z "$NL_USE_RADAR_RV"; then echo "use_radar_rv=${NL_USE_RADAR_RV}," >> $FILE;fi
if test ! -z "$NL_USE_RADAR_RF"; then echo "use_radar_rf=${NL_USE_RADAR_RF}," >> $FILE;fi
if test ! -z "$NL_USE_RADAR_RQV"; then echo "use_radar_rqv=${NL_USE_RADAR_RQV}," >> $FILE;fi
if test ! -z "$NL_USE_RADAR_RHV"; then echo "use_radar_rhv=${NL_USE_RADAR_RHV}," >> $FILE;fi
if test ! -z "$NL_USE_3DVAR_PHY"; then echo "use_3dvar_phy=${NL_USE_3DVAR_PHY}," >> $FILE;fi
if test ! -z "$NL_USE_RAINOBS"; then echo "use_rainobs=${NL_USE_RAINOBS}," >> $FILE;fi
if test ! -z "$NL_USE_HIRS2OBS"; then echo "use_hirs2obs=${NL_USE_HIRS2OBS}," >> $FILE;fi
if test ! -z "$NL_USE_HIRS3OBS"; then echo "use_hirs3obs=${NL_USE_HIRS3OBS}," >> $FILE;fi
if test ! -z "$NL_USE_HIRS4OBS"; then echo "use_hirs4obs=${NL_USE_HIRS4OBS}," >> $FILE;fi
if test ! -z "$NL_USE_MHSOBS"; then echo "use_mhsobs=${NL_USE_MHSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_MSUOBS"; then echo "use_msuobs=${NL_USE_MSUOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AMSUAOBS"; then echo "use_amsuaobs=${NL_USE_AMSUAOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AMSUBOBS"; then echo "use_amsubobs=${NL_USE_AMSUBOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AIRSOBS"; then echo "use_airsobs=${NL_USE_AIRSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AIRSRETOBS"; then echo "use_airsretobs=${NL_USE_AIRSRETOBS}," >> $FILE;fi
if test ! -z "$NL_USE_EOS_AMSUAOBS"; then echo "use_eos_amsuaobs=${NL_USE_EOS_AMSUAOBS}," >> $FILE;fi
if test ! -z "$NL_USE_HSBOBS"; then echo "use_hsbobs=${NL_USE_HSBOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SSMISOBS"; then echo "use_ssmisobs=${NL_USE_SSMISOBS}," >> $FILE;fi
if test ! -z "$NL_USE_IASIOBS"; then echo "use_iasiobs=${NL_USE_IASIOBS}," >> $FILE;fi
if test ! -z "$NL_USE_SEVIRIOBS"; then echo "use_seviriobs=${NL_USE_SEVIRIOBS}," >> $FILE;fi
if test ! -z "$NL_USE_AMSR2OBS"; then echo "use_amsr2obs=${NL_USE_AMSR2OBS}," >> $FILE;fi
if test ! -z "$NL_USE_KMA1DVAR"; then echo "use_kma1dvar=${NL_USE_KMA1DVAR}," >> $FILE;fi
if test ! -z "$NL_USE_FILTERED_RAD"; then echo "use_filtered_rad=${NL_USE_FILTERED_RAD}," >> $FILE;fi
if test ! -z "$NL_USE_OBS_ERRFAC"; then echo "use_obs_errfac=${NL_USE_OBS_ERRFAC}," >> $FILE;fi
if test ! -z "$NL_USE_ATMSOBS"; then echo "use_atmsobs=${NL_USE_ATMSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_MWTSOBS"; then echo "use_mwtsobs=${NL_USE_MWTSOBS}," >> $FILE;fi
if test ! -z "$NL_USE_MWHSOBS"; then echo "use_mwhsobs=${NL_USE_MWHSOBS}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar5 >> $FILE
if test ! -z "$NL_CHECK_MAX_IV"; then echo "check_max_iv=${NL_CHECK_MAX_IV}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_T"; then echo "max_error_t=${NL_MAX_ERROR_T}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_UV"; then echo "max_error_uv=${NL_MAX_ERROR_UV}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_SPD"; then echo "max_error_spd=${NL_MAX_ERROR_SPD}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_DIR"; then echo "max_error_dir=${NL_MAX_ERROR_DIR}," >> $FILE;fi
if test ! -z "$NL_MAX_OMB_SPD"; then echo "max_omb_spd=${NL_MAX_OMB_SPD}," >> $FILE;fi
if test ! -z "$NL_MAX_OMB_DIR"; then echo "max_omb_dir=${NL_MAX_OMB_DIR}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_PW"; then echo "max_error_pw=${NL_MAX_ERROR_PW}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_REF"; then echo "max_error_ref=${NL_MAX_ERROR_REF}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_RH"; then echo "max_error_rh=${NL_MAX_ERROR_RH}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_Q"; then echo "max_error_q=${NL_MAX_ERROR_Q}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_P"; then echo "max_error_p=${NL_MAX_ERROR_P}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_TB"; then echo "max_error_tb=${NL_MAX_ERROR_TB}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_THICKNESS"; then echo "max_error_thickness=${NL_MAX_ERROR_THICKNESS}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_RV"; then echo "max_error_rv=${NL_MAX_ERROR_RV}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_RF"; then echo "max_error_rf=${NL_MAX_ERROR_RF}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_RAIN"; then echo "max_error_rain=${NL_MAX_ERROR_RAIN}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_BUV"; then echo "max_error_buv=${NL_MAX_ERROR_BUV}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_BT"; then echo "max_error_bt=${NL_MAX_ERROR_BT}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_BQ"; then echo "max_error_bq=${NL_MAX_ERROR_BQ}," >> $FILE;fi
if test ! -z "$NL_MAX_ERROR_SLP"; then echo "max_error_slp=${NL_MAX_ERROR_SLP}," >> $FILE;fi
if test ! -z "$NL_CHECK_BUDDY"; then echo "check_buddy=${NL_CHECK_BUDDY}," >> $FILE;fi
if test ! -z "$NL_PUT_RAND_SEED"; then echo "put_rand_seed=${NL_PUT_RAND_SEED}," >> $FILE;fi
if test ! -z "$NL_OMB_SET_RAND"; then echo "omb_set_rand=${NL_OMB_SET_RAND}," >> $FILE;fi
if test ! -z "$NL_OMB_ADD_NOISE"; then echo "omb_add_noise=${NL_OMB_ADD_NOISE}," >> $FILE;fi
if test ! -z "$NL_POSITION_LEV_DEPENDANT"; then echo "position_lev_dependant=${NL_POSITION_LEV_DEPENDANT}," >> $FILE;fi
if test ! -z "$NL_OBS_QC_POINTER"; then echo "obs_qc_pointer=${NL_OBS_QC_POINTER}," >> $FILE;fi
if test ! -z "$NL_QMARKER_RETAIN"; then echo "qmarker_retain=${NL_QMARKER_RETAIN}," >> $FILE;fi
if test ! -z "$NL_MAX_SOUND_INPUT"; then echo "max_sound_input=${NL_MAX_SOUND_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_MTGIRS_INPUT"; then echo "max_mtgirs_input=${NL_MAX_MTGIRS_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_TAMDAR_INPUT"; then echo "max_tamdar_input=${NL_MAX_TAMDAR_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SYNOP_INPUT"; then echo "max_synop_input=${NL_MAX_SYNOP_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_GEOAMV_INPUT"; then echo "max_geoamv_input=${NL_MAX_GEOAMV_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_POLARAMV_INPUT"; then echo "max_polaramv_input=${NL_MAX_POLARAMV_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_AIREP_INPUT"; then echo "max_airep_input=${NL_MAX_AIREP_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SATEM_INPUT"; then echo "max_satem_input=${NL_MAX_SATEM_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_PILOT_INPUT"; then echo "max_pilot_input=${NL_MAX_PILOT_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_RADAR_INPUT"; then echo "max_radar_input=${NL_MAX_RADAR_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_RAIN_INPUT"; then echo "max_rain_input=${NL_MAX_RAIN_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_METAR_INPUT"; then echo "max_metar_input=${NL_MAX_METAR_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_GPSPW_INPUT"; then echo "max_gpspw_input=${NL_MAX_GPSPW_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SHIPS_INPUT"; then echo "max_ships_input=${NL_MAX_SHIPS_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_PROFILER_INPUT"; then echo "max_profiler_input=${NL_MAX_PROFILER_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_BOGUS_INPUT"; then echo "max_bogus_input=${NL_MAX_BOGUS_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_BUOY_INPUT"; then echo "max_buoy_input=${NL_MAX_BUOY_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SSMI_RV_INPUT"; then echo "max_ssmi_rv_input=${NL_MAX_SSMI_RV_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SSMI_TB_INPUT"; then echo "max_ssmi_tb_input=${NL_MAX_SSMI_TB_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SSMT1_INPUT"; then echo "max_ssmt1_input=${NL_MAX_SSMT1_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SSMT2_INPUT"; then echo "max_ssmt2_input=${NL_MAX_SSMT2_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_QSCAT_INPUT"; then echo "max_qscat_input=${NL_MAX_QSCAT_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_GPSREF_INPUT"; then echo "max_gpsref_input=${NL_MAX_GPSREF_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_AIRSR_INPUT"; then echo "max_airsr_input=${NL_MAX_AIRSR_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_TOVS_INPUT"; then echo "max_tovs_input=${NL_MAX_TOVS_INPUT}," >> $FILE;fi
if test ! -z "$NL_MAX_SSMIS_INPUT"; then echo "max_ssmis_input=${NL_MAX_SSMIS_INPUT}," >> $FILE;fi
if test ! -z "$NL_REPORT_START"; then echo "report_start=${NL_REPORT_START}," >> $FILE;fi
if test ! -z "$NL_REPORT_END"; then echo "report_end=${NL_REPORT_END}," >> $FILE;fi
if test ! -z "$NL_TOVS_START"; then echo "tovs_start=${NL_TOVS_START}," >> $FILE;fi
if test ! -z "$NL_TOVS_END"; then echo "tovs_end=${NL_TOVS_END}," >> $FILE;fi
if test ! -z "$NL_GPSREF_THINNING"; then echo "gpsref_thinning=${NL_GPSREF_THINNING}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar6 >> $FILE
if test ! -z "$NL_OUTER_LOOP_RESTART"; then echo "outer_loop_restart=${NL_OUTER_LOOP_RESTART}," >> $FILE;fi
if test ! -z "$NL_MAX_EXT_ITS"; then echo "max_ext_its=${NL_MAX_EXT_ITS}," >> $FILE;fi
if test ! -z "$NL_NTMAX"; then echo "ntmax=${NL_NTMAX}," >> $FILE;fi
if test ! -z "$NL_NSAVE"; then echo "nsave=${NL_NSAVE}," >> $FILE;fi
if test ! -z "$NL_WRITE_INTERVAL"; then echo "write_interval=${NL_WRITE_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_EPS"; then echo "eps=${NL_EPS}," >> $FILE;fi
if test ! -z "$NL_PRECONDITION_CG"; then echo "precondition_cg=${NL_PRECONDITION_CG}," >> $FILE;fi
if test ! -z "$NL_PRECONDITION_FACTOR"; then echo "precondition_factor=${NL_PRECONDITION_FACTOR}," >> $FILE;fi
if test ! -z "$NL_USE_LANCZOS"; then echo "use_lanczos=${NL_USE_LANCZOS}," >> $FILE;fi
if test ! -z "$NL_READ_LANCZOS"; then echo "read_lanczos=${NL_READ_LANCZOS}," >> $FILE;fi
if test ! -z "$NL_WRITE_LANCZOS"; then echo "write_lanczos=${NL_WRITE_LANCZOS}," >> $FILE;fi
if test ! -z "$NL_ORTHONORM_GRADIENT"; then echo "orthonorm_gradient=${NL_ORTHONORM_GRADIENT}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar7 >> $FILE
if test ! -z "$NL_CV_OPTIONS"; then echo "cv_options=${NL_CV_OPTIONS}," >> $FILE;fi
if test ! -z "$NL_CLOUD_CV_OPTIONS"; then echo "cloud_cv_options=${NL_CLOUD_CV_OPTIONS}," >> $FILE;fi
if test ! -z "$NL_AS1"; then echo "as1=${NL_AS1}," >> $FILE;fi
if test ! -z "$NL_AS2"; then echo "as2=${NL_AS2}," >> $FILE;fi
if test ! -z "$NL_AS3"; then echo "as3=${NL_AS3}," >> $FILE;fi
if test ! -z "$NL_AS4"; then echo "as4=${NL_AS4}," >> $FILE;fi
if test ! -z "$NL_AS5"; then echo "as5=${NL_AS5}," >> $FILE;fi
if test ! -z "$NL_DO_NORMALIZE"; then echo "do_normalize=${NL_DO_NORMALIZE}," >> $FILE;fi
if test ! -z "$NL_USE_RF"; then echo "use_rf=${NL_USE_RF}," >> $FILE;fi
if test ! -z "$NL_RF_PASSES"; then echo "rf_passes=${NL_RF_PASSES}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING1"; then echo "var_scaling1=${NL_VAR_SCALING1}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING2"; then echo "var_scaling2=${NL_VAR_SCALING2}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING3"; then echo "var_scaling3=${NL_VAR_SCALING3}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING4"; then echo "var_scaling4=${NL_VAR_SCALING4}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING5"; then echo "var_scaling5=${NL_VAR_SCALING5}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING6"; then echo "var_scaling6=${NL_VAR_SCALING6}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING7"; then echo "var_scaling7=${NL_VAR_SCALING7}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING8"; then echo "var_scaling8=${NL_VAR_SCALING8}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING9"; then echo "var_scaling9=${NL_VAR_SCALING9}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING10"; then echo "var_scaling10=${NL_VAR_SCALING10}," >> $FILE;fi
if test ! -z "$NL_VAR_SCALING11"; then echo "var_scaling11=${NL_VAR_SCALING11}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING1"; then echo "len_scaling1=${NL_LEN_SCALING1}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING2"; then echo "len_scaling2=${NL_LEN_SCALING2}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING3"; then echo "len_scaling3=${NL_LEN_SCALING3}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING4"; then echo "len_scaling4=${NL_LEN_SCALING4}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING5"; then echo "len_scaling5=${NL_LEN_SCALING5}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING6"; then echo "len_scaling6=${NL_LEN_SCALING6}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING7"; then echo "len_scaling7=${NL_LEN_SCALING7}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING8"; then echo "len_scaling8=${NL_LEN_SCALING8}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING9"; then echo "len_scaling9=${NL_LEN_SCALING9}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING10"; then echo "len_scaling10=${NL_LEN_SCALING10}," >> $FILE;fi
if test ! -z "$NL_LEN_SCALING11"; then echo "len_scaling11=${NL_LEN_SCALING11}," >> $FILE;fi
if test ! -z "$NL_JE_FACTOR"; then echo "je_factor=${NL_JE_FACTOR}," >> $FILE;fi
if test ! -z "$NL_POWER_TRUNCATION"; then echo "power_truncation=${NL_POWER_TRUNCATION}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar8 >> $FILE
if test ! -z "$NL_DEF_SUB_DOMAIN"; then echo "def_sub_domain=${NL_DEF_SUB_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_X_START_SUB_DOMAIN"; then echo "x_start_sub_domain=${NL_X_START_SUB_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_Y_START_SUB_DOMAIN"; then echo "y_start_sub_domain=${NL_Y_START_SUB_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_X_END_SUB_DOMAIN"; then echo "x_end_sub_domain=${NL_X_END_SUB_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_Y_END_SUB_DOMAIN"; then echo "y_end_sub_domain=${NL_Y_END_SUB_DOMAIN}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar9 >> $FILE
if test ! -z "$NL_STDOUT"; then echo "stdout=${NL_STDOUT}," >> $FILE;fi
if test ! -z "$NL_STDERR"; then echo "stderr=${NL_STDERR}," >> $FILE;fi
if test ! -z "$NL_TRACE_UNIT"; then echo "trace_unit=${NL_TRACE_UNIT}," >> $FILE;fi
if test ! -z "$NL_TRACE_PE"; then echo "trace_pe=${NL_TRACE_PE}," >> $FILE;fi
if test ! -z "$NL_TRACE_REPEAT_HEAD"; then echo "trace_repeat_head=${NL_TRACE_REPEAT_HEAD}," >> $FILE;fi
if test ! -z "$NL_TRACE_REPEAT_BODY"; then echo "trace_repeat_body=${NL_TRACE_REPEAT_BODY}," >> $FILE;fi
if test ! -z "$NL_TRACE_MAX_DEPTH"; then echo "trace_max_depth=${NL_TRACE_MAX_DEPTH}," >> $FILE;fi
if test ! -z "$NL_TRACE_USE"; then echo "trace_use=${NL_TRACE_USE}," >> $FILE;fi
if test ! -z "$NL_TRACE_USE_FREQUENT"; then echo "trace_use_frequent=${NL_TRACE_USE_FREQUENT}," >> $FILE;fi
if test ! -z "$NL_TRACE_USE_DULL"; then echo "trace_use_dull=${NL_TRACE_USE_DULL}," >> $FILE;fi
if test ! -z "$NL_TRACE_MEMORY"; then echo "trace_memory=${NL_TRACE_MEMORY}," >> $FILE;fi
if test ! -z "$NL_TRACE_ALL_PES"; then echo "trace_all_pes=${NL_TRACE_ALL_PES}," >> $FILE;fi
if test ! -z "$NL_TRACE_CSV"; then echo "trace_csv=${NL_TRACE_CSV}," >> $FILE;fi
if test ! -z "$NL_USE_HTML"; then echo "use_html=${NL_USE_HTML}," >> $FILE;fi
if test ! -z "$NL_WARNINGS_ARE_FATAL"; then echo "warnings_are_fatal=${NL_WARNINGS_ARE_FATAL}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar10 >> $FILE
if test ! -z "$NL_TEST_TRANSFORMS"; then echo "test_transforms=${NL_TEST_TRANSFORMS}," >> $FILE;fi
if test ! -z "$NL_TEST_GRADIENT"; then echo "test_gradient=${NL_TEST_GRADIENT}," >> $FILE;fi
if test ! -z "$NL_TEST_STATISTICS"; then echo "test_statistics=${NL_TEST_STATISTICS}," >> $FILE;fi
if test ! -z "$NL_INTERPOLATE_STATS"; then echo "interpolate_stats=${NL_INTERPOLATE_STATS}," >> $FILE;fi
if test ! -z "$NL_BE_ETA"; then echo "be_eta=${NL_BE_ETA}," >> $FILE;fi
if test ! -z "$NL_TEST_DM_EXACT"; then echo "test_dm_exact=${NL_TEST_DM_EXACT}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar11 >> $FILE
if test ! -z "$NL_CV_OPTIONS_HUM"; then echo "cv_options_hum=${NL_CV_OPTIONS_HUM}," >> $FILE;fi
if test ! -z "$NL_CHECK_RH"; then echo "check_rh=${NL_CHECK_RH}," >> $FILE;fi
if test ! -z "$NL_SET_OMB_RAND_FAC"; then echo "set_omb_rand_fac=${NL_SET_OMB_RAND_FAC}," >> $FILE;fi
if test ! -z "$NL_SEED_ARRAY1"; then echo "seed_array1=${NL_SEED_ARRAY1}," >> $FILE;fi
if test ! -z "$NL_SEED_ARRAY2"; then echo "seed_array2=${NL_SEED_ARRAY2}," >> $FILE;fi
if test ! -z "$NL_SFC_ASSI_OPTIONS"; then echo "sfc_assi_options=${NL_SFC_ASSI_OPTIONS}," >> $FILE;fi
if test ! -z "$NL_PSFC_FROM_SLP"; then echo "psfc_from_slp=${NL_PSFC_FROM_SLP}," >> $FILE;fi
if test ! -z "$NL_CALCULATE_CG_COST_FN"; then echo "calculate_cg_cost_fn=${NL_CALCULATE_CG_COST_FN}," >> $FILE;fi
if test ! -z "$NL_LAT_STATS_OPTION"; then echo "lat_stats_option=${NL_LAT_STATS_OPTION}," >> $FILE;fi
if test ! -z "$NL_INTERP_OPTION"; then echo "interp_option=${NL_INTERP_OPTION}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar12 >> $FILE
if test ! -z "$NL_BALANCE_TYPE"; then echo "balance_type=${NL_BALANCE_TYPE}," >> $FILE;fi
if test ! -z "$NL_USE_WPEC"; then echo "use_wpec=${NL_USE_WPEC}," >> $FILE;fi
if test ! -z "$NL_WPEC_FACTOR"; then echo "wpec_factor=${NL_WPEC_FACTOR}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar13 >> $FILE
if test ! -z "$NL_VERT_CORR"; then echo "vert_corr=${NL_VERT_CORR}," >> $FILE;fi
if test ! -z "$NL_VERTICAL_IP"; then echo "vertical_ip=${NL_VERTICAL_IP}," >> $FILE;fi
if test ! -z "$NL_VERT_EVALUE"; then echo "vert_evalue=${NL_VERT_EVALUE}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR1"; then echo "max_vert_var1=${NL_MAX_VERT_VAR1}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR2"; then echo "max_vert_var2=${NL_MAX_VERT_VAR2}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR3"; then echo "max_vert_var3=${NL_MAX_VERT_VAR3}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR4"; then echo "max_vert_var4=${NL_MAX_VERT_VAR4}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR5"; then echo "max_vert_var5=${NL_MAX_VERT_VAR5}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR6"; then echo "max_vert_var6=${NL_MAX_VERT_VAR6}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR7"; then echo "max_vert_var7=${NL_MAX_VERT_VAR7}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR8"; then echo "max_vert_var8=${NL_MAX_VERT_VAR8}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR9"; then echo "max_vert_var9=${NL_MAX_VERT_VAR9}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR10"; then echo "max_vert_var10=${NL_MAX_VERT_VAR10}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR11"; then echo "max_vert_var11=${NL_MAX_VERT_VAR11}," >> $FILE;fi
if test ! -z "$NL_MAX_VERT_VAR_ALPHA"; then echo "max_vert_var_alpha=${NL_MAX_VERT_VAR_ALPHA}," >> $FILE;fi
if test ! -z "$NL_PSI_CHI_FACTOR"; then echo "psi_chi_factor=${NL_PSI_CHI_FACTOR}," >> $FILE;fi
if test ! -z "$NL_PSI_T_FACTOR"; then echo "psi_t_factor=${NL_PSI_T_FACTOR}," >> $FILE;fi
if test ! -z "$NL_PSI_PS_FACTOR"; then echo "psi_ps_factor=${NL_PSI_PS_FACTOR}," >> $FILE;fi
if test ! -z "$NL_PSI_RH_FACTOR"; then echo "psi_rh_factor=${NL_PSI_RH_FACTOR}," >> $FILE;fi
if test ! -z "$NL_CHI_U_T_FACTOR"; then echo "chi_u_t_factor=${NL_CHI_U_T_FACTOR}," >> $FILE;fi
if test ! -z "$NL_CHI_U_PS_FACTOR"; then echo "chi_u_ps_factor=${NL_CHI_U_PS_FACTOR}," >> $FILE;fi
if test ! -z "$NL_CHI_U_RH_FACTOR"; then echo "chi_u_rh_factor=${NL_CHI_U_RH_FACTOR}," >> $FILE;fi
if test ! -z "$NL_T_U_RH_FACTOR"; then echo "t_u_rh_factor=${NL_T_U_RH_FACTOR}," >> $FILE;fi
if test ! -z "$NL_PS_U_RH_FACTOR"; then echo "ps_u_rh_factor=${NL_PS_U_RH_FACTOR}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar14 >> $FILE
if test ! -z "$NL_RTTOV_EMIS_ATLAS_IR"; then echo "rttov_emis_atlas_ir=${NL_RTTOV_EMIS_ATLAS_IR}," >> $FILE;fi
if test ! -z "$NL_RTTOV_EMIS_ATLAS_MW"; then echo "rttov_emis_atlas_mw=${NL_RTTOV_EMIS_ATLAS_MW}," >> $FILE;fi
if test ! -z "$NL_RTMINIT_PRINT"; then echo "rtminit_print=${NL_RTMINIT_PRINT}," >> $FILE;fi
if test ! -z "$NL_RTMINIT_NSENSOR"; then echo "rtminit_nsensor=${NL_RTMINIT_NSENSOR}," >> $FILE;fi
if test ! -z "$NL_RTMINIT_PLATFORM"; then echo "rtminit_platform=${NL_RTMINIT_PLATFORM}," >> $FILE;fi
if test ! -z "$NL_RTMINIT_SATID"; then echo "rtminit_satid=${NL_RTMINIT_SATID}," >> $FILE;fi
if test ! -z "$NL_RTMINIT_SENSOR"; then echo "rtminit_sensor=${NL_RTMINIT_SENSOR}," >> $FILE;fi
if test ! -z "$NL_RAD_MONITORING"; then echo "rad_monitoring=${NL_RAD_MONITORING}," >> $FILE;fi
if test ! -z "$NL_THINNING_MESH"; then echo "thinning_mesh=${NL_THINNING_MESH}," >> $FILE;fi
if test ! -z "$NL_THINNING"; then echo "thinning=${NL_THINNING}," >> $FILE;fi
if test ! -z "$NL_READ_BIASCOEF"; then echo "read_biascoef=${NL_READ_BIASCOEF}," >> $FILE;fi
if test ! -z "$NL_BIASCORR"; then echo "biascorr=${NL_BIASCORR}," >> $FILE;fi
if test ! -z "$NL_BIASPREP"; then echo "biasprep=${NL_BIASPREP}," >> $FILE;fi
if test ! -z "$NL_RTTOV_SCATT"; then echo "rttov_scatt=${NL_RTTOV_SCATT}," >> $FILE;fi
if test ! -z "$NL_WRITE_PROFILE"; then echo "write_profile=${NL_WRITE_PROFILE}," >> $FILE;fi
if test ! -z "$NL_WRITE_JACOBIAN"; then echo "write_jacobian=${NL_WRITE_JACOBIAN}," >> $FILE;fi
if test ! -z "$NL_QC_RAD"; then echo "qc_rad=${NL_QC_RAD}," >> $FILE;fi
if test ! -z "$NL_WRITE_IV_RAD_ASCII"; then echo "write_iv_rad_ascii=${NL_WRITE_IV_RAD_ASCII}," >> $FILE;fi
if test ! -z "$NL_WRITE_OA_RAD_ASCII"; then echo "write_oa_rad_ascii=${NL_WRITE_OA_RAD_ASCII}," >> $FILE;fi
if test ! -z "$NL_WRITE_FILTERED_RAD"; then echo "write_filtered_rad=${NL_WRITE_FILTERED_RAD}," >> $FILE;fi
if test ! -z "$NL_USE_ERROR_FACTOR_RAD"; then echo "use_error_factor_rad=${NL_USE_ERROR_FACTOR_RAD}," >> $FILE;fi
if test ! -z "$NL_USE_LANDEM"; then echo "use_landem=${NL_USE_LANDEM}," >> $FILE;fi
if test ! -z "$NL_USE_ANTCORR"; then echo "use_antcorr=${NL_USE_ANTCORR}," >> $FILE;fi
if test ! -z "$NL_USE_MSPPS_EMIS"; then echo "use_mspps_emis=${NL_USE_MSPPS_EMIS}," >> $FILE;fi
if test ! -z "$NL_USE_MSPPS_TS"; then echo "use_mspps_ts=${NL_USE_MSPPS_TS}," >> $FILE;fi
if test ! -z "$NL_MW_EMIS_SEA"; then echo "mw_emis_sea=${NL_MW_EMIS_SEA}," >> $FILE;fi
if test ! -z "$NL_TOVS_MIN_TRANSFER"; then echo "tovs_min_transfer=${NL_TOVS_MIN_TRANSFER}," >> $FILE;fi
if test ! -z "$NL_TOVS_BATCH"; then echo "tovs_batch=${NL_TOVS_BATCH}," >> $FILE;fi
if test ! -z "$NL_RTM_OPTION"; then echo "rtm_option=${NL_RTM_OPTION}," >> $FILE;fi
if test ! -z "$NL_USE_CRTM_KMATRIX"; then echo "use_crtm_kmatrix=${NL_USE_CRTM_KMATRIX}," >> $FILE;fi
if test ! -z "$NL_USE_RTTOV_KMATRIX"; then echo "use_rttov_kmatrix=${NL_USE_RTTOV_KMATRIX}," >> $FILE;fi
if test ! -z "$NL_CRTM_CLOUD"; then echo "crtm_cloud=${NL_CRTM_CLOUD}," >> $FILE;fi
if test ! -z "$NL_ONLY_SEA_RAD"; then echo "only_sea_rad=${NL_ONLY_SEA_RAD}," >> $FILE;fi
if test ! -z "$NL_USE_PSEUDO_RAD"; then echo "use_pseudo_rad=${NL_USE_PSEUDO_RAD}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_PLATID"; then echo "pseudo_rad_platid=${NL_PSEUDO_RAD_PLATID}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_SATID"; then echo "pseudo_rad_satid=${NL_PSEUDO_RAD_SATID}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_SENID"; then echo "pseudo_rad_senid=${NL_PSEUDO_RAD_SENID}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_ICHAN"; then echo "pseudo_rad_ichan=${NL_PSEUDO_RAD_ICHAN}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_LAT"; then echo "pseudo_rad_lat=${NL_PSEUDO_RAD_LAT}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_LON"; then echo "pseudo_rad_lon=${NL_PSEUDO_RAD_LON}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_INV"; then echo "pseudo_rad_inv=${NL_PSEUDO_RAD_INV}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_RAD_ERR"; then echo "pseudo_rad_err=${NL_PSEUDO_RAD_ERR}," >> $FILE;fi
if test ! -z "$NL_USE_SIMULATED_RAD"; then echo "use_simulated_rad=${NL_USE_SIMULATED_RAD}," >> $FILE;fi
if test ! -z "$NL_SIMULATED_RAD_IO"; then echo "simulated_rad_io=${NL_SIMULATED_RAD_IO}," >> $FILE;fi
if test ! -z "$NL_SIMULATED_RAD_NGRID"; then echo "simulated_rad_ngrid=${NL_SIMULATED_RAD_NGRID}," >> $FILE;fi
if test ! -z "$NL_USE_VARBC"; then echo "use_varbc=${NL_USE_VARBC}," >> $FILE;fi
if test ! -z "$NL_FREEZE_VARBC"; then echo "freeze_varbc=${NL_FREEZE_VARBC}," >> $FILE;fi
if test ! -z "$NL_VARBC_FACTOR"; then echo "varbc_factor=${NL_VARBC_FACTOR}," >> $FILE;fi
if test ! -z "$NL_VARBC_NBGERR"; then echo "varbc_nbgerr=${NL_VARBC_NBGERR}," >> $FILE;fi
if test ! -z "$NL_VARBC_NOBSMIN"; then echo "varbc_nobsmin=${NL_VARBC_NOBSMIN}," >> $FILE;fi
if test ! -z "$NL_USE_CLDDET_MMR"; then echo "use_clddet_mmr=${NL_USE_CLDDET_MMR}," >> $FILE;fi
if test ! -z "$NL_USE_CLDDET_ECMWF"; then echo "use_clddet_ecmwf=${NL_USE_CLDDET_ECMWF}," >> $FILE;fi
if test ! -z "$NL_AIRS_WARMEST_FOV"; then echo "airs_warmest_fov=${NL_AIRS_WARMEST_FOV}," >> $FILE;fi
if test ! -z "$NL_USE_SATCV"; then echo "use_satcv=${NL_USE_SATCV}," >> $FILE;fi
if test ! -z "$NL_USE_BLACKLIST_RAD"; then echo "use_blacklist_rad=${NL_USE_BLACKLIST_RAD}," >> $FILE;fi
if test ! -z "$NL_CALC_WEIGHTFUNC"; then echo "calc_weightfunc=${NL_CALC_WEIGHTFUNC}," >> $FILE;fi
if test ! -z "$NL_CRTM_COEF_PATH"; then echo "crtm_coef_path=\"${NL_CRTM_COEF_PATH}\"," >> $FILE;fi
if test ! -z "$NL_CRTM_IRWATER_COEF"; then echo "crtm_irwater_coef=\"${NL_CRTM_IRWATER_COEF}\"," >> $FILE;fi
if test ! -z "$NL_CRTM_MWWATER_COEF"; then echo "crtm_mwwater_coef=\"${NL_CRTM_MWWATER_COEF}\"," >> $FILE;fi
if test ! -z "$NL_CRTM_IRLAND_COEF"; then echo "crtm_irland_coef=\"${NL_CRTM_IRLAND_COEF}\"," >> $FILE;fi
if test ! -z "$NL_CRTM_VISLAND_COEF"; then echo "crtm_visland_coef=\"${NL_CRTM_VISLAND_COEF}\"," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar15 >> $FILE
if test ! -z "$NL_NUM_PSEUDO"; then echo "num_pseudo=${NL_NUM_PSEUDO}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_X"; then echo "pseudo_x=${NL_PSEUDO_X}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_Y"; then echo "pseudo_y=${NL_PSEUDO_Y}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_Z"; then echo "pseudo_z=${NL_PSEUDO_Z}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_VAL"; then echo "pseudo_val=${NL_PSEUDO_VAL}," >> $FILE;fi
if test ! -z "$NL_PSEUDO_ERR"; then echo "pseudo_err=${NL_PSEUDO_ERR}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar16 >> $FILE
if test ! -z "$NL_ALPHACV_METHOD"; then echo "alphacv_method=${NL_ALPHACV_METHOD}," >> $FILE;fi
if test ! -z "$NL_ENSDIM_ALPHA"; then echo "ensdim_alpha=${NL_ENSDIM_ALPHA}," >> $FILE;fi
if test ! -z "$NL_ALPHA_TRUNCATION"; then echo "alpha_truncation=${NL_ALPHA_TRUNCATION}," >> $FILE;fi
if test ! -z "$NL_ALPHA_CORR_TYPE"; then echo "alpha_corr_type=${NL_ALPHA_CORR_TYPE}," >> $FILE;fi
if test ! -z "$NL_ALPHA_CORR_SCALE"; then echo "alpha_corr_scale=${NL_ALPHA_CORR_SCALE}," >> $FILE;fi
if test ! -z "$NL_ALPHA_STD_DEV"; then echo "alpha_std_dev=${NL_ALPHA_STD_DEV}," >> $FILE;fi
if test ! -z "$NL_ALPHA_VERTLOC"; then echo "alpha_vertloc=${NL_ALPHA_VERTLOC}," >> $FILE;fi
if test ! -z "$NL_ALPHA_HYDROMETEORS"; then echo "alpha_hydrometeors=${NL_ALPHA_HYDROMETEORS}," >> $FILE;fi
if test ! -z "$NL_HYBRID_DUAL_RES"; then echo "hybrid_dual_res=${NL_HYBRID_DUAL_RES}," >> $FILE;fi
if test ! -z "$NL_DUAL_RES_UPSCALE_OPT"; then echo "dual_res_upscale_opt=${NL_DUAL_RES_UPSCALE_OPT}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar17 >> $FILE
if test ! -z "$NL_ANALYSIS_TYPE"; then echo "analysis_type=\"${NL_ANALYSIS_TYPE}\"," >> $FILE;fi
if test ! -z "$NL_SENSITIVITY_OPTION"; then echo "sensitivity_option=${NL_SENSITIVITY_OPTION}," >> $FILE;fi
if test ! -z "$NL_ADJ_SENS"; then echo "adj_sens=${NL_ADJ_SENS}," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar18 >> $FILE
if test ! -z "$NL_ANALYSIS_DATE"; then echo "analysis_date=\"${NL_ANALYSIS_DATE}\"," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar19 >> $FILE
if test ! -z "$NL_PSEUDO_VAR"; then echo "pseudo_var=\"${NL_PSEUDO_VAR}\"," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar20 >> $FILE
if test ! -z "$NL_DOCUMENTATION_URL"; then echo "documentation_url=\"${NL_DOCUMENTATION_URL}\"," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar21 >> $FILE
if test ! -z "$NL_TIME_WINDOW_MIN"; then echo "time_window_min=\"${NL_TIME_WINDOW_MIN}\"," >> $FILE;fi
echo / >> $FILE
echo \&wrfvar22 >> $FILE
if test ! -z "$NL_TIME_WINDOW_MAX"; then echo "time_window_max=\"${NL_TIME_WINDOW_MAX}\"," >> $FILE;fi
echo / >> $FILE
echo \&perturbation >> $FILE
if test ! -z "$NL_JCDFI_USE"; then echo "jcdfi_use=${NL_JCDFI_USE}," >> $FILE;fi
if test ! -z "$NL_JCDFI_DIAG"; then echo "jcdfi_diag=${NL_JCDFI_DIAG}," >> $FILE;fi
if test ! -z "$NL_JCDFI_PENALTY"; then echo "jcdfi_penalty=${NL_JCDFI_PENALTY}," >> $FILE;fi
if test ! -z "$NL_ENABLE_IDENTITY"; then echo "enable_identity=${NL_ENABLE_IDENTITY}," >> $FILE;fi
if test ! -z "$NL_TRAJECTORY_IO"; then echo "trajectory_io=${NL_TRAJECTORY_IO}," >> $FILE;fi
if test ! -z "$NL_VAR4D_DETAIL_OUT"; then echo "var4d_detail_out=${NL_VAR4D_DETAIL_OUT}," >> $FILE;fi
if test ! -z "$NL_VAR4D_RUN"; then echo "var4d_run=${NL_VAR4D_RUN}," >> $FILE;fi
echo / >> $FILE
echo \&namelist_quilt >> $FILE
if test ! -z "$NL_NIO_TASKS_PER_GROUP"; then echo "nio_tasks_per_group=${NL_NIO_TASKS_PER_GROUP}," >> $FILE;fi
if test ! -z "$NL_NIO_GROUPS"; then echo "nio_groups=${NL_NIO_GROUPS}," >> $FILE;fi
echo / >> $FILE
